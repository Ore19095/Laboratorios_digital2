

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 03 16:41:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375                           
   376                           	psect	idataCOMMON
   377  0248                     __pidataCOMMON:
   378                           
   379                           ;initializer for _portbActual
   380  0248  34FF               	retlw	255
   381                           
   382                           ;initializer for _portbAnterior
   383  0249  34FF               	retlw	255
   384                           
   385                           	psect	idataBANK0
   386  0220                     __pidataBANK0:
   387                           
   388                           ;initializer for _tableDisplay
   389  0220  343F               	retlw	63
   390  0221  3406               	retlw	6
   391  0222  345B               	retlw	91
   392  0223  344F               	retlw	79
   393  0224  3466               	retlw	102
   394  0225  346D               	retlw	109
   395  0226  347D               	retlw	125
   396  0227  3407               	retlw	7
   397  0228  347F               	retlw	127
   398  0229  346F               	retlw	111
   399  022A  3477               	retlw	119
   400  022B  347C               	retlw	124
   401  022C  3458               	retlw	88
   402  022D  345E               	retlw	94
   403  022E  3479               	retlw	121
   404  022F  3471               	retlw	113
   405                           
   406                           	psect	nvBANK0
   407  0053                     __pnvBANK0:
   408  0053                     _displayPort:
   409  0053                     	ds	2
   410  0001                     _TMR0	set	1
   411  001E                     _ADRESH	set	30
   412  001F                     _ADCON0bits	set	31
   413  000C                     _PIR1bits	set	12
   414  0006                     _PORTB	set	6
   415  0012                     _T2CON	set	18
   416  000D                     _PIR2	set	13
   417  000B                     _INTCONbits	set	11
   418  0008                     _PORTD	set	8
   419  0007                     _PORTC	set	7
   420  002B                     _RA3	set	43
   421  002A                     _RA2	set	42
   422  0029                     _RA1	set	41
   423  009F                     _ADCON1bits	set	159
   424  008C                     _PIE1bits	set	140
   425  0081                     _OPTION_REGbits	set	129
   426  0096                     _IOCB	set	150
   427  0088                     _TRISD	set	136
   428  0087                     _TRISC	set	135
   429  0086                     _TRISB	set	134
   430  0085                     _TRISA	set	133
   431  0189                     _ANSELH	set	393
   432  0188                     _ANSEL	set	392
   433                           
   434                           	psect	cinit
   435  0011                     start_initialization:	
   436                           ; #config settings
   437                           
   438  0011                     __initialization:
   439                           
   440                           ; Initialize objects allocated to BANK0
   441  0011  1383               	bcf	3,7	;select IRP bank0
   442  0012  3044               	movlw	low (__pdataBANK0+16)
   443  0013  00FD               	movwf	btemp+-1
   444  0014  3002               	movlw	high __pidataBANK0
   445  0015  00FE               	movwf	btemp
   446  0016  3020               	movlw	low __pidataBANK0
   447  0017  00FF               	movwf	btemp+1
   448  0018  3034               	movlw	low __pdataBANK0
   449  0019  0084               	movwf	4
   450  001A  120A  118A  21FE  120A  118A  	fcall	init_ram0
   451                           
   452                           ; Initialize objects allocated to COMMON
   453  001F  120A  118A  2248  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   454  0024  00FC               	movwf	__pdataCOMMON& (0+127)
   455  0025  120A  118A  2249  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   456  002A  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
   457                           
   458                           ; Clear objects allocated to BANK0
   459  002B  3020               	movlw	low __pbssBANK0
   460  002C  0084               	movwf	4
   461  002D  3034               	movlw	low (__pbssBANK0+20)
   462  002E  120A  118A  2240  120A  118A  	fcall	clear_ram0
   463                           
   464                           ; Clear objects allocated to COMMON
   465  0033  01F7               	clrf	__pbssCOMMON& (0+127)
   466  0034  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   467  0035  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   468  0036  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   469  0037  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   470  0038                     end_of_initialization:	
   471                           ;End of C runtime variable initialization code
   472                           
   473  0038                     __end_of__initialization:
   474  0038  0183               	clrf	3
   475  0039  120A  118A  2914   	ljmp	_main	;jump to C main() function
   476                           
   477                           	psect	bssCOMMON
   478  0077                     __pbssCOMMON:
   479  0077                     _timeB1:
   480  0077                     	ds	2
   481  0079                     _micros:
   482  0079                     	ds	2
   483  007B                     _value:
   484  007B                     	ds	1
   485                           
   486                           	psect	dataCOMMON
   487  007C                     __pdataCOMMON:
   488  007C                     _portbActual:
   489  007C                     	ds	1
   490  007D                     _portbAnterior:
   491  007D                     	ds	1
   492                           
   493                           	psect	bssBANK0
   494  0020                     __pbssBANK0:
   495  0020                     _multiplexors:
   496  0020                     	ds	4
   497  0024                     _displayDigits:
   498  0024                     	ds	2
   499  0026                     _timeB2:
   500  0026                     	ds	2
   501  0028                     _ADC_VALUE:
   502  0028                     	ds	12
   503                           
   504                           	psect	dataBANK0
   505  0034                     __pdataBANK0:
   506  0034                     _tableDisplay:
   507  0034                     	ds	16
   508                           
   509                           	psect	inittext
   510  01FA                     init_fetch0:	
   511                           ;	Called with low address in FSR and high address in W
   512                           
   513  01FA  087E               	movf	btemp,w
   514  01FB  008A               	movwf	10
   515  01FC  087F               	movf	btemp+1,w
   516  01FD  0082               	movwf	2
   517  01FE                     init_ram0:	
   518                           ;Called with:
   519                           ;	high address of idata address in btemp 
   520                           ;	low address of idata address in btemp+1 
   521                           ;	low address of data in FSR
   522                           ;	high address + 1 of data in btemp-1
   523                           
   524  01FE  120A  118A  21FA  120A  118A  	fcall	init_fetch0
   525  0203  0080               	movwf	0
   526  0204  0A84               	incf	4,f
   527  0205  0804               	movf	4,w
   528  0206  067D               	xorwf	btemp+-1,w
   529  0207  1903               	btfsc	3,2
   530  0208  3400               	retlw	0
   531  0209  0AFF               	incf	btemp+1,f
   532  020A  1903               	btfsc	3,2
   533  020B  0AFE               	incf	btemp,f
   534  020C  29FE               	goto	init_ram0
   535                           
   536                           	psect	clrtext
   537  0240                     clear_ram0:	
   538                           ;	Called with FSR containing the base address, and
   539                           ;	W with the last address+1
   540                           
   541  0240  0064               	clrwdt	;clear the watchdog before getting into this loop
   542  0241                     clrloop0:
   543  0241  0180               	clrf	0	;clear RAM location pointed to by FSR
   544  0242  0A84               	incf	4,f	;increment pointer
   545  0243  0604               	xorwf	4,w	;XOR with final address
   546  0244  1903               	btfsc	3,2	;have we reached the end yet?
   547  0245  3400               	retlw	0	;all done for this memory range, return
   548  0246  0604               	xorwf	4,w	;XOR again to restore value
   549  0247  2A41               	goto	clrloop0	;do the next byte
   550                           
   551                           	psect	cstackCOMMON
   552  0070                     __pcstackCOMMON:
   553  0070                     ?_initADC:
   554  0070                     ?_readADC:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_displayValue:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_isrADC:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ??_isrADC:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_isrTimer0:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ??_isrTimer0:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_main:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_isr:	
   576                           ; 1 bytes @ 0x0
   577                           
   578                           
   579                           ; 1 bytes @ 0x0
   580  0070                     	ds	2
   581  0072                     ??_isr:
   582                           
   583                           ; 1 bytes @ 0x2
   584  0072                     	ds	5
   585                           
   586                           	psect	cstackBANK0
   587  0044                     __pcstackBANK0:
   588  0044                     ??_initADC:
   589  0044                     ?_init7S:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0044                     ??_readADC:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0044                     ?___awdiv:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0044                     init7S@port:	
   599                           ; 2 bytes @ 0x0
   600                           
   601  0044                     ___awdiv@divisor:	
   602                           ; 2 bytes @ 0x0
   603                           
   604                           
   605                           ; 2 bytes @ 0x0
   606  0044                     	ds	1
   607  0045                     readADC@pin:
   608                           
   609                           ; 1 bytes @ 0x1
   610  0045                     	ds	1
   611  0046                     ??_init7S:
   612  0046                     ___awdiv@dividend:	
   613                           ; 1 bytes @ 0x2
   614                           
   615                           
   616                           ; 2 bytes @ 0x2
   617  0046                     	ds	2
   618  0048                     ??___awdiv:
   619                           
   620                           ; 1 bytes @ 0x4
   621  0048                     	ds	1
   622  0049                     ___awdiv@counter:
   623                           
   624                           ; 1 bytes @ 0x5
   625  0049                     	ds	1
   626  004A                     ___awdiv@sign:
   627                           
   628                           ; 1 bytes @ 0x6
   629  004A                     	ds	1
   630  004B                     ___awdiv@quotient:
   631                           
   632                           ; 2 bytes @ 0x7
   633  004B                     	ds	2
   634  004D                     ??_displayValue:
   635                           
   636                           ; 1 bytes @ 0x9
   637  004D                     	ds	3
   638  0050                     displayValue@valor:
   639                           
   640                           ; 1 bytes @ 0xC
   641  0050                     	ds	1
   642  0051                     ??_main:
   643                           
   644                           ; 1 bytes @ 0xD
   645  0051                     	ds	1
   646  0052                     main@adc0:
   647                           
   648                           ; 1 bytes @ 0xE
   649  0052                     	ds	1
   650                           
   651                           	psect	maintext
   652  0114                     __pmaintext:	
   653 ;;
   654 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   655 ;;
   656 ;; *************** function _main *****************
   657 ;; Defined at:
   658 ;;		line 50 in file "main.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  adc0            1   14[BANK0 ] PTR unsigned char 
   663 ;;		 -> ADC_VALUE(12), 
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : B00/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         0       0       0       0       0
   674 ;;      Locals:         0       1       0       0       0
   675 ;;      Temps:          0       1       0       0       0
   676 ;;      Totals:         0       2       0       0       0
   677 ;;Total ram usage:        2 bytes
   678 ;; Hardware stack levels required when called:    4
   679 ;; This function calls:
   680 ;;		_displayValue
   681 ;;		_init7S
   682 ;;		_initADC
   683 ;;		_readADC
   684 ;; This function is called by:
   685 ;;		Startup code after reset
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           
   690                           ;psect for function _main
   691  0114                     _main:
   692  0114                     l1176:	
   693                           ;incstack = 0
   694                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   695                           
   696                           
   697                           ;main.c: 51:     ANSEL = 1;
   698  0114  3001               	movlw	1
   699  0115  1683               	bsf	3,5	;RP0=1, select bank3
   700  0116  1703               	bsf	3,6	;RP1=1, select bank3
   701  0117  0088               	movwf	8	;volatile
   702  0118                     l1178:
   703                           
   704                           ;main.c: 52:     ANSELH = 0;
   705  0118  0189               	clrf	9	;volatile
   706  0119                     l1180:
   707                           
   708                           ;main.c: 53:     TRISA = 1;
   709  0119  3001               	movlw	1
   710  011A  1683               	bsf	3,5	;RP0=1, select bank1
   711  011B  1303               	bcf	3,6	;RP1=0, select bank1
   712  011C  0085               	movwf	5	;volatile
   713  011D                     l1182:
   714                           
   715                           ;main.c: 54:     TRISB = 255;
   716  011D  30FF               	movlw	255
   717  011E  0086               	movwf	6	;volatile
   718  011F                     l1184:
   719                           
   720                           ;main.c: 55:     TRISC = 0;
   721  011F  0187               	clrf	7	;volatile
   722  0120                     l1186:
   723                           
   724                           ;main.c: 56:     TRISD = 0;
   725  0120  0188               	clrf	8	;volatile
   726  0121                     l1188:
   727                           
   728                           ;main.c: 57:     IOCB = 255;
   729  0121  30FF               	movlw	255
   730  0122  0096               	movwf	22	;volatile
   731                           
   732                           ;main.c: 58:     PORTD = 0;
   733  0123  1283               	bcf	3,5	;RP0=0, select bank0
   734  0124  1303               	bcf	3,6	;RP1=0, select bank0
   735  0125  0188               	clrf	8	;volatile
   736  0126                     l1190:
   737                           
   738                           ;main.c: 59:     OPTION_REGbits.nRBPU = 0;
   739  0126  1683               	bsf	3,5	;RP0=1, select bank1
   740  0127  1303               	bcf	3,6	;RP1=0, select bank1
   741  0128  1381               	bcf	1,7	;volatile
   742  0129                     l1192:
   743                           
   744                           ;main.c: 61:     INTCONbits.GIE = 1;
   745  0129  178B               	bsf	11,7	;volatile
   746  012A                     l1194:
   747                           
   748                           ;main.c: 62:     INTCONbits.PEIE = 1;
   749  012A  170B               	bsf	11,6	;volatile
   750  012B                     l1196:
   751                           
   752                           ;main.c: 63:     INTCONbits.RBIE = 1;
   753  012B  158B               	bsf	11,3	;volatile
   754  012C                     l1198:
   755                           
   756                           ;main.c: 64:     PIE1bits.TMR2IE = 1;
   757  012C  148C               	bsf	12,1	;volatile
   758  012D                     l1200:
   759                           
   760                           ;main.c: 66:     PIR2 = 50;
   761  012D  3032               	movlw	50
   762  012E  1283               	bcf	3,5	;RP0=0, select bank0
   763  012F  1303               	bcf	3,6	;RP1=0, select bank0
   764  0130  008D               	movwf	13	;volatile
   765  0131                     l1202:
   766                           
   767                           ;main.c: 69:     T2CON = 0b00000100;
   768  0131  3004               	movlw	4
   769  0132  0092               	movwf	18	;volatile
   770  0133                     l1204:
   771                           
   772                           ;main.c: 72:     initADC();
   773  0133  120A  118A  2230  120A  118A  	fcall	_initADC
   774  0138                     l1206:
   775                           
   776                           ;main.c: 73:     init7S(&PORTC);
   777  0138  3007               	movlw	7
   778  0139  1283               	bcf	3,5	;RP0=0, select bank0
   779  013A  1303               	bcf	3,6	;RP1=0, select bank0
   780  013B  00C4               	movwf	init7S@port
   781  013C  3000               	movlw	0
   782  013D  00C5               	movwf	init7S@port+1
   783  013E  120A  118A  21E6  120A  118A  	fcall	_init7S
   784  0143                     l1208:
   785                           
   786                           ;main.c: 77:         adc0 = readADC(0);
   787  0143  3000               	movlw	0
   788  0144  120A  118A  21CE  120A  118A  	fcall	_readADC
   789  0149  1283               	bcf	3,5	;RP0=0, select bank0
   790  014A  1303               	bcf	3,6	;RP1=0, select bank0
   791  014B  00D1               	movwf	??_main
   792  014C  0851               	movf	??_main,w
   793  014D  00D2               	movwf	main@adc0
   794  014E                     l1210:
   795                           
   796                           ;main.c: 78:         displayValue(*adc0);
   797  014E  0852               	movf	main@adc0,w
   798  014F  0084               	movwf	4
   799  0150  1383               	bcf	3,7	;select IRP bank0
   800  0151  0800               	movf	0,w
   801  0152  120A  118A  21AF  120A  118A  	fcall	_displayValue
   802  0157                     l1212:
   803                           
   804                           ;main.c: 79:         RA1 = (*adc0 > PORTD);
   805  0157  1283               	bcf	3,5	;RP0=0, select bank0
   806  0158  1303               	bcf	3,6	;RP1=0, select bank0
   807  0159  0852               	movf	main@adc0,w
   808  015A  0084               	movwf	4
   809  015B  1383               	bcf	3,7	;select IRP bank0
   810  015C  0800               	movf	0,w
   811  015D  0208               	subwf	8,w	;volatile
   812  015E  1C03               	skipc
   813  015F  2961               	goto	u471
   814  0160  2965               	goto	u470
   815  0161                     u471:
   816  0161  1283               	bcf	3,5	;RP0=0, select bank0
   817  0162  1303               	bcf	3,6	;RP1=0, select bank0
   818  0163  1485               	bsf	5,1	;volatile
   819  0164  2968               	goto	u484
   820  0165                     u470:
   821  0165  1283               	bcf	3,5	;RP0=0, select bank0
   822  0166  1303               	bcf	3,6	;RP1=0, select bank0
   823  0167  1085               	bcf	5,1	;volatile
   824  0168                     u484:
   825  0168  2943               	goto	l1208
   826  0169  120A  118A  280E   	ljmp	start
   827  016C                     __end_of_main:
   828                           
   829                           	psect	text1
   830  01CE                     __ptext1:	
   831 ;; *************** function _readADC *****************
   832 ;; Defined at:
   833 ;;		line 44 in file "ADC.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  pin             1    wreg     unsigned char 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  pin             1    1[BANK0 ] unsigned char 
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      PTR unsigned char 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   847 ;;      Params:         0       0       0       0       0
   848 ;;      Locals:         0       1       0       0       0
   849 ;;      Temps:          0       1       0       0       0
   850 ;;      Totals:         0       2       0       0       0
   851 ;;Total ram usage:        2 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:    2
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_main
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           
   862                           ;psect for function _readADC
   863  01CE                     _readADC:
   864                           
   865                           ;incstack = 0
   866                           ; Regs used in _readADC: [wreg+status,2+status,0]
   867                           ;readADC@pin stored from wreg
   868  01CE  1283               	bcf	3,5	;RP0=0, select bank0
   869  01CF  1303               	bcf	3,6	;RP1=0, select bank0
   870  01D0  00C5               	movwf	readADC@pin
   871  01D1                     l1008:
   872                           
   873                           ;ADC.c: 45:     if (ADCON0bits.GO ==0 ){
   874  01D1  189F               	btfsc	31,1	;volatile
   875  01D2  29D4               	goto	u341
   876  01D3  29D5               	goto	u340
   877  01D4                     u341:
   878  01D4  29E3               	goto	l95
   879  01D5                     u340:
   880  01D5                     l1010:
   881                           
   882                           ;ADC.c: 46:          ADCON0bits.CHS = pin;
   883  01D5  0845               	movf	readADC@pin,w
   884  01D6  00C4               	movwf	??_readADC
   885  01D7  0DC4               	rlf	??_readADC,f
   886  01D8  0DC4               	rlf	??_readADC,f
   887  01D9  081F               	movf	31,w	;volatile
   888  01DA  0644               	xorwf	??_readADC,w
   889  01DB  39C3               	andlw	-61
   890  01DC  0644               	xorwf	??_readADC,w
   891  01DD  009F               	movwf	31	;volatile
   892  01DE                     l1012:
   893                           
   894                           ;ADC.c: 47:         _delay((unsigned long)((3)*(4000000/4000000.0)));
   895  01DE  29DF               	nop2	;2 cycle nop
   896  01DF  0000               	nop
   897  01E0                     l1014:
   898                           
   899                           ;ADC.c: 48:         ADCON0bits.GO = 1;
   900  01E0  1283               	bcf	3,5	;RP0=0, select bank0
   901  01E1  1303               	bcf	3,6	;RP1=0, select bank0
   902  01E2  149F               	bsf	31,1	;volatile
   903  01E3                     l95:	
   904                           ;ADC.c: 49:     }
   905                           
   906                           
   907                           ;ADC.c: 50:     return &ADC_VALUE[pin];
   908  01E3  0845               	movf	readADC@pin,w
   909  01E4  3E28               	addlw	(low (_ADC_VALUE| 0))& (0+255)
   910  01E5                     l96:
   911  01E5  0008               	return
   912  01E6                     __end_of_readADC:
   913                           
   914                           	psect	text2
   915  0230                     __ptext2:	
   916 ;; *************** function _initADC *****************
   917 ;; Defined at:
   918 ;;		line 23 in file "ADC.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   932 ;;      Params:         0       0       0       0       0
   933 ;;      Locals:         0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0
   935 ;;      Totals:         0       0       0       0       0
   936 ;;Total ram usage:        0 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    2
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _initADC
   948  0230                     _initADC:
   949  0230                     l1150:	
   950                           ;incstack = 0
   951                           ; Regs used in _initADC: [wreg+status,2+status,0]
   952                           
   953                           
   954                           ;ADC.c: 30:     ADCON0bits.ADCS = 1;
   955  0230  1283               	bcf	3,5	;RP0=0, select bank0
   956  0231  1303               	bcf	3,6	;RP1=0, select bank0
   957  0232  081F               	movf	31,w	;volatile
   958  0233  393F               	andlw	-193
   959  0234  3840               	iorlw	64
   960  0235  009F               	movwf	31	;volatile
   961  0236                     l1152:
   962                           
   963                           ;ADC.c: 35:     PIE1bits.ADIE = 1;
   964  0236  1683               	bsf	3,5	;RP0=1, select bank1
   965  0237  1303               	bcf	3,6	;RP1=0, select bank1
   966  0238  170C               	bsf	12,6	;volatile
   967  0239                     l1154:
   968                           
   969                           ;ADC.c: 37:     ADCON1bits.ADFM = 0;
   970  0239  139F               	bcf	31,7	;volatile
   971  023A                     l1156:
   972                           
   973                           ;ADC.c: 38:     ADCON1bits.VCFG1 = 0;
   974  023A  129F               	bcf	31,5	;volatile
   975  023B                     l1158:
   976                           
   977                           ;ADC.c: 39:     ADCON1bits.VCFG0 = 0;
   978  023B  121F               	bcf	31,4	;volatile
   979  023C                     l1160:
   980                           
   981                           ;ADC.c: 40:     ADCON0bits.ADON = 1;
   982  023C  1283               	bcf	3,5	;RP0=0, select bank0
   983  023D  1303               	bcf	3,6	;RP1=0, select bank0
   984  023E  141F               	bsf	31,0	;volatile
   985  023F                     l92:
   986  023F  0008               	return
   987  0240                     __end_of_initADC:
   988                           
   989                           	psect	text3
   990  01E6                     __ptext3:	
   991 ;; *************** function _init7S *****************
   992 ;; Defined at:
   993 ;;		line 43 in file "7Segmentos.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  port            2    0[BANK0 ] PTR unsigned char 
   996 ;;		 -> PORTC(1), 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       2       0       0       0
  1009 ;;      Locals:         0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0
  1011 ;;      Totals:         0       2       0       0       0
  1012 ;;Total ram usage:        2 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    2
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           
  1023                           ;psect for function _init7S
  1024  01E6                     _init7S:
  1025  01E6                     l1164:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _init7S: [wreg+status,2+status,0]
  1028                           
  1029  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1030  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1031  01E8  0844               	movf	init7S@port,w
  1032  01E9  00D3               	movwf	_displayPort
  1033  01EA  0845               	movf	init7S@port+1,w
  1034  01EB  00D4               	movwf	_displayPort+1
  1035  01EC                     l1166:
  1036  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  1037  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  1038  01EE  1281               	bcf	1,5	;volatile
  1039  01EF                     l1168:
  1040  01EF  1181               	bcf	1,3	;volatile
  1041  01F0  0801               	movf	1,w	;volatile
  1042  01F1  39F8               	andlw	-8
  1043  01F2  3801               	iorlw	1
  1044  01F3  0081               	movwf	1	;volatile
  1045  01F4                     l1170:
  1046  01F4  3006               	movlw	6
  1047  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1048  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1049  01F7  0081               	movwf	1	;volatile
  1050  01F8                     l1172:
  1051  01F8  150B               	bsf	11,2	;volatile
  1052  01F9                     l123:
  1053  01F9  0008               	return
  1054  01FA                     __end_of_init7S:
  1055                           
  1056                           	psect	text4
  1057  01AF                     __ptext4:	
  1058 ;; *************** function _displayValue *****************
  1059 ;; Defined at:
  1060 ;;		line 61 in file "7Segmentos.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  valor           1    wreg     unsigned char 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  valor           1   12[BANK0 ] unsigned char 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0, pclath, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         0       1       0       0       0
  1076 ;;      Temps:          0       3       0       0       0
  1077 ;;      Totals:         0       4       0       0       0
  1078 ;;Total ram usage:        4 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    3
  1081 ;; This function calls:
  1082 ;;		___awdiv
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _displayValue
  1090  01AF                     _displayValue:
  1091                           
  1092                           ;incstack = 0
  1093                           ; Regs used in _displayValue: [wreg+status,2+status,0+pclath+cstack]
  1094                           ;displayValue@valor stored from wreg
  1095  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1096  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1097  01B1  00D0               	movwf	displayValue@valor
  1098  01B2                     l1018:
  1099  01B2  3010               	movlw	16
  1100  01B3  00C4               	movwf	___awdiv@divisor
  1101  01B4  3000               	movlw	0
  1102  01B5  00C5               	movwf	___awdiv@divisor+1
  1103  01B6  0850               	movf	displayValue@valor,w
  1104  01B7  00CD               	movwf	??_displayValue
  1105  01B8  01CE               	clrf	??_displayValue+1
  1106  01B9  084D               	movf	??_displayValue,w
  1107  01BA  00C6               	movwf	___awdiv@dividend
  1108  01BB  084E               	movf	??_displayValue+1,w
  1109  01BC  00C7               	movwf	___awdiv@dividend+1
  1110  01BD  120A  118A  20AB  120A  118A  	fcall	___awdiv
  1111  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1112  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1113  01C4  0844               	movf	?___awdiv,w
  1114  01C5  00CF               	movwf	??_displayValue+2
  1115  01C6  084F               	movf	??_displayValue+2,w
  1116  01C7  00A5               	movwf	_displayDigits+1
  1117  01C8                     l1020:
  1118  01C8  0850               	movf	displayValue@valor,w
  1119  01C9  390F               	andlw	15
  1120  01CA  00CD               	movwf	??_displayValue
  1121  01CB  084D               	movf	??_displayValue,w
  1122  01CC  00A4               	movwf	_displayDigits
  1123  01CD                     l126:
  1124  01CD  0008               	return
  1125  01CE                     __end_of_displayValue:
  1126                           
  1127                           	psect	text5
  1128  00AB                     __ptext5:	
  1129 ;; *************** function ___awdiv *****************
  1130 ;; Defined at:
  1131 ;;		line 5 in file "D:\programas\xc8\pic\sources\c90\common\awdiv.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  divisor         2    0[BANK0 ] int 
  1134 ;;  dividend        2    2[BANK0 ] int 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  quotient        2    7[BANK0 ] int 
  1137 ;;  sign            1    6[BANK0 ] unsigned char 
  1138 ;;  counter         1    5[BANK0 ] unsigned char 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  2    0[BANK0 ] int 
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1148 ;;      Params:         0       4       0       0       0
  1149 ;;      Locals:         0       4       0       0       0
  1150 ;;      Temps:          0       1       0       0       0
  1151 ;;      Totals:         0       9       0       0       0
  1152 ;;Total ram usage:        9 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    2
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_displayValue
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           
  1163                           ;psect for function ___awdiv
  1164  00AB                     ___awdiv:
  1165  00AB                     l938:	
  1166                           ;incstack = 0
  1167                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1168                           
  1169  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1170  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1171  00AD  01CA               	clrf	___awdiv@sign
  1172  00AE                     l940:
  1173  00AE  1FC5               	btfss	___awdiv@divisor+1,7
  1174  00AF  28B1               	goto	u241
  1175  00B0  28B2               	goto	u240
  1176  00B1                     u241:
  1177  00B1  28B9               	goto	l946
  1178  00B2                     u240:
  1179  00B2                     l942:
  1180  00B2  09C4               	comf	___awdiv@divisor,f
  1181  00B3  09C5               	comf	___awdiv@divisor+1,f
  1182  00B4  0AC4               	incf	___awdiv@divisor,f
  1183  00B5  1903               	skipnz
  1184  00B6  0AC5               	incf	___awdiv@divisor+1,f
  1185  00B7                     l944:
  1186  00B7  01CA               	clrf	___awdiv@sign
  1187  00B8  0ACA               	incf	___awdiv@sign,f
  1188  00B9                     l946:
  1189  00B9  1FC7               	btfss	___awdiv@dividend+1,7
  1190  00BA  28BC               	goto	u251
  1191  00BB  28BD               	goto	u250
  1192  00BC                     u251:
  1193  00BC  28C6               	goto	l952
  1194  00BD                     u250:
  1195  00BD                     l948:
  1196  00BD  09C6               	comf	___awdiv@dividend,f
  1197  00BE  09C7               	comf	___awdiv@dividend+1,f
  1198  00BF  0AC6               	incf	___awdiv@dividend,f
  1199  00C0  1903               	skipnz
  1200  00C1  0AC7               	incf	___awdiv@dividend+1,f
  1201  00C2                     l950:
  1202  00C2  3001               	movlw	1
  1203  00C3  00C8               	movwf	??___awdiv
  1204  00C4  0848               	movf	??___awdiv,w
  1205  00C5  06CA               	xorwf	___awdiv@sign,f
  1206  00C6                     l952:
  1207  00C6  01CB               	clrf	___awdiv@quotient
  1208  00C7  01CC               	clrf	___awdiv@quotient+1
  1209  00C8                     l954:
  1210  00C8  0844               	movf	___awdiv@divisor,w
  1211  00C9  0445               	iorwf	___awdiv@divisor+1,w
  1212  00CA  1903               	btfsc	3,2
  1213  00CB  28CD               	goto	u261
  1214  00CC  28CE               	goto	u260
  1215  00CD                     u261:
  1216  00CD  2905               	goto	l974
  1217  00CE                     u260:
  1218  00CE                     l956:
  1219  00CE  01C9               	clrf	___awdiv@counter
  1220  00CF  0AC9               	incf	___awdiv@counter,f
  1221  00D0  28DC               	goto	l962
  1222  00D1                     l958:
  1223  00D1  3001               	movlw	1
  1224  00D2                     u275:
  1225  00D2  1003               	clrc
  1226  00D3  0DC4               	rlf	___awdiv@divisor,f
  1227  00D4  0DC5               	rlf	___awdiv@divisor+1,f
  1228  00D5  3EFF               	addlw	-1
  1229  00D6  1D03               	skipz
  1230  00D7  28D2               	goto	u275
  1231  00D8                     l960:
  1232  00D8  3001               	movlw	1
  1233  00D9  00C8               	movwf	??___awdiv
  1234  00DA  0848               	movf	??___awdiv,w
  1235  00DB  07C9               	addwf	___awdiv@counter,f
  1236  00DC                     l962:
  1237  00DC  1FC5               	btfss	___awdiv@divisor+1,7
  1238  00DD  28DF               	goto	u281
  1239  00DE  28E0               	goto	u280
  1240  00DF                     u281:
  1241  00DF  28D1               	goto	l958
  1242  00E0                     u280:
  1243  00E0                     l964:
  1244  00E0  3001               	movlw	1
  1245  00E1                     u295:
  1246  00E1  1003               	clrc
  1247  00E2  0DCB               	rlf	___awdiv@quotient,f
  1248  00E3  0DCC               	rlf	___awdiv@quotient+1,f
  1249  00E4  3EFF               	addlw	-1
  1250  00E5  1D03               	skipz
  1251  00E6  28E1               	goto	u295
  1252  00E7  0845               	movf	___awdiv@divisor+1,w
  1253  00E8  0247               	subwf	___awdiv@dividend+1,w
  1254  00E9  1D03               	skipz
  1255  00EA  28ED               	goto	u305
  1256  00EB  0844               	movf	___awdiv@divisor,w
  1257  00EC  0246               	subwf	___awdiv@dividend,w
  1258  00ED                     u305:
  1259  00ED  1C03               	skipc
  1260  00EE  28F0               	goto	u301
  1261  00EF  28F1               	goto	u300
  1262  00F0                     u301:
  1263  00F0  28F8               	goto	l970
  1264  00F1                     u300:
  1265  00F1                     l966:
  1266  00F1  0844               	movf	___awdiv@divisor,w
  1267  00F2  02C6               	subwf	___awdiv@dividend,f
  1268  00F3  0845               	movf	___awdiv@divisor+1,w
  1269  00F4  1C03               	skipc
  1270  00F5  03C7               	decf	___awdiv@dividend+1,f
  1271  00F6  02C7               	subwf	___awdiv@dividend+1,f
  1272  00F7                     l968:
  1273  00F7  144B               	bsf	___awdiv@quotient,0
  1274  00F8                     l970:
  1275  00F8  3001               	movlw	1
  1276  00F9                     u315:
  1277  00F9  1003               	clrc
  1278  00FA  0CC5               	rrf	___awdiv@divisor+1,f
  1279  00FB  0CC4               	rrf	___awdiv@divisor,f
  1280  00FC  3EFF               	addlw	-1
  1281  00FD  1D03               	skipz
  1282  00FE  28F9               	goto	u315
  1283  00FF                     l972:
  1284  00FF  3001               	movlw	1
  1285  0100  02C9               	subwf	___awdiv@counter,f
  1286  0101  1D03               	btfss	3,2
  1287  0102  2904               	goto	u321
  1288  0103  2905               	goto	u320
  1289  0104                     u321:
  1290  0104  28E0               	goto	l964
  1291  0105                     u320:
  1292  0105                     l974:
  1293  0105  084A               	movf	___awdiv@sign,w
  1294  0106  1903               	btfsc	3,2
  1295  0107  2909               	goto	u331
  1296  0108  290A               	goto	u330
  1297  0109                     u331:
  1298  0109  290F               	goto	l978
  1299  010A                     u330:
  1300  010A                     l976:
  1301  010A  09CB               	comf	___awdiv@quotient,f
  1302  010B  09CC               	comf	___awdiv@quotient+1,f
  1303  010C  0ACB               	incf	___awdiv@quotient,f
  1304  010D  1903               	skipnz
  1305  010E  0ACC               	incf	___awdiv@quotient+1,f
  1306  010F                     l978:
  1307  010F  084C               	movf	___awdiv@quotient+1,w
  1308  0110  00C5               	movwf	?___awdiv+1
  1309  0111  084B               	movf	___awdiv@quotient,w
  1310  0112  00C4               	movwf	?___awdiv
  1311  0113                     l373:
  1312  0113  0008               	return
  1313  0114                     __end_of___awdiv:
  1314                           
  1315                           	psect	text6
  1316  003C                     __ptext6:	
  1317 ;; *************** function _isr *****************
  1318 ;; Defined at:
  1319 ;;		line 86 in file "main.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;		None
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;		None
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1333 ;;      Params:         0       0       0       0       0
  1334 ;;      Locals:         0       0       0       0       0
  1335 ;;      Temps:          5       0       0       0       0
  1336 ;;      Totals:         5       0       0       0       0
  1337 ;;Total ram usage:        5 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    1
  1340 ;; This function calls:
  1341 ;;		_isrADC
  1342 ;;		_isrTimer0
  1343 ;; This function is called by:
  1344 ;;		Interrupt level 1
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           
  1349                           ;psect for function _isr
  1350  003C                     _isr:
  1351  003C                     i1l1092:
  1352                           
  1353                           ;main.c: 87:     if (INTCONbits.RBIF){
  1354  003C  1C0B               	btfss	11,0	;volatile
  1355  003D  283F               	goto	u39_21
  1356  003E  2840               	goto	u39_20
  1357  003F                     u39_21:
  1358  003F  288B               	goto	i1l1118
  1359  0040                     u39_20:
  1360  0040                     i1l1094:
  1361                           
  1362                           ;main.c: 88:         portbAnterior = portbActual;
  1363  0040  087C               	movf	_portbActual,w	;volatile
  1364  0041  00F2               	movwf	??_isr
  1365  0042  0872               	movf	??_isr,w
  1366  0043  00FD               	movwf	_portbAnterior	;volatile
  1367                           
  1368                           ;main.c: 89:         portbActual = PORTB;
  1369  0044  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0045  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0046  0806               	movf	6,w	;volatile
  1372  0047  00F2               	movwf	??_isr
  1373  0048  0872               	movf	??_isr,w
  1374  0049  00FC               	movwf	_portbActual	;volatile
  1375  004A                     i1l1096:
  1376                           
  1377                           ;main.c: 91:         if ((portbAnterior & 1) == 0 && (portbActual & 1) == 1){
  1378  004A  187D               	btfsc	_portbAnterior,0	;volatile
  1379  004B  284D               	goto	u40_21
  1380  004C  284E               	goto	u40_20
  1381  004D                     u40_21:
  1382  004D  286B               	goto	i1l1106
  1383  004E                     u40_20:
  1384  004E                     i1l1098:
  1385  004E  1C7C               	btfss	_portbActual,0	;volatile
  1386  004F  2851               	goto	u41_21
  1387  0050  2852               	goto	u41_20
  1388  0051                     u41_21:
  1389  0051  286B               	goto	i1l1106
  1390  0052                     u41_20:
  1391  0052                     i1l1100:
  1392                           
  1393                           ;main.c: 93:             if (micros - timeB1 >= 50){
  1394  0052  0877               	movf	_timeB1,w	;volatile
  1395  0053  0279               	subwf	_micros,w	;volatile
  1396  0054  00F2               	movwf	??_isr
  1397  0055  0878               	movf	_timeB1+1,w	;volatile
  1398  0056  1C03               	skipc
  1399  0057  0A78               	incf	_timeB1+1,w	;volatile
  1400  0058  027A               	subwf	_micros+1,w	;volatile
  1401  0059  00F3               	movwf	??_isr+1
  1402  005A  3000               	movlw	0
  1403  005B  0273               	subwf	??_isr+1,w
  1404  005C  3032               	movlw	50
  1405  005D  1903               	skipnz
  1406  005E  0272               	subwf	??_isr,w
  1407  005F  1C03               	skipc
  1408  0060  2862               	goto	u42_21
  1409  0061  2863               	goto	u42_20
  1410  0062                     u42_21:
  1411  0062  286B               	goto	i1l1106
  1412  0063                     u42_20:
  1413  0063                     i1l1102:
  1414                           
  1415                           ;main.c: 96:                 timeB1 = micros;
  1416  0063  087A               	movf	_micros+1,w	;volatile
  1417  0064  00F8               	movwf	_timeB1+1	;volatile
  1418  0065  0879               	movf	_micros,w	;volatile
  1419  0066  00F7               	movwf	_timeB1	;volatile
  1420  0067                     i1l1104:
  1421                           
  1422                           ;main.c: 97:                 PORTD++;
  1423  0067  3001               	movlw	1
  1424  0068  00F2               	movwf	??_isr
  1425  0069  0872               	movf	??_isr,w
  1426  006A  0788               	addwf	8,f	;volatile
  1427  006B                     i1l1106:
  1428                           
  1429                           ;main.c: 101:         if((portbAnterior & 2) == 0 && (portbActual & 2) == 2){
  1430  006B  18FD               	btfsc	_portbAnterior,1	;volatile
  1431  006C  286E               	goto	u43_21
  1432  006D  286F               	goto	u43_20
  1433  006E                     u43_21:
  1434  006E  288A               	goto	i1l1116
  1435  006F                     u43_20:
  1436  006F                     i1l1108:
  1437  006F  1CFC               	btfss	_portbActual,1	;volatile
  1438  0070  2872               	goto	u44_21
  1439  0071  2873               	goto	u44_20
  1440  0072                     u44_21:
  1441  0072  288A               	goto	i1l1116
  1442  0073                     u44_20:
  1443  0073                     i1l1110:
  1444                           
  1445                           ;main.c: 102:             if(micros - timeB2 >= 50){
  1446  0073  0826               	movf	_timeB2,w	;volatile
  1447  0074  0279               	subwf	_micros,w	;volatile
  1448  0075  00F2               	movwf	??_isr
  1449  0076  0827               	movf	_timeB2+1,w	;volatile
  1450  0077  1C03               	skipc
  1451  0078  0A27               	incf	_timeB2+1,w	;volatile
  1452  0079  027A               	subwf	_micros+1,w	;volatile
  1453  007A  00F3               	movwf	??_isr+1
  1454  007B  3000               	movlw	0
  1455  007C  0273               	subwf	??_isr+1,w
  1456  007D  3032               	movlw	50
  1457  007E  1903               	skipnz
  1458  007F  0272               	subwf	??_isr,w
  1459  0080  1C03               	skipc
  1460  0081  2883               	goto	u45_21
  1461  0082  2884               	goto	u45_20
  1462  0083                     u45_21:
  1463  0083  288A               	goto	i1l1116
  1464  0084                     u45_20:
  1465  0084                     i1l1112:
  1466                           
  1467                           ;main.c: 103:                 timeB2 = micros;
  1468  0084  087A               	movf	_micros+1,w	;volatile
  1469  0085  00A7               	movwf	_timeB2+1	;volatile
  1470  0086  0879               	movf	_micros,w	;volatile
  1471  0087  00A6               	movwf	_timeB2	;volatile
  1472  0088                     i1l1114:
  1473                           
  1474                           ;main.c: 104:                 PORTD--;
  1475  0088  3001               	movlw	1
  1476  0089  0288               	subwf	8,f	;volatile
  1477  008A                     i1l1116:
  1478                           
  1479                           ;main.c: 108:         INTCONbits.RBIF = 0;
  1480  008A  100B               	bcf	11,0	;volatile
  1481  008B                     i1l1118:
  1482                           
  1483                           ;main.c: 111:      if (PIR1bits.TMR2IF){
  1484  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1485  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1486  008D  1C8C               	btfss	12,1	;volatile
  1487  008E  2890               	goto	u46_21
  1488  008F  2891               	goto	u46_20
  1489  0090                     u46_21:
  1490  0090  2898               	goto	i1l1124
  1491  0091                     u46_20:
  1492  0091                     i1l1120:
  1493                           
  1494                           ;main.c: 112:         PIR1bits.TMR2IF = 0;
  1495  0091  108C               	bcf	12,1	;volatile
  1496  0092                     i1l1122:
  1497                           
  1498                           ;main.c: 113:         micros+= 50;
  1499  0092  3032               	movlw	50
  1500  0093  07F9               	addwf	_micros,f	;volatile
  1501  0094  1803               	skipnc
  1502  0095  0AFA               	incf	_micros+1,f	;volatile
  1503  0096  3000               	movlw	0
  1504  0097  07FA               	addwf	_micros+1,f	;volatile
  1505  0098                     i1l1124:
  1506                           
  1507                           ;main.c: 116:     isrADC();
  1508  0098  120A  118A  220D  120A  118A  	fcall	_isrADC
  1509  009D                     i1l1126:
  1510                           
  1511                           ;main.c: 117:     isrTimer0();
  1512  009D  120A  118A  216C  120A  118A  	fcall	_isrTimer0
  1513  00A2                     i1l75:
  1514  00A2  0876               	movf	??_isr+4,w
  1515  00A3  008A               	movwf	10
  1516  00A4  0875               	movf	??_isr+3,w
  1517  00A5  0084               	movwf	4
  1518  00A6  0E74               	swapf	??_isr+2,w
  1519  00A7  0083               	movwf	3
  1520  00A8  0EFE               	swapf	btemp,f
  1521  00A9  0E7E               	swapf	btemp,w
  1522  00AA  0009               	retfie
  1523  00AB                     __end_of_isr:
  1524                           
  1525                           	psect	intentry
  1526  0004                     __pintentry:	
  1527                           ;incstack = 0
  1528                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1529                           
  1530  0004                     interrupt_function:
  1531  007E                     saved_w	set	btemp
  1532  0004  00FE               	movwf	btemp
  1533  0005  0E03               	swapf	3,w
  1534  0006  00F4               	movwf	??_isr+2
  1535  0007  0804               	movf	4,w
  1536  0008  00F5               	movwf	??_isr+3
  1537  0009  080A               	movf	10,w
  1538  000A  00F6               	movwf	??_isr+4
  1539  000B  120A  118A  283C   	ljmp	_isr
  1540                           
  1541                           	psect	text7
  1542  016C                     __ptext7:	
  1543 ;; *************** function _isrTimer0 *****************
  1544 ;; Defined at:
  1545 ;;		line 74 in file "7Segmentos.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1559 ;;      Params:         0       0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0
  1561 ;;      Temps:          2       0       0       0       0
  1562 ;;      Totals:         2       0       0       0       0
  1563 ;;Total ram usage:        2 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_isr
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _isrTimer0
  1574  016C                     _isrTimer0:
  1575  016C                     i1l1030:	
  1576                           ;incstack = 0
  1577                           ; Regs used in _isrTimer0: [wreg-fsr0h+status,2+status,0]
  1578                           
  1579  016C  1D0B               	btfss	11,2	;volatile
  1580  016D  296F               	goto	u36_21
  1581  016E  2970               	goto	u36_20
  1582  016F                     u36_21:
  1583  016F  29AE               	goto	i1l134
  1584  0170                     u36_20:
  1585  0170  299D               	goto	i1l1048
  1586  0171                     i1l131:
  1587  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0173  1105               	bcf	5,2	;volatile
  1590  0174  1185               	bcf	5,3	;volatile
  1591  0175                     i1l1034:
  1592  0175  0824               	movf	_displayDigits,w
  1593  0176  3E34               	addlw	(low (_tableDisplay| 0))& (0+255)
  1594  0177  0084               	movwf	4
  1595  0178  1383               	bcf	3,7	;select IRP bank0
  1596  0179  0800               	movf	0,w
  1597  017A  00F0               	movwf	??_isrTimer0
  1598  017B  0853               	movf	_displayPort,w
  1599  017C  0084               	movwf	4
  1600  017D  1783               	bsf	3,7
  1601  017E  1C54               	btfss	_displayPort+1,0
  1602  017F  1383               	bcf	3,7
  1603  0180  0870               	movf	??_isrTimer0,w
  1604  0181  0080               	movwf	0
  1605  0182                     i1l1036:
  1606  0182  1505               	bsf	5,2	;volatile
  1607  0183                     i1l1038:
  1608  0183  3001               	movlw	1
  1609  0184  00F0               	movwf	??_isrTimer0
  1610  0185  0870               	movf	??_isrTimer0,w
  1611  0186  07FB               	addwf	_value,f
  1612  0187  29AD               	goto	i1l132
  1613  0188                     i1l133:
  1614  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1616  018A  1105               	bcf	5,2	;volatile
  1617  018B  1185               	bcf	5,3	;volatile
  1618  018C                     i1l1040:
  1619  018C  0825               	movf	_displayDigits+1,w
  1620  018D  3E34               	addlw	(low (_tableDisplay| 0))& (0+255)
  1621  018E  0084               	movwf	4
  1622  018F  1383               	bcf	3,7	;select IRP bank0
  1623  0190  0800               	movf	0,w
  1624  0191  00F0               	movwf	??_isrTimer0
  1625  0192  0853               	movf	_displayPort,w
  1626  0193  0084               	movwf	4
  1627  0194  1783               	bsf	3,7
  1628  0195  1C54               	btfss	_displayPort+1,0
  1629  0196  1383               	bcf	3,7
  1630  0197  0870               	movf	??_isrTimer0,w
  1631  0198  0080               	movwf	0
  1632  0199                     i1l1042:
  1633  0199  1585               	bsf	5,3	;volatile
  1634  019A                     i1l1044:
  1635  019A  3001               	movlw	1
  1636  019B  02FB               	subwf	_value,f
  1637  019C  29AD               	goto	i1l132
  1638  019D                     i1l1048:
  1639  019D  087B               	movf	_value,w
  1640  019E  00F0               	movwf	??_isrTimer0
  1641  019F  01F1               	clrf	??_isrTimer0+1
  1642                           
  1643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1644                           ; Switch size 1, requested type "simple"
  1645                           ; Number of cases is 1, Range of values is 0 to 0
  1646                           ; switch strategies available:
  1647                           ; Name         Instructions Cycles
  1648                           ; simple_byte            4     3 (average)
  1649                           ; direct_byte           11     8 (fixed)
  1650                           ; jumptable            260     6 (fixed)
  1651                           ;	Chosen strategy is simple_byte
  1652  01A0  0871               	movf	??_isrTimer0+1,w
  1653  01A1  3A00               	xorlw	0	; case 0
  1654  01A2  1903               	skipnz
  1655  01A3  29A5               	goto	i1l1234
  1656  01A4  29AD               	goto	i1l132
  1657  01A5                     i1l1234:
  1658                           
  1659                           ; Switch size 1, requested type "simple"
  1660                           ; Number of cases is 2, Range of values is 0 to 1
  1661                           ; switch strategies available:
  1662                           ; Name         Instructions Cycles
  1663                           ; simple_byte            7     4 (average)
  1664                           ; direct_byte           14     8 (fixed)
  1665                           ; jumptable            260     6 (fixed)
  1666                           ;	Chosen strategy is simple_byte
  1667  01A5  0870               	movf	??_isrTimer0,w
  1668  01A6  3A00               	xorlw	0	; case 0
  1669  01A7  1903               	skipnz
  1670  01A8  2971               	goto	i1l131
  1671  01A9  3A01               	xorlw	1	; case 1
  1672  01AA  1903               	skipnz
  1673  01AB  2988               	goto	i1l133
  1674  01AC  29AD               	goto	i1l132
  1675  01AD                     i1l132:
  1676  01AD  110B               	bcf	11,2	;volatile
  1677  01AE                     i1l134:
  1678  01AE  0008               	return
  1679  01AF                     __end_of_isrTimer0:
  1680                           
  1681                           	psect	text8
  1682  020D                     __ptext8:	
  1683 ;; *************** function _isrADC *****************
  1684 ;; Defined at:
  1685 ;;		line 54 in file "ADC.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1699 ;;      Params:         0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0
  1701 ;;      Temps:          2       0       0       0       0
  1702 ;;      Totals:         2       0       0       0       0
  1703 ;;Total ram usage:        2 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_isr
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           
  1713                           ;psect for function _isrADC
  1714  020D                     _isrADC:
  1715  020D                     i1l1022:	
  1716                           ;incstack = 0
  1717                           ; Regs used in _isrADC: [wreg-fsr0h+status,2+status,0]
  1718                           
  1719                           
  1720                           ;ADC.c: 55:     if(PIR1bits.ADIF){
  1721  020D  1283               	bcf	3,5	;RP0=0, select bank0
  1722  020E  1303               	bcf	3,6	;RP1=0, select bank0
  1723  020F  1F0C               	btfss	12,6	;volatile
  1724  0210  2A12               	goto	u35_21
  1725  0211  2A13               	goto	u35_20
  1726  0212                     u35_21:
  1727  0212  2A1F               	goto	i1l100
  1728  0213                     u35_20:
  1729  0213                     i1l1024:
  1730                           
  1731                           ;ADC.c: 56:         ADC_VALUE[ADCON0bits.CHS] = ADRESH;
  1732  0213  081E               	movf	30,w	;volatile
  1733  0214  00F0               	movwf	??_isrADC
  1734  0215  0C1F               	rrf	31,w	;volatile
  1735  0216  00F1               	movwf	??_isrADC+1
  1736  0217  0C71               	rrf	??_isrADC+1,w
  1737  0218  390F               	andlw	15
  1738  0219  3E28               	addlw	(low (_ADC_VALUE| 0))& (0+255)
  1739  021A  0084               	movwf	4
  1740  021B  0870               	movf	??_isrADC,w
  1741  021C  1383               	bcf	3,7	;select IRP bank0
  1742  021D  0080               	movwf	0
  1743  021E                     i1l1026:
  1744                           
  1745                           ;ADC.c: 57:         PIR1bits.ADIF = 0;
  1746  021E  130C               	bcf	12,6	;volatile
  1747  021F                     i1l100:
  1748  021F  0008               	return
  1749  0220                     __end_of_isrADC:
  1750  007E                     btemp	set	126	;btemp
  1751  007E                     wtemp0	set	126
  1752                           
  1753                           	psect	config
  1754                           
  1755                           ;Config register CONFIG1 @ 0x2007
  1756                           ;	Oscillator Selection bits
  1757                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1758                           ;	Watchdog Timer Enable bit
  1759                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1760                           ;	Power-up Timer Enable bit
  1761                           ;	PWRTE = OFF, PWRT disabled
  1762                           ;	RE3/MCLR pin function select bit
  1763                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1764                           ;	Code Protection bit
  1765                           ;	CP = OFF, Program memory code protection is disabled
  1766                           ;	Data Code Protection bit
  1767                           ;	CPD = OFF, Data memory code protection is disabled
  1768                           ;	Brown Out Reset Selection bits
  1769                           ;	BOREN = OFF, BOR disabled
  1770                           ;	Internal External Switchover bit
  1771                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1772                           ;	Fail-Safe Clock Monitor Enabled bit
  1773                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1774                           ;	Low Voltage Programming Enable bit
  1775                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1776                           ;	In-Circuit Debugger Mode bit
  1777                           ;	DEBUG = 0x1, unprogrammed default
  1778  2007                     	org	8199
  1779  2007  20D4               	dw	8404
  1780                           
  1781                           ;Config register CONFIG2 @ 0x2008
  1782                           ;	Brown-out Reset Selection bit
  1783                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1784                           ;	Flash Program Memory Self Write Enable bits
  1785                           ;	WRT = OFF, Write protection off
  1786  2008                     	org	8200
  1787  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         25
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     15      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    init7S@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    displayPort	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTC(SFR0[1]), 

    sp__readADC	PTR unsigned char  size(1) Largest target is 12
		 -> ADC_VALUE(BANK0[12]), 

    main@adc0	PTR unsigned char  size(1) Largest target is 12
		 -> ADC_VALUE(BANK0[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_isrADC
    _isr->_isrTimer0

Critical Paths under _main in BANK0

    _main->_displayValue
    _displayValue->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     726
                                             13 BANK0      2     2      0
                       _displayValue
                             _init7S
                            _initADC
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init7S                                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _displayValue                                         4     4      0     496
                                              9 BANK0      4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              2 COMMON     5     5      0
                             _isrADC
                          _isrTimer0
 ---------------------------------------------------------------------------------
 (4) _isrTimer0                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _isrADC                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _displayValue
     ___awdiv
   _init7S
   _initADC
   _readADC

 _isr (ROOT)
   _isrADC
   _isrTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      35       5       66.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      43      12        0.0%
ABS                  0      0      43       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 03 16:41:28 2021

                      pc 0002                       l92 023F                       l95 01E3  
                     l96 01E5             ___awdiv@sign 004A                       fsr 0004  
          ?_displayValue 0070                      l123 01F9                      l126 01CD  
                    l373 0113                      l940 00AE                      l950 00C2  
                    l942 00B2                      l960 00D8                      l952 00C6  
                    l944 00B7                      l970 00F8                      l962 00DC  
                    l954 00C8                      l946 00B9                      l938 00AB  
                    l972 00FF                      l964 00E0                      l956 00CE  
                    l948 00BD                      l966 00F1                      l958 00D1  
                    l974 0105                      l976 010A                      l968 00F7  
                    l978 010F                      _RA1 0029                      _RA2 002A  
                    _RA3 002B                      u300 00F1                      u301 00F0  
                    u320 0105                      u240 00B2                      u321 0104  
                    u305 00ED                      u241 00B1                      u330 010A  
                    u250 00BD                      u331 0109                      u315 00F9  
                    u251 00BC                      u260 00CE                      u340 01D5  
                    u261 00CD                      u341 01D4                      u280 00E0  
                    u281 00DF                      u275 00D2                      u470 0165  
                    u295 00E1                      u471 0161                      u484 0168  
                    _isr 003C                      fsr0 0004                      indf 0000  
                   l1010 01D5                     l1020 01C8                     l1012 01DE  
                   l1014 01E0                     l1008 01D1                     l1200 012D  
                   l1018 01B2                     l1210 014E                     l1202 0131  
                   l1212 0157                     l1204 0133                     l1150 0230  
                   l1206 0138                     l1160 023C                     l1152 0236  
                   l1208 0143                     l1170 01F4                     l1154 0239  
                   l1172 01F8                     l1164 01E6                     l1156 023A  
                   l1180 0119                     l1166 01EC                     l1158 023B  
                   l1190 0126                     l1182 011D                     l1168 01EF  
                   l1192 0129                     l1184 011F                     l1176 0114  
                   l1194 012A                     l1186 0120                     l1178 0118  
                   l1196 012B                     l1188 0121                     l1198 012C  
                   ?_isr 0070                     _IOCB 0096                     _PIR2 000D  
                   i1l75 00A2                     _TMR0 0001                     _main 0114  
                   btemp 007E                     start 000E                    ??_isr 0072  
         ??_displayValue 004D                    ?_main 0070          __end_of___awdiv 0114  
                  _ANSEL 0188          ___awdiv@divisor 0044                    _T2CON 0012  
                  i1l100 021F                    i1l131 0171                    i1l132 01AD  
                  i1l133 0188                    i1l134 01AE          ___awdiv@counter 0049  
                  u40_20 004E                    u40_21 004D                    u41_20 0052  
                  u41_21 0051                    u42_20 0063                    u42_21 0062  
                  u35_20 0213                    u43_20 006F                    u35_21 0212  
                  u43_21 006E                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u36_20 0170                    u44_20 0073  
                  u36_21 016F                    u44_21 0072                    u45_20 0084  
                  u45_21 0083                    u46_20 0091                    u46_21 0090  
                  u39_20 0040                    u39_21 003F                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_initADC 0240          __end_of_readADC 01E6                    _value 007B  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 016C                   ??_main 0051  
                 _ADRESH 001E         ___awdiv@dividend 0046                   _ANSELH 0189  
                 i1l1100 0052                   i1l1022 020D                   i1l1030 016C  
                 i1l1110 0073                   i1l1102 0063                   i1l1024 0213  
                 i1l1040 018C                   i1l1120 0091                   i1l1112 0084  
                 i1l1104 0067                   i1l1026 021E                   i1l1042 0199  
                 i1l1034 0175                   i1l1122 0092                   i1l1114 0088  
                 i1l1106 006B                   i1l1044 019A                   i1l1036 0182  
                 i1l1124 0098                   i1l1108 006F                   i1l1116 008A  
                 i1l1038 0183                   i1l1126 009D                   i1l1118 008B  
                 i1l1048 019D                   i1l1234 01A5                   i1l1092 003C  
                 i1l1094 0040                   i1l1096 004A                   i1l1098 004E  
              ??___awdiv 0048                   _isrADC 020D                   _init7S 01E6  
                 _micros 0079         ___awdiv@quotient 004B                   _timeB1 0077  
                 _timeB2 0026                ??_initADC 0044                ??_readADC 0044  
           __pdataCOMMON 007C                   saved_w 007E  __end_of__initialization 0038  
   __end_of_displayValue 01CE           __pcstackCOMMON 0070             __pidataBANK0 0220  
         _OPTION_REGbits 0081               __pbssBANK0 0020       __size_of_isrTimer0 0043  
             __pmaintext 0114               __pintentry 0004                  ?_isrADC 0070  
                ?_init7S 0044                _ADC_VALUE 0028                  ___awdiv 00AB  
        __size_of_isrADC 0013          __size_of_init7S 0014                  __ptext1 01CE  
                __ptext2 0230                  __ptext3 01E6                  __ptext4 01AF  
                __ptext5 00AB                  __ptext6 003C                  __ptext7 016C  
                __ptext8 020D                  _initADC 0230                  _readADC 01CE  
           __size_of_isr 006F        __end_of_isrTimer0 01AF    __size_of_displayValue 001F  
                clrloop0 0241     end_of_initialization 0038             _displayValue 01AF  
      displayValue@valor 0050               init7S@port 0044            __pidataCOMMON 0248  
         __end_of_isrADC 0220           __end_of_init7S 01FA               readADC@pin 0045  
    start_initialization 0011              __end_of_isr 00AB               init_fetch0 01FA  
               ??_isrADC 0070              __pdataBANK0 0034                 ??_init7S 0046  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0044  
              __pnvBANK0 0053                 ?___awdiv 0044             _tableDisplay 0034  
               ?_initADC 0070                 ?_readADC 0070                _isrTimer0 016C  
      interrupt_function 0004                clear_ram0 0240                 _PIE1bits 008C  
               _PIR1bits 000C              _displayPort 0053               _ADCON0bits 001F  
             _ADCON1bits 009F               ?_isrTimer0 0070         __size_of___awdiv 0069  
       __size_of_initADC 0010         __size_of_readADC 0018            __size_of_main 0058  
               main@adc0 0052               _INTCONbits 000B                 init_ram0 01FE  
          _portbAnterior 007D              ??_isrTimer0 0070                 intlevel1 0000  
           _multiplexors 0020            _displayDigits 0024              _portbActual 007C  
