

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 12:56:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  0008                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  000D                     	;# 
   401  000E                     	;# 
   402  000E                     	;# 
   403  000F                     	;# 
   404  0010                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001D                     	;# 
   420  001E                     	;# 
   421  001F                     	;# 
   422  0081                     	;# 
   423  0085                     	;# 
   424  0086                     	;# 
   425  0087                     	;# 
   426  0088                     	;# 
   427  0089                     	;# 
   428  008C                     	;# 
   429  008D                     	;# 
   430  008E                     	;# 
   431  008F                     	;# 
   432  0090                     	;# 
   433  0091                     	;# 
   434  0092                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0094                     	;# 
   439  0095                     	;# 
   440  0096                     	;# 
   441  0097                     	;# 
   442  0098                     	;# 
   443  0099                     	;# 
   444  009A                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  009F                     	;# 
   450  0105                     	;# 
   451  0107                     	;# 
   452  0108                     	;# 
   453  0109                     	;# 
   454  010C                     	;# 
   455  010C                     	;# 
   456  010D                     	;# 
   457  010E                     	;# 
   458  010F                     	;# 
   459  0185                     	;# 
   460  0187                     	;# 
   461  0188                     	;# 
   462  0189                     	;# 
   463  018C                     	;# 
   464  018D                     	;# 
   465  001A                     _RCREG	set	26
   466  0019                     _TXREG	set	25
   467  0018                     _RCSTAbits	set	24
   468  001E                     _ADRESH	set	30
   469  000C                     _PIR1bits	set	12
   470  000B                     _INTCONbits	set	11
   471  001F                     _ADCON0bits	set	31
   472  0048                     _RE0	set	72
   473  004A                     _RE2	set	74
   474  0047                     _RD7	set	71
   475  0046                     _RD6	set	70
   476  0045                     _RD5	set	69
   477  0044                     _RD4	set	68
   478  0043                     _RD3	set	67
   479  0042                     _RD2	set	66
   480  0041                     _RD1	set	65
   481  0040                     _RD0	set	64
   482  0087                     _TRISCbits	set	135
   483  0098                     _TXSTAbits	set	152
   484  0099                     _SPBRG	set	153
   485  009F                     _ADCON1bits	set	159
   486  008C                     _PIE1bits	set	140
   487  0089                     _TRISE	set	137
   488  0088                     _TRISD	set	136
   489  0189                     _ANSELH	set	393
   490  0188                     _ANSEL	set	392
   491                           
   492                           	psect	strings
   493  0800                     __pstrings:
   494  0800                     stringtab:
   495  0800                     __stringtab:
   496                           
   497                           ;	String table - string pointers are 1 byte each
   498  0800  1BFF               	btfsc	btemp+1,7
   499  0801  280A               	ljmp	stringcode
   500  0802  1383               	bcf	3,7
   501  0803  187F               	btfsc	btemp+1,0
   502  0804  1783               	bsf	3,7
   503  0805  0800               	movf	0,w
   504  0806  0A84               	incf	4,f
   505  0807  1903               	skipnz
   506  0808  0AFF               	incf	btemp+1,f
   507  0809  0008               	return
   508  080A                     stringcode:
   509  080A                     stringdir:
   510  080A  3008               	movlw	high stringdir
   511  080B  008A               	movwf	10
   512  080C  0804               	movf	4,w
   513  080D  0A84               	incf	4,f
   514  080E  0782               	addwf	2,f
   515  080F                     __stringbase:
   516  080F  3400               	retlw	0
   517  0810                     __end_of__stringtab:
   518  0810                     STR_1:
   519  0810  3453               	retlw	83	;'S'
   520  0811  3431               	retlw	49	;'1'
   521  0812  343A               	retlw	58	;':'
   522  0813  3420               	retlw	32	;' '
   523  0814  3420               	retlw	32	;' '
   524  0815  3420               	retlw	32	;' '
   525  0816  3453               	retlw	83	;'S'
   526  0817  3432               	retlw	50	;'2'
   527  0818  343A               	retlw	58	;':'
   528  0819  3420               	retlw	32	;' '
   529  081A  3420               	retlw	32	;' '
   530  081B  3420               	retlw	32	;' '
   531  081C  3453               	retlw	83	;'S'
   532  081D  3433               	retlw	51	;'3'
   533  081E  343A               	retlw	58	;':'
   534  081F  3400               	retlw	0
   535  0820                     STR_2:
   536  0820  3456               	retlw	86	;'V'
   537  0821  3420               	retlw	32	;' '
   538  0822  3400               	retlw	0
   539  0820                     
   540                           	psect	cinit
   541  0011                     start_initialization:	
   542                           ; #config settings
   543                           
   544  0011                     __initialization:
   545                           
   546                           ; Clear objects allocated to BANK0
   547  0011  1283               	bcf	3,5	;RP0=0, select bank0
   548  0012  1303               	bcf	3,6	;RP1=0, select bank0
   549  0013  01DB               	clrf	__pbssBANK0& (0+127)
   550  0014  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   551  0015  01DD               	clrf	(__pbssBANK0+2)& (0+127)
   552  0016  01DE               	clrf	(__pbssBANK0+3)& (0+127)
   553  0017  01DF               	clrf	(__pbssBANK0+4)& (0+127)
   554  0018  01E0               	clrf	(__pbssBANK0+5)& (0+127)
   555  0019  01E1               	clrf	(__pbssBANK0+6)& (0+127)
   556  001A  01E2               	clrf	(__pbssBANK0+7)& (0+127)
   557  001B  01E3               	clrf	(__pbssBANK0+8)& (0+127)
   558  001C  01E4               	clrf	(__pbssBANK0+9)& (0+127)
   559  001D  01E5               	clrf	(__pbssBANK0+10)& (0+127)
   560  001E  01E6               	clrf	(__pbssBANK0+11)& (0+127)
   561  001F                     end_of_initialization:	
   562                           ;End of C runtime variable initialization code
   563                           
   564  001F                     __end_of__initialization:
   565  001F  0183               	clrf	3
   566  0020  120A  158A  2EE3   	ljmp	_main	;jump to C main() function
   567                           
   568                           	psect	bssBANK0
   569  005B                     __pbssBANK0:
   570  005B                     _ADC_VALUE:
   571  005B                     	ds	12
   572                           
   573                           	psect	cstackCOMMON
   574  0070                     __pcstackCOMMON:
   575  0070                     ?_LcdInit:
   576  0070                     ?_initADC:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_readADC:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_analogToString:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_UARTDataReady:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_UARTReadChar:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_intToString:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_isrADC:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ??_isrADC:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_isr:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_LcdPort:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_LcdCmd:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_LcdWriteChar:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_UARTSendChar:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_main:	
   616                           ; 1 bytes @ 0x0
   617                           
   618                           
   619                           ; 2 bytes @ 0x0
   620  0070                     	ds	2
   621  0072                     ??_isr:
   622                           
   623                           ; 1 bytes @ 0x2
   624  0072                     	ds	3
   625  0075                     ??_initADC:
   626  0075                     ??_readADC:	
   627                           ; 1 bytes @ 0x5
   628                           
   629  0075                     ??_UARTDataReady:	
   630                           ; 1 bytes @ 0x5
   631                           
   632  0075                     ??_LcdPort:	
   633                           ; 1 bytes @ 0x5
   634                           
   635  0075                     ??_UARTSendChar:	
   636                           ; 1 bytes @ 0x5
   637                           
   638  0075                     ?___bmul:	
   639                           ; 1 bytes @ 0x5
   640                           
   641  0075                     ??___lldiv:	
   642                           ; 1 bytes @ 0x5
   643                           
   644  0075                     ?__Umul8_16:	
   645                           ; 1 bytes @ 0x5
   646                           
   647  0075                     ?___awdiv:	
   648                           ; 2 bytes @ 0x5
   649                           
   650  0075                     ?___awmod:	
   651                           ; 2 bytes @ 0x5
   652                           
   653  0075                     ?___fltol:	
   654                           ; 2 bytes @ 0x5
   655                           
   656  0075                     ?___xxtofl:	
   657                           ; 4 bytes @ 0x5
   658                           
   659  0075                     UARTSendChar@c:	
   660                           ; 4 bytes @ 0x5
   661                           
   662  0075                     ___bmul@multiplicand:	
   663                           ; 1 bytes @ 0x5
   664                           
   665  0075                     ___fladd@signs:	
   666                           ; 1 bytes @ 0x5
   667                           
   668  0075                     __Umul8_16@multiplicand:	
   669                           ; 1 bytes @ 0x5
   670                           
   671  0075                     ___awdiv@divisor:	
   672                           ; 1 bytes @ 0x5
   673                           
   674  0075                     ___awmod@divisor:	
   675                           ; 2 bytes @ 0x5
   676                           
   677  0075                     ___fltol@f1:	
   678                           ; 2 bytes @ 0x5
   679                           
   680  0075                     ___xxtofl@val:	
   681                           ; 4 bytes @ 0x5
   682                           
   683                           
   684                           ; 4 bytes @ 0x5
   685  0075                     	ds	1
   686  0076                     ?_UARTSendString:
   687  0076                     ??_UARTReadChar:	
   688                           ; 1 bytes @ 0x6
   689                           
   690  0076                     ??___bmul:	
   691                           ; 1 bytes @ 0x6
   692                           
   693  0076                     readADC@pin:	
   694                           ; 1 bytes @ 0x6
   695                           
   696  0076                     LcdPort@value:	
   697                           ; 1 bytes @ 0x6
   698                           
   699  0076                     ___fladd@aexp:	
   700                           ; 1 bytes @ 0x6
   701                           
   702  0076                     UARTSendString@str:	
   703                           ; 1 bytes @ 0x6
   704                           
   705                           
   706                           ; 2 bytes @ 0x6
   707  0076                     	ds	1
   708  0077                     ??__Umul8_16:
   709  0077                     ??_LcdCmd:	
   710                           ; 1 bytes @ 0x7
   711                           
   712  0077                     ??_LcdWriteChar:	
   713                           ; 1 bytes @ 0x7
   714                           
   715  0077                     ___bmul@product:	
   716                           ; 1 bytes @ 0x7
   717                           
   718  0077                     ___fladd@bexp:	
   719                           ; 1 bytes @ 0x7
   720                           
   721  0077                     ___awdiv@dividend:	
   722                           ; 1 bytes @ 0x7
   723                           
   724  0077                     ___awmod@dividend:	
   725                           ; 2 bytes @ 0x7
   726                           
   727                           
   728                           ; 2 bytes @ 0x7
   729  0077                     	ds	1
   730  0078                     LcdWriteChar@value:
   731  0078                     UARTSendString@max_length:	
   732                           ; 1 bytes @ 0x8
   733                           
   734  0078                     ___bmul@multiplier:	
   735                           ; 1 bytes @ 0x8
   736                           
   737  0078                     ___fladd@grs:	
   738                           ; 1 bytes @ 0x8
   739                           
   740                           
   741                           ; 1 bytes @ 0x8
   742  0078                     	ds	1
   743  0079                     ??___flsub:
   744                           
   745                           	psect	cstackBANK0
   746  0020                     __pcstackBANK0:	
   747                           ; 1 bytes @ 0x9
   748                           
   749  0020                     ?_LcdWriteString:
   750  0020                     ??_UARTSendString:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0020                     ??___awdiv:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0020                     ??___awmod:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0020                     ??___fltol:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0020                     ??___xxtofl:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0020                     ?___lldiv:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0020                     ?___fladd:	
   769                           ; 4 bytes @ 0x0
   770                           
   771  0020                     LcdCmd@value:	
   772                           ; 4 bytes @ 0x0
   773                           
   774  0020                     LcdWriteString@value:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0020                     __Umul8_16@product:	
   778                           ; 2 bytes @ 0x0
   779                           
   780  0020                     ___lldiv@divisor:	
   781                           ; 2 bytes @ 0x0
   782                           
   783  0020                     ___fladd@b:	
   784                           ; 4 bytes @ 0x0
   785                           
   786                           
   787                           ; 4 bytes @ 0x0
   788  0020                     	ds	1
   789  0021                     ??_LcdInit:
   790  0021                     ?_LcdSetCursor:	
   791                           ; 1 bytes @ 0x1
   792                           
   793  0021                     LcdSetCursor@column:	
   794                           ; 1 bytes @ 0x1
   795                           
   796  0021                     ___awdiv@counter:	
   797                           ; 1 bytes @ 0x1
   798                           
   799  0021                     ___awmod@counter:	
   800                           ; 1 bytes @ 0x1
   801                           
   802                           
   803                           ; 1 bytes @ 0x1
   804  0021                     	ds	1
   805  0022                     ??_LcdSetCursor:
   806  0022                     ??_LcdWriteString:	
   807                           ; 1 bytes @ 0x2
   808                           
   809  0022                     ___awdiv@sign:	
   810                           ; 1 bytes @ 0x2
   811                           
   812  0022                     ___awmod@sign:	
   813                           ; 1 bytes @ 0x2
   814                           
   815  0022                     __Umul8_16@word_mpld:	
   816                           ; 1 bytes @ 0x2
   817                           
   818                           
   819                           ; 2 bytes @ 0x2
   820  0022                     	ds	1
   821  0023                     UARTSendString@i:
   822  0023                     ___awdiv@quotient:	
   823                           ; 2 bytes @ 0x3
   824                           
   825                           
   826                           ; 2 bytes @ 0x3
   827  0023                     	ds	1
   828  0024                     LcdSetCursor@row:
   829  0024                     __Umul8_16@multiplier:	
   830                           ; 1 bytes @ 0x4
   831                           
   832  0024                     ___xxtofl@sign:	
   833                           ; 1 bytes @ 0x4
   834                           
   835  0024                     ___lldiv@dividend:	
   836                           ; 1 bytes @ 0x4
   837                           
   838  0024                     ___fladd@a:	
   839                           ; 4 bytes @ 0x4
   840                           
   841                           
   842                           ; 4 bytes @ 0x4
   843  0024                     	ds	1
   844  0025                     ??_intToString:
   845  0025                     ___fltol@sign1:	
   846                           ; 1 bytes @ 0x5
   847                           
   848  0025                     ___xxtofl@exp:	
   849                           ; 1 bytes @ 0x5
   850                           
   851  0025                     LcdWriteString@i:	
   852                           ; 1 bytes @ 0x5
   853                           
   854                           
   855                           ; 2 bytes @ 0x5
   856  0025                     	ds	1
   857  0026                     ___fltol@exp1:
   858  0026                     ___xxtofl@arg:	
   859                           ; 1 bytes @ 0x6
   860                           
   861                           
   862                           ; 4 bytes @ 0x6
   863  0026                     	ds	2
   864  0028                     ??___fladd:
   865  0028                     intToString@valor:	
   866                           ; 1 bytes @ 0x8
   867                           
   868  0028                     ___lldiv@quotient:	
   869                           ; 4 bytes @ 0x8
   870                           
   871                           
   872                           ; 4 bytes @ 0x8
   873  0028                     	ds	2
   874  002A                     ?___flmul:
   875  002A                     ___flmul@b:	
   876                           ; 4 bytes @ 0xA
   877                           
   878                           
   879                           ; 4 bytes @ 0xA
   880  002A                     	ds	2
   881  002C                     intToString@entero:
   882  002C                     ___lldiv@counter:	
   883                           ; 1 bytes @ 0xC
   884                           
   885                           
   886                           ; 1 bytes @ 0xC
   887  002C                     	ds	1
   888  002D                     ?_UARTInit:
   889  002D                     intToString@value:	
   890                           ; 1 bytes @ 0xD
   891                           
   892  002D                     UARTInit@baud_rate:	
   893                           ; 1 bytes @ 0xD
   894                           
   895                           
   896                           ; 4 bytes @ 0xD
   897  002D                     	ds	1
   898  002E                     ___flmul@a:
   899                           
   900                           ; 4 bytes @ 0xE
   901  002E                     	ds	2
   902  0030                     ?___flsub:
   903  0030                     ___flsub@a:	
   904                           ; 4 bytes @ 0x10
   905                           
   906                           
   907                           ; 4 bytes @ 0x10
   908  0030                     	ds	1
   909  0031                     UARTInit@BRGH:
   910                           
   911                           ; 1 bytes @ 0x11
   912  0031                     	ds	1
   913  0032                     ??_UARTInit:
   914  0032                     ??___flmul:	
   915                           ; 1 bytes @ 0x12
   916                           
   917                           
   918                           ; 1 bytes @ 0x12
   919  0032                     	ds	2
   920  0034                     ___flsub@b:
   921                           
   922                           ; 4 bytes @ 0x14
   923  0034                     	ds	3
   924  0037                     ___flmul@sign:
   925                           
   926                           ; 1 bytes @ 0x17
   927  0037                     	ds	1
   928  0038                     ___flmul@grs:
   929                           
   930                           ; 4 bytes @ 0x18
   931  0038                     	ds	4
   932  003C                     ___flmul@aexp:
   933                           
   934                           ; 1 bytes @ 0x1C
   935  003C                     	ds	1
   936  003D                     ___flmul@bexp:
   937                           
   938                           ; 1 bytes @ 0x1D
   939  003D                     	ds	1
   940  003E                     ___flmul@prod:
   941                           
   942                           ; 4 bytes @ 0x1E
   943  003E                     	ds	4
   944  0042                     ___flmul@temp:
   945                           
   946                           ; 2 bytes @ 0x22
   947  0042                     	ds	2
   948  0044                     ??_analogToString:
   949                           
   950                           ; 1 bytes @ 0x24
   951  0044                     	ds	4
   952  0048                     analogToString@value:
   953                           
   954                           ; 1 bytes @ 0x28
   955  0048                     	ds	1
   956  0049                     analogToString@string:
   957                           
   958                           ; 5 bytes @ 0x29
   959  0049                     	ds	5
   960  004E                     analogToString@entero:
   961                           
   962                           ; 1 bytes @ 0x2E
   963  004E                     	ds	1
   964  004F                     analogToString@valor:
   965                           
   966                           ; 4 bytes @ 0x2F
   967  004F                     	ds	4
   968  0053                     ??_main:
   969                           
   970                           ; 1 bytes @ 0x33
   971  0053                     	ds	1
   972  0054                     main@val2:
   973                           
   974                           ; 1 bytes @ 0x34
   975  0054                     	ds	1
   976  0055                     main@contadorString:
   977                           
   978                           ; 1 bytes @ 0x35
   979  0055                     	ds	1
   980  0056                     main@adc1:
   981                           
   982                           ; 1 bytes @ 0x36
   983  0056                     	ds	1
   984  0057                     main@adc2:
   985                           
   986                           ; 1 bytes @ 0x37
   987  0057                     	ds	1
   988  0058                     main@contador:
   989                           
   990                           ; 1 bytes @ 0x38
   991  0058                     	ds	1
   992  0059                     main@entrada:
   993                           
   994                           ; 1 bytes @ 0x39
   995  0059                     	ds	1
   996  005A                     main@val:
   997                           
   998                           ; 1 bytes @ 0x3A
   999  005A                     	ds	1
  1000                           
  1001                           	psect	maintext
  1002  0EE3                     __pmaintext:	
  1003 ;;
  1004 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1005 ;;
  1006 ;; *************** function _main *****************
  1007 ;; Defined at:
  1008 ;;		line 31 in file "main.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  entrada         1   57[BANK0 ] unsigned char 
  1013 ;;  val             1   58[BANK0 ] PTR volatile unsigned ch
  1014 ;;		 -> analogToString@string(5), 
  1015 ;;  contador        1   56[BANK0 ] unsigned char 
  1016 ;;  adc2            1   55[BANK0 ] PTR unsigned char 
  1017 ;;		 -> ADC_VALUE(12), 
  1018 ;;  adc1            1   54[BANK0 ] PTR unsigned char 
  1019 ;;		 -> ADC_VALUE(12), 
  1020 ;;  contadorStri    1   53[BANK0 ] PTR unsigned char 
  1021 ;;		 -> intToString@valor(4), 
  1022 ;;  val2            1   52[BANK0 ] PTR volatile unsigned ch
  1023 ;;		 -> analogToString@string(5), 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  2   36[None  ] int 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : B00/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       0       0       0       0
  1034 ;;      Locals:         0       7       0       0       0
  1035 ;;      Temps:          0       1       0       0       0
  1036 ;;      Totals:         0       8       0       0       0
  1037 ;;Total ram usage:        8 bytes
  1038 ;; Hardware stack levels required when called:    5
  1039 ;; This function calls:
  1040 ;;		_LcdInit
  1041 ;;		_LcdSetCursor
  1042 ;;		_LcdWriteString
  1043 ;;		_UARTDataReady
  1044 ;;		_UARTInit
  1045 ;;		_UARTReadChar
  1046 ;;		_UARTSendString
  1047 ;;		_analogToString
  1048 ;;		_initADC
  1049 ;;		_intToString
  1050 ;;		_readADC
  1051 ;; This function is called by:
  1052 ;;		Startup code after reset
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _main
  1058  0EE3                     _main:
  1059  0EE3                     l2383:	
  1060                           ;incstack = 0
  1061                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1062                           
  1063                           
  1064                           ;main.c: 32:   TRISD = 0;
  1065  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  1066  0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  1067  0EE5  0188               	clrf	8	;volatile
  1068                           
  1069                           ;main.c: 33:   TRISE = 0;
  1070  0EE6  0189               	clrf	9	;volatile
  1071  0EE7                     l2385:
  1072                           
  1073                           ;main.c: 34:   ANSEL = 3;
  1074  0EE7  3003               	movlw	3
  1075  0EE8  1683               	bsf	3,5	;RP0=1, select bank3
  1076  0EE9  1703               	bsf	3,6	;RP1=1, select bank3
  1077  0EEA  0088               	movwf	8	;volatile
  1078  0EEB                     l2387:
  1079                           
  1080                           ;main.c: 35:   ANSELH = 0;
  1081  0EEB  0189               	clrf	9	;volatile
  1082  0EEC                     l2389:
  1083                           
  1084                           ;main.c: 36:   LcdInit();
  1085  0EEC  120A  158A  233E  120A  158A  	fcall	_LcdInit
  1086  0EF1                     l2391:
  1087                           
  1088                           ;main.c: 37:   initADC();
  1089  0EF1  120A  158A  2205  120A  158A  	fcall	_initADC
  1090  0EF6                     l2393:
  1091                           
  1092                           ;main.c: 38:   UARTInit(9600,1);
  1093  0EF6  3000               	movlw	0
  1094  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0EF9  00B0               	movwf	UARTInit@baud_rate+3
  1097  0EFA  3000               	movlw	0
  1098  0EFB  00AF               	movwf	UARTInit@baud_rate+2
  1099  0EFC  3025               	movlw	37
  1100  0EFD  00AE               	movwf	UARTInit@baud_rate+1
  1101  0EFE  3080               	movlw	128
  1102  0EFF  00AD               	movwf	UARTInit@baud_rate
  1103  0F00  01B1               	clrf	UARTInit@BRGH
  1104  0F01  0AB1               	incf	UARTInit@BRGH,f
  1105  0F02  120A  158A  256A  120A  158A  	fcall	_UARTInit
  1106  0F07                     l2395:
  1107                           
  1108                           ;main.c: 39:   volatile char *val;;main.c: 40:   volatile char *val2;;main.c: 41:   char
      +                           *contadorString;;main.c: 42:   uint8_t *adc1;;main.c: 43:   uint8_t *adc2;;main.c: 45: 
      +                            uint8_t contador = 0;
  1109  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  1110  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  1111  0F09  01D8               	clrf	main@contador
  1112  0F0A                     l2397:
  1113                           
  1114                           ;main.c: 48:     adc1 = readADC(0);
  1115  0F0A  3000               	movlw	0
  1116  0F0B  120A  158A  2254  120A  158A  	fcall	_readADC
  1117  0F10  1283               	bcf	3,5	;RP0=0, select bank0
  1118  0F11  1303               	bcf	3,6	;RP1=0, select bank0
  1119  0F12  00D3               	movwf	??_main
  1120  0F13  0853               	movf	??_main,w
  1121  0F14  00D6               	movwf	main@adc1
  1122  0F15                     l2399:
  1123                           
  1124                           ;main.c: 50:     LcdSetCursor(1,1);
  1125  0F15  01A1               	clrf	LcdSetCursor@column
  1126  0F16  0AA1               	incf	LcdSetCursor@column,f
  1127  0F17  3001               	movlw	1
  1128  0F18  120A  158A  22AA  120A  158A  	fcall	_LcdSetCursor
  1129  0F1D                     l2401:
  1130                           
  1131                           ;main.c: 51:     adc2 = readADC(1);
  1132  0F1D  3001               	movlw	1
  1133  0F1E  120A  158A  2254  120A  158A  	fcall	_readADC
  1134  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  1136  0F25  00D3               	movwf	??_main
  1137  0F26  0853               	movf	??_main,w
  1138  0F27  00D7               	movwf	main@adc2
  1139  0F28                     l2403:
  1140                           
  1141                           ;main.c: 52:     LcdWriteString("S1:   S2:   S3:");
  1142  0F28  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1143  0F29  00A0               	movwf	LcdWriteString@value
  1144  0F2A  3080               	movlw	128
  1145  0F2B  00A1               	movwf	LcdWriteString@value+1
  1146  0F2C  120A  158A  22F8  120A  158A  	fcall	_LcdWriteString
  1147  0F31                     l2405:
  1148                           
  1149                           ;main.c: 53:     LcdSetCursor(2,1);
  1150  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0F33  01A1               	clrf	LcdSetCursor@column
  1153  0F34  0AA1               	incf	LcdSetCursor@column,f
  1154  0F35  3002               	movlw	2
  1155  0F36  120A  158A  22AA  120A  158A  	fcall	_LcdSetCursor
  1156  0F3B                     l2407:
  1157                           
  1158                           ;main.c: 55:     val = analogToString(*adc1);
  1159  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0F3D  0856               	movf	main@adc1,w
  1162  0F3E  0084               	movwf	4
  1163  0F3F  1383               	bcf	3,7	;select IRP bank0
  1164  0F40  0800               	movf	0,w
  1165  0F41  120A  118A  2614  120A  158A  	fcall	_analogToString
  1166  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  1168  0F48  00D3               	movwf	??_main
  1169  0F49  0853               	movf	??_main,w
  1170  0F4A  00DA               	movwf	main@val
  1171  0F4B                     l2409:
  1172                           
  1173                           ;main.c: 56:     LcdWriteString(val);
  1174  0F4B  085A               	movf	main@val,w
  1175  0F4C  00A0               	movwf	LcdWriteString@value
  1176  0F4D  3000               	movlw	0
  1177  0F4E  00A1               	movwf	LcdWriteString@value+1
  1178  0F4F  120A  158A  22F8  120A  158A  	fcall	_LcdWriteString
  1179  0F54                     l2411:
  1180                           
  1181                           ;main.c: 57:     LcdWriteString("V ");
  1182  0F54  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1183  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  1184  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  1185  0F57  00A0               	movwf	LcdWriteString@value
  1186  0F58  3080               	movlw	128
  1187  0F59  00A1               	movwf	LcdWriteString@value+1
  1188  0F5A  120A  158A  22F8  120A  158A  	fcall	_LcdWriteString
  1189  0F5F                     l2413:
  1190                           
  1191                           ;main.c: 59:     UARTSendString(val,6);
  1192  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0F61  085A               	movf	main@val,w
  1195  0F62  00F6               	movwf	UARTSendString@str
  1196  0F63  3000               	movlw	0
  1197  0F64  00F7               	movwf	UARTSendString@str+1
  1198  0F65  3006               	movlw	6
  1199  0F66  00D3               	movwf	??_main
  1200  0F67  0853               	movf	??_main,w
  1201  0F68  00F8               	movwf	UARTSendString@max_length
  1202  0F69  120A  158A  2389  120A  158A  	fcall	_UARTSendString
  1203  0F6E                     l2415:
  1204                           
  1205                           ;main.c: 60:     UARTSendString("V ",3);
  1206  0F6E  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1207  0F6F  00F6               	movwf	UARTSendString@str
  1208  0F70  3080               	movlw	128
  1209  0F71  00F7               	movwf	UARTSendString@str+1
  1210  0F72  3003               	movlw	3
  1211  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0F75  00D3               	movwf	??_main
  1214  0F76  0853               	movf	??_main,w
  1215  0F77  00F8               	movwf	UARTSendString@max_length
  1216  0F78  120A  158A  2389  120A  158A  	fcall	_UARTSendString
  1217  0F7D                     l2417:
  1218                           
  1219                           ;main.c: 61:     val2 = analogToString(*adc2);
  1220  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0F7F  0857               	movf	main@adc2,w
  1223  0F80  0084               	movwf	4
  1224  0F81  1383               	bcf	3,7	;select IRP bank0
  1225  0F82  0800               	movf	0,w
  1226  0F83  120A  118A  2614  120A  158A  	fcall	_analogToString
  1227  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  1228  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  1229  0F8A  00D3               	movwf	??_main
  1230  0F8B  0853               	movf	??_main,w
  1231  0F8C  00D4               	movwf	main@val2
  1232  0F8D                     l2419:
  1233                           
  1234                           ;main.c: 62:     LcdWriteString(val2);
  1235  0F8D  0854               	movf	main@val2,w
  1236  0F8E  00A0               	movwf	LcdWriteString@value
  1237  0F8F  3000               	movlw	0
  1238  0F90  00A1               	movwf	LcdWriteString@value+1
  1239  0F91  120A  158A  22F8  120A  158A  	fcall	_LcdWriteString
  1240  0F96                     l2421:
  1241                           
  1242                           ;main.c: 63:     LcdWriteString("V ");
  1243  0F96  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1244  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0F99  00A0               	movwf	LcdWriteString@value
  1247  0F9A  3080               	movlw	128
  1248  0F9B  00A1               	movwf	LcdWriteString@value+1
  1249  0F9C  120A  158A  22F8  120A  158A  	fcall	_LcdWriteString
  1250  0FA1                     l2423:
  1251                           
  1252                           ;main.c: 66:     UARTSendString(val,6);
  1253  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0FA3  085A               	movf	main@val,w
  1256  0FA4  00F6               	movwf	UARTSendString@str
  1257  0FA5  3000               	movlw	0
  1258  0FA6  00F7               	movwf	UARTSendString@str+1
  1259  0FA7  3006               	movlw	6
  1260  0FA8  00D3               	movwf	??_main
  1261  0FA9  0853               	movf	??_main,w
  1262  0FAA  00F8               	movwf	UARTSendString@max_length
  1263  0FAB  120A  158A  2389  120A  158A  	fcall	_UARTSendString
  1264  0FB0                     l2425:
  1265                           
  1266                           ;main.c: 67:     UARTSendString("V ",3);
  1267  0FB0  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1268  0FB1  00F6               	movwf	UARTSendString@str
  1269  0FB2  3080               	movlw	128
  1270  0FB3  00F7               	movwf	UARTSendString@str+1
  1271  0FB4  3003               	movlw	3
  1272  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0FB7  00D3               	movwf	??_main
  1275  0FB8  0853               	movf	??_main,w
  1276  0FB9  00F8               	movwf	UARTSendString@max_length
  1277  0FBA  120A  158A  2389  120A  158A  	fcall	_UARTSendString
  1278  0FBF                     l2427:
  1279                           
  1280                           ;main.c: 72:     if (UARTDataReady()){
  1281  0FBF  120A  158A  21D6  120A  158A  	fcall	_UARTDataReady
  1282  0FC4  3A00               	xorlw	0
  1283  0FC5  1903               	skipnz
  1284  0FC6  2FC8               	goto	u3581
  1285  0FC7  2FC9               	goto	u3580
  1286  0FC8                     u3581:
  1287  0FC8  2FE6               	goto	l2439
  1288  0FC9                     u3580:
  1289  0FC9                     l2429:
  1290                           
  1291                           ;main.c: 73:         char entrada =UARTReadChar();
  1292  0FC9  120A  158A  21F7  120A  158A  	fcall	_UARTReadChar
  1293  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0FD0  00D3               	movwf	??_main
  1296  0FD1  0853               	movf	??_main,w
  1297  0FD2  00D9               	movwf	main@entrada
  1298  0FD3                     l2431:
  1299                           
  1300                           ;main.c: 74:         if( entrada == '+'){
  1301  0FD3  302B               	movlw	43
  1302  0FD4  0659               	xorwf	main@entrada,w
  1303  0FD5  1D03               	btfss	3,2
  1304  0FD6  2FD8               	goto	u3591
  1305  0FD7  2FD9               	goto	u3590
  1306  0FD8                     u3591:
  1307  0FD8  2FDE               	goto	l2435
  1308  0FD9                     u3590:
  1309  0FD9                     l2433:
  1310                           
  1311                           ;main.c: 75:             contador++;
  1312  0FD9  3001               	movlw	1
  1313  0FDA  00D3               	movwf	??_main
  1314  0FDB  0853               	movf	??_main,w
  1315  0FDC  07D8               	addwf	main@contador,f
  1316                           
  1317                           ;main.c: 76:         }
  1318  0FDD  2FE6               	goto	l2439
  1319  0FDE                     l2435:
  1320  0FDE  302D               	movlw	45
  1321  0FDF  0659               	xorwf	main@entrada,w
  1322  0FE0  1D03               	btfss	3,2
  1323  0FE1  2FE3               	goto	u3601
  1324  0FE2  2FE4               	goto	u3600
  1325  0FE3                     u3601:
  1326  0FE3  2FE6               	goto	l2439
  1327  0FE4                     u3600:
  1328  0FE4                     l2437:
  1329                           
  1330                           ;main.c: 78:             contador--;
  1331  0FE4  3001               	movlw	1
  1332  0FE5  02D8               	subwf	main@contador,f
  1333  0FE6                     l2439:
  1334                           
  1335                           ;main.c: 82:     contadorString = intToString(contador);
  1336  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0FE8  0858               	movf	main@contador,w
  1339  0FE9  120A  158A  243B  120A  158A  	fcall	_intToString
  1340  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0FF0  00D3               	movwf	??_main
  1343  0FF1  0853               	movf	??_main,w
  1344  0FF2  00D5               	movwf	main@contadorString
  1345  0FF3                     l2441:
  1346                           
  1347                           ;main.c: 83:     LcdWriteString(contadorString);
  1348  0FF3  0855               	movf	main@contadorString,w
  1349  0FF4  00A0               	movwf	LcdWriteString@value
  1350  0FF5  3000               	movlw	0
  1351  0FF6  00A1               	movwf	LcdWriteString@value+1
  1352  0FF7  120A  158A  22F8  120A  158A  	fcall	_LcdWriteString
  1353  0FFC  2F0A               	goto	l2397
  1354  0FFD  120A  118A  280E   	ljmp	start
  1355  1000                     __end_of_main:
  1356                           
  1357                           	psect	text1
  1358  0A54                     __ptext1:	
  1359 ;; *************** function _readADC *****************
  1360 ;; Defined at:
  1361 ;;		line 47 in file "ADC.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  pin             1    wreg     unsigned char 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  pin             1    6[COMMON] unsigned char 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      PTR unsigned char 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       0       0       0       0
  1376 ;;      Locals:         1       0       0       0       0
  1377 ;;      Temps:          1       0       0       0       0
  1378 ;;      Totals:         2       0       0       0       0
  1379 ;;Total ram usage:        2 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    2
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function _readADC
  1391  0A54                     _readADC:
  1392                           
  1393                           ;incstack = 0
  1394                           ; Regs used in _readADC: [wreg+status,2+status,0]
  1395                           ;readADC@pin stored from wreg
  1396  0A54  00F6               	movwf	readADC@pin
  1397  0A55                     l2277:
  1398                           
  1399                           ;ADC.c: 48:     if (ADCON0bits.GO ==0 ){
  1400  0A55  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0A56  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0A57  189F               	btfsc	31,1	;volatile
  1403  0A58  2A5A               	goto	u3481
  1404  0A59  2A5B               	goto	u3480
  1405  0A5A                     u3481:
  1406  0A5A  2A69               	goto	l77
  1407  0A5B                     u3480:
  1408  0A5B                     l2279:
  1409                           
  1410                           ;ADC.c: 49:          ADCON0bits.CHS = pin;
  1411  0A5B  0876               	movf	readADC@pin,w
  1412  0A5C  00F5               	movwf	??_readADC
  1413  0A5D  0DF5               	rlf	??_readADC,f
  1414  0A5E  0DF5               	rlf	??_readADC,f
  1415  0A5F  081F               	movf	31,w	;volatile
  1416  0A60  0675               	xorwf	??_readADC,w
  1417  0A61  39C3               	andlw	-61
  1418  0A62  0675               	xorwf	??_readADC,w
  1419  0A63  009F               	movwf	31	;volatile
  1420  0A64                     l2281:
  1421                           
  1422                           ;ADC.c: 50:         _delay((unsigned long)((3)*(4000000/4000000.0)));
  1423  0A64  2A65               	nop2	;2 cycle nop
  1424  0A65  0000               	nop
  1425  0A66                     l2283:
  1426                           
  1427                           ;ADC.c: 51:         ADCON0bits.GO = 1;
  1428  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  1429  0A67  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0A68  149F               	bsf	31,1	;volatile
  1431  0A69                     l77:	
  1432                           ;ADC.c: 52:     }
  1433                           
  1434                           
  1435                           ;ADC.c: 53:     return &ADC_VALUE[pin];
  1436  0A69  0876               	movf	readADC@pin,w
  1437  0A6A  3E5B               	addlw	(low (_ADC_VALUE| 0))& (0+255)
  1438  0A6B                     l78:
  1439  0A6B  0008               	return
  1440  0A6C                     __end_of_readADC:
  1441                           
  1442                           	psect	text2
  1443  0C3B                     __ptext2:	
  1444 ;; *************** function _intToString *****************
  1445 ;; Defined at:
  1446 ;;		line 112 in file "main.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  value           1    wreg     unsigned char 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  value           1   13[BANK0 ] unsigned char 
  1451 ;;  valor           4    8[BANK0 ] unsigned char [4]
  1452 ;;  entero          1   12[BANK0 ] unsigned char 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      PTR unsigned char 
  1455 ;; Registers used:
  1456 ;;		wreg, status,2, status,0, pclath, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1462 ;;      Params:         0       0       0       0       0
  1463 ;;      Locals:         0       6       0       0       0
  1464 ;;      Temps:          0       3       0       0       0
  1465 ;;      Totals:         0       9       0       0       0
  1466 ;;Total ram usage:        9 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    3
  1469 ;; This function calls:
  1470 ;;		___awdiv
  1471 ;;		___awmod
  1472 ;;		___bmul
  1473 ;; This function is called by:
  1474 ;;		_main
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           
  1479                           ;psect for function _intToString
  1480  0C3B                     _intToString:
  1481                           
  1482                           ;incstack = 0
  1483                           ; Regs used in _intToString: [wreg+status,2+status,0+pclath+cstack]
  1484                           ;intToString@value stored from wreg
  1485  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  1487  0C3D  00AD               	movwf	intToString@value
  1488  0C3E                     l2359:
  1489                           
  1490                           ;main.c: 113:     char valor[4];;main.c: 115:     uint8_t entero = value/100;
  1491  0C3E  3064               	movlw	100
  1492  0C3F  00F5               	movwf	___awdiv@divisor
  1493  0C40  3000               	movlw	0
  1494  0C41  00F6               	movwf	___awdiv@divisor+1
  1495  0C42  082D               	movf	intToString@value,w
  1496  0C43  00A5               	movwf	??_intToString
  1497  0C44  01A6               	clrf	??_intToString+1
  1498  0C45  0825               	movf	??_intToString,w
  1499  0C46  00F7               	movwf	___awdiv@dividend
  1500  0C47  0826               	movf	??_intToString+1,w
  1501  0C48  00F8               	movwf	___awdiv@dividend+1
  1502  0C49  120A  158A  2501  120A  158A  	fcall	___awdiv
  1503  0C4E  0875               	movf	?___awdiv,w
  1504  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0C50  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0C51  00A7               	movwf	??_intToString+2
  1507  0C52  0827               	movf	??_intToString+2,w
  1508  0C53  00AC               	movwf	intToString@entero
  1509  0C54                     l2361:
  1510                           
  1511                           ;main.c: 116:     valor[0] = entero+48;
  1512  0C54  082C               	movf	intToString@entero,w
  1513  0C55  3E30               	addlw	48
  1514  0C56  00A5               	movwf	??_intToString
  1515  0C57  0825               	movf	??_intToString,w
  1516  0C58  00A8               	movwf	intToString@valor
  1517  0C59                     l2363:
  1518                           
  1519                           ;main.c: 118:     value -= 100*entero;
  1520  0C59  3064               	movlw	100
  1521  0C5A  00A5               	movwf	??_intToString
  1522  0C5B  0825               	movf	??_intToString,w
  1523  0C5C  00F5               	movwf	___bmul@multiplicand
  1524  0C5D  082C               	movf	intToString@entero,w
  1525  0C5E  120A  158A  223F  120A  158A  	fcall	___bmul
  1526  0C63  1283               	bcf	3,5	;RP0=0, select bank0
  1527  0C64  1303               	bcf	3,6	;RP1=0, select bank0
  1528  0C65  00A6               	movwf	??_intToString+1
  1529  0C66  0826               	movf	??_intToString+1,w
  1530  0C67  02AD               	subwf	intToString@value,f
  1531  0C68                     l2365:
  1532                           
  1533                           ;main.c: 120:     valor[1] = value/10 + 48 ;
  1534  0C68  300A               	movlw	10
  1535  0C69  00F5               	movwf	___awdiv@divisor
  1536  0C6A  3000               	movlw	0
  1537  0C6B  00F6               	movwf	___awdiv@divisor+1
  1538  0C6C  082D               	movf	intToString@value,w
  1539  0C6D  00A5               	movwf	??_intToString
  1540  0C6E  01A6               	clrf	??_intToString+1
  1541  0C6F  0825               	movf	??_intToString,w
  1542  0C70  00F7               	movwf	___awdiv@dividend
  1543  0C71  0826               	movf	??_intToString+1,w
  1544  0C72  00F8               	movwf	___awdiv@dividend+1
  1545  0C73  120A  158A  2501  120A  158A  	fcall	___awdiv
  1546  0C78  0875               	movf	?___awdiv,w
  1547  0C79  3E30               	addlw	48
  1548  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0C7C  00A7               	movwf	??_intToString+2
  1551  0C7D  0827               	movf	??_intToString+2,w
  1552  0C7E  00A9               	movwf	intToString@valor+1
  1553  0C7F                     l2367:
  1554                           
  1555                           ;main.c: 121:     valor[2] = value%10 + 48;
  1556  0C7F  300A               	movlw	10
  1557  0C80  00F5               	movwf	___awmod@divisor
  1558  0C81  3000               	movlw	0
  1559  0C82  00F6               	movwf	___awmod@divisor+1
  1560  0C83  082D               	movf	intToString@value,w
  1561  0C84  00A5               	movwf	??_intToString
  1562  0C85  01A6               	clrf	??_intToString+1
  1563  0C86  0825               	movf	??_intToString,w
  1564  0C87  00F7               	movwf	___awmod@dividend
  1565  0C88  0826               	movf	??_intToString+1,w
  1566  0C89  00F8               	movwf	___awmod@dividend+1
  1567  0C8A  120A  158A  23E0  120A  158A  	fcall	___awmod
  1568  0C8F  0875               	movf	?___awmod,w
  1569  0C90  3E30               	addlw	48
  1570  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  1571  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  1572  0C93  00A7               	movwf	??_intToString+2
  1573  0C94  0827               	movf	??_intToString+2,w
  1574  0C95  00AA               	movwf	intToString@valor+2
  1575  0C96                     l2369:
  1576                           
  1577                           ;main.c: 122:     valor[3] = '\0';
  1578  0C96  01AB               	clrf	intToString@valor+3
  1579  0C97                     l2371:
  1580                           
  1581                           ;main.c: 124:     return valor;
  1582  0C97  3028               	movlw	(low (intToString@valor| 0))& (0+255)
  1583  0C98                     l50:
  1584  0C98  0008               	return
  1585  0C99                     __end_of_intToString:
  1586                           
  1587                           	psect	text3
  1588  0A3F                     __ptext3:	
  1589 ;; *************** function ___bmul *****************
  1590 ;; Defined at:
  1591 ;;		line 4 in file "D:\programas\xc8\pic\sources\c90\common\Umul8.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  multiplier      1    wreg     unsigned char 
  1594 ;;  multiplicand    1    5[COMMON] unsigned char 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  multiplier      1    8[COMMON] unsigned char 
  1597 ;;  product         1    7[COMMON] unsigned char 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      unsigned char 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2, status,0
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1607 ;;      Params:         1       0       0       0       0
  1608 ;;      Locals:         2       0       0       0       0
  1609 ;;      Temps:          1       0       0       0       0
  1610 ;;      Totals:         4       0       0       0       0
  1611 ;;Total ram usage:        4 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; Hardware stack levels required when called:    2
  1614 ;; This function calls:
  1615 ;;		Nothing
  1616 ;; This function is called by:
  1617 ;;		_intToString
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           
  1622                           ;psect for function ___bmul
  1623  0A3F                     ___bmul:
  1624                           
  1625                           ;incstack = 0
  1626                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1627                           ;___bmul@multiplier stored from wreg
  1628  0A3F  00F8               	movwf	___bmul@multiplier
  1629  0A40                     l1873:
  1630  0A40  01F7               	clrf	___bmul@product
  1631  0A41                     l1875:
  1632  0A41  1C78               	btfss	___bmul@multiplier,0
  1633  0A42  2A44               	goto	u2561
  1634  0A43  2A45               	goto	u2560
  1635  0A44                     u2561:
  1636  0A44  2A49               	goto	l1879
  1637  0A45                     u2560:
  1638  0A45                     l1877:
  1639  0A45  0875               	movf	___bmul@multiplicand,w
  1640  0A46  00F6               	movwf	??___bmul
  1641  0A47  0876               	movf	??___bmul,w
  1642  0A48  07F7               	addwf	___bmul@product,f
  1643  0A49                     l1879:
  1644  0A49  1003               	clrc
  1645  0A4A  0DF5               	rlf	___bmul@multiplicand,f
  1646  0A4B                     l1881:
  1647  0A4B  1003               	clrc
  1648  0A4C  0CF8               	rrf	___bmul@multiplier,f
  1649  0A4D  0878               	movf	___bmul@multiplier,w
  1650  0A4E  1D03               	btfss	3,2
  1651  0A4F  2A51               	goto	u2571
  1652  0A50  2A52               	goto	u2570
  1653  0A51                     u2571:
  1654  0A51  2A41               	goto	l1875
  1655  0A52                     u2570:
  1656  0A52                     l1883:
  1657  0A52  0877               	movf	___bmul@product,w
  1658  0A53                     l301:
  1659  0A53  0008               	return
  1660  0A54                     __end_of___bmul:
  1661                           
  1662                           	psect	text4
  1663  0BE0                     __ptext4:	
  1664 ;; *************** function ___awmod *****************
  1665 ;; Defined at:
  1666 ;;		line 5 in file "D:\programas\xc8\pic\sources\c90\common\awmod.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  divisor         2    5[COMMON] int 
  1669 ;;  dividend        2    7[COMMON] int 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  sign            1    2[BANK0 ] unsigned char 
  1672 ;;  counter         1    1[BANK0 ] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  2    5[COMMON] int 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2, status,0
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1682 ;;      Params:         4       0       0       0       0
  1683 ;;      Locals:         0       2       0       0       0
  1684 ;;      Temps:          0       1       0       0       0
  1685 ;;      Totals:         4       3       0       0       0
  1686 ;;Total ram usage:        7 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    2
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_intToString
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function ___awmod
  1698  0BE0                     ___awmod:
  1699  0BE0                     l1955:	
  1700                           ;incstack = 0
  1701                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1702                           
  1703  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  1705  0BE2  01A2               	clrf	___awmod@sign
  1706  0BE3                     l1957:
  1707  0BE3  1FF8               	btfss	___awmod@dividend+1,7
  1708  0BE4  2BE6               	goto	u2751
  1709  0BE5  2BE7               	goto	u2750
  1710  0BE6                     u2751:
  1711  0BE6  2BEE               	goto	l1963
  1712  0BE7                     u2750:
  1713  0BE7                     l1959:
  1714  0BE7  09F7               	comf	___awmod@dividend,f
  1715  0BE8  09F8               	comf	___awmod@dividend+1,f
  1716  0BE9  0AF7               	incf	___awmod@dividend,f
  1717  0BEA  1903               	skipnz
  1718  0BEB  0AF8               	incf	___awmod@dividend+1,f
  1719  0BEC                     l1961:
  1720  0BEC  01A2               	clrf	___awmod@sign
  1721  0BED  0AA2               	incf	___awmod@sign,f
  1722  0BEE                     l1963:
  1723  0BEE  1FF6               	btfss	___awmod@divisor+1,7
  1724  0BEF  2BF1               	goto	u2761
  1725  0BF0  2BF2               	goto	u2760
  1726  0BF1                     u2761:
  1727  0BF1  2BF7               	goto	l1967
  1728  0BF2                     u2760:
  1729  0BF2                     l1965:
  1730  0BF2  09F5               	comf	___awmod@divisor,f
  1731  0BF3  09F6               	comf	___awmod@divisor+1,f
  1732  0BF4  0AF5               	incf	___awmod@divisor,f
  1733  0BF5  1903               	skipnz
  1734  0BF6  0AF6               	incf	___awmod@divisor+1,f
  1735  0BF7                     l1967:
  1736  0BF7  0875               	movf	___awmod@divisor,w
  1737  0BF8  0476               	iorwf	___awmod@divisor+1,w
  1738  0BF9  1903               	btfsc	3,2
  1739  0BFA  2BFC               	goto	u2771
  1740  0BFB  2BFD               	goto	u2770
  1741  0BFC                     u2771:
  1742  0BFC  2C2C               	goto	l1985
  1743  0BFD                     u2770:
  1744  0BFD                     l1969:
  1745  0BFD  01A1               	clrf	___awmod@counter
  1746  0BFE  0AA1               	incf	___awmod@counter,f
  1747  0BFF  2C0B               	goto	l1975
  1748  0C00                     l1971:
  1749  0C00  3001               	movlw	1
  1750  0C01                     u2785:
  1751  0C01  1003               	clrc
  1752  0C02  0DF5               	rlf	___awmod@divisor,f
  1753  0C03  0DF6               	rlf	___awmod@divisor+1,f
  1754  0C04  3EFF               	addlw	-1
  1755  0C05  1D03               	skipz
  1756  0C06  2C01               	goto	u2785
  1757  0C07                     l1973:
  1758  0C07  3001               	movlw	1
  1759  0C08  00A0               	movwf	??___awmod
  1760  0C09  0820               	movf	??___awmod,w
  1761  0C0A  07A1               	addwf	___awmod@counter,f
  1762  0C0B                     l1975:
  1763  0C0B  1FF6               	btfss	___awmod@divisor+1,7
  1764  0C0C  2C0E               	goto	u2791
  1765  0C0D  2C0F               	goto	u2790
  1766  0C0E                     u2791:
  1767  0C0E  2C00               	goto	l1971
  1768  0C0F                     u2790:
  1769  0C0F                     l1977:
  1770  0C0F  0876               	movf	___awmod@divisor+1,w
  1771  0C10  0278               	subwf	___awmod@dividend+1,w
  1772  0C11  1D03               	skipz
  1773  0C12  2C15               	goto	u2805
  1774  0C13  0875               	movf	___awmod@divisor,w
  1775  0C14  0277               	subwf	___awmod@dividend,w
  1776  0C15                     u2805:
  1777  0C15  1C03               	skipc
  1778  0C16  2C18               	goto	u2801
  1779  0C17  2C19               	goto	u2800
  1780  0C18                     u2801:
  1781  0C18  2C1F               	goto	l1981
  1782  0C19                     u2800:
  1783  0C19                     l1979:
  1784  0C19  0875               	movf	___awmod@divisor,w
  1785  0C1A  02F7               	subwf	___awmod@dividend,f
  1786  0C1B  0876               	movf	___awmod@divisor+1,w
  1787  0C1C  1C03               	skipc
  1788  0C1D  03F8               	decf	___awmod@dividend+1,f
  1789  0C1E  02F8               	subwf	___awmod@dividend+1,f
  1790  0C1F                     l1981:
  1791  0C1F  3001               	movlw	1
  1792  0C20                     u2815:
  1793  0C20  1003               	clrc
  1794  0C21  0CF6               	rrf	___awmod@divisor+1,f
  1795  0C22  0CF5               	rrf	___awmod@divisor,f
  1796  0C23  3EFF               	addlw	-1
  1797  0C24  1D03               	skipz
  1798  0C25  2C20               	goto	u2815
  1799  0C26                     l1983:
  1800  0C26  3001               	movlw	1
  1801  0C27  02A1               	subwf	___awmod@counter,f
  1802  0C28  1D03               	btfss	3,2
  1803  0C29  2C2B               	goto	u2821
  1804  0C2A  2C2C               	goto	u2820
  1805  0C2B                     u2821:
  1806  0C2B  2C0F               	goto	l1977
  1807  0C2C                     u2820:
  1808  0C2C                     l1985:
  1809  0C2C  0822               	movf	___awmod@sign,w
  1810  0C2D  1903               	btfsc	3,2
  1811  0C2E  2C30               	goto	u2831
  1812  0C2F  2C31               	goto	u2830
  1813  0C30                     u2831:
  1814  0C30  2C36               	goto	l1989
  1815  0C31                     u2830:
  1816  0C31                     l1987:
  1817  0C31  09F7               	comf	___awmod@dividend,f
  1818  0C32  09F8               	comf	___awmod@dividend+1,f
  1819  0C33  0AF7               	incf	___awmod@dividend,f
  1820  0C34  1903               	skipnz
  1821  0C35  0AF8               	incf	___awmod@dividend+1,f
  1822  0C36                     l1989:
  1823  0C36  0878               	movf	___awmod@dividend+1,w
  1824  0C37  00F6               	movwf	?___awmod+1
  1825  0C38  0877               	movf	___awmod@dividend,w
  1826  0C39  00F5               	movwf	?___awmod
  1827  0C3A                     l441:
  1828  0C3A  0008               	return
  1829  0C3B                     __end_of___awmod:
  1830                           
  1831                           	psect	text5
  1832  0D01                     __ptext5:	
  1833 ;; *************** function ___awdiv *****************
  1834 ;; Defined at:
  1835 ;;		line 5 in file "D:\programas\xc8\pic\sources\c90\common\awdiv.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  divisor         2    5[COMMON] int 
  1838 ;;  dividend        2    7[COMMON] int 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  quotient        2    3[BANK0 ] int 
  1841 ;;  sign            1    2[BANK0 ] unsigned char 
  1842 ;;  counter         1    1[BANK0 ] unsigned char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  2    5[COMMON] int 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, status,0
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         4       0       0       0       0
  1853 ;;      Locals:         0       4       0       0       0
  1854 ;;      Temps:          0       1       0       0       0
  1855 ;;      Totals:         4       5       0       0       0
  1856 ;;Total ram usage:        9 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    2
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_intToString
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           
  1867                           ;psect for function ___awdiv
  1868  0D01                     ___awdiv:
  1869  0D01                     l1911:	
  1870                           ;incstack = 0
  1871                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1872                           
  1873  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0D03  01A2               	clrf	___awdiv@sign
  1876  0D04                     l1913:
  1877  0D04  1FF6               	btfss	___awdiv@divisor+1,7
  1878  0D05  2D07               	goto	u2651
  1879  0D06  2D08               	goto	u2650
  1880  0D07                     u2651:
  1881  0D07  2D0F               	goto	l1919
  1882  0D08                     u2650:
  1883  0D08                     l1915:
  1884  0D08  09F5               	comf	___awdiv@divisor,f
  1885  0D09  09F6               	comf	___awdiv@divisor+1,f
  1886  0D0A  0AF5               	incf	___awdiv@divisor,f
  1887  0D0B  1903               	skipnz
  1888  0D0C  0AF6               	incf	___awdiv@divisor+1,f
  1889  0D0D                     l1917:
  1890  0D0D  01A2               	clrf	___awdiv@sign
  1891  0D0E  0AA2               	incf	___awdiv@sign,f
  1892  0D0F                     l1919:
  1893  0D0F  1FF8               	btfss	___awdiv@dividend+1,7
  1894  0D10  2D12               	goto	u2661
  1895  0D11  2D13               	goto	u2660
  1896  0D12                     u2661:
  1897  0D12  2D1C               	goto	l1925
  1898  0D13                     u2660:
  1899  0D13                     l1921:
  1900  0D13  09F7               	comf	___awdiv@dividend,f
  1901  0D14  09F8               	comf	___awdiv@dividend+1,f
  1902  0D15  0AF7               	incf	___awdiv@dividend,f
  1903  0D16  1903               	skipnz
  1904  0D17  0AF8               	incf	___awdiv@dividend+1,f
  1905  0D18                     l1923:
  1906  0D18  3001               	movlw	1
  1907  0D19  00A0               	movwf	??___awdiv
  1908  0D1A  0820               	movf	??___awdiv,w
  1909  0D1B  06A2               	xorwf	___awdiv@sign,f
  1910  0D1C                     l1925:
  1911  0D1C  01A3               	clrf	___awdiv@quotient
  1912  0D1D  01A4               	clrf	___awdiv@quotient+1
  1913  0D1E                     l1927:
  1914  0D1E  0875               	movf	___awdiv@divisor,w
  1915  0D1F  0476               	iorwf	___awdiv@divisor+1,w
  1916  0D20  1903               	btfsc	3,2
  1917  0D21  2D23               	goto	u2671
  1918  0D22  2D24               	goto	u2670
  1919  0D23                     u2671:
  1920  0D23  2D5B               	goto	l1947
  1921  0D24                     u2670:
  1922  0D24                     l1929:
  1923  0D24  01A1               	clrf	___awdiv@counter
  1924  0D25  0AA1               	incf	___awdiv@counter,f
  1925  0D26  2D32               	goto	l1935
  1926  0D27                     l1931:
  1927  0D27  3001               	movlw	1
  1928  0D28                     u2685:
  1929  0D28  1003               	clrc
  1930  0D29  0DF5               	rlf	___awdiv@divisor,f
  1931  0D2A  0DF6               	rlf	___awdiv@divisor+1,f
  1932  0D2B  3EFF               	addlw	-1
  1933  0D2C  1D03               	skipz
  1934  0D2D  2D28               	goto	u2685
  1935  0D2E                     l1933:
  1936  0D2E  3001               	movlw	1
  1937  0D2F  00A0               	movwf	??___awdiv
  1938  0D30  0820               	movf	??___awdiv,w
  1939  0D31  07A1               	addwf	___awdiv@counter,f
  1940  0D32                     l1935:
  1941  0D32  1FF6               	btfss	___awdiv@divisor+1,7
  1942  0D33  2D35               	goto	u2691
  1943  0D34  2D36               	goto	u2690
  1944  0D35                     u2691:
  1945  0D35  2D27               	goto	l1931
  1946  0D36                     u2690:
  1947  0D36                     l1937:
  1948  0D36  3001               	movlw	1
  1949  0D37                     u2705:
  1950  0D37  1003               	clrc
  1951  0D38  0DA3               	rlf	___awdiv@quotient,f
  1952  0D39  0DA4               	rlf	___awdiv@quotient+1,f
  1953  0D3A  3EFF               	addlw	-1
  1954  0D3B  1D03               	skipz
  1955  0D3C  2D37               	goto	u2705
  1956  0D3D  0876               	movf	___awdiv@divisor+1,w
  1957  0D3E  0278               	subwf	___awdiv@dividend+1,w
  1958  0D3F  1D03               	skipz
  1959  0D40  2D43               	goto	u2715
  1960  0D41  0875               	movf	___awdiv@divisor,w
  1961  0D42  0277               	subwf	___awdiv@dividend,w
  1962  0D43                     u2715:
  1963  0D43  1C03               	skipc
  1964  0D44  2D46               	goto	u2711
  1965  0D45  2D47               	goto	u2710
  1966  0D46                     u2711:
  1967  0D46  2D4E               	goto	l1943
  1968  0D47                     u2710:
  1969  0D47                     l1939:
  1970  0D47  0875               	movf	___awdiv@divisor,w
  1971  0D48  02F7               	subwf	___awdiv@dividend,f
  1972  0D49  0876               	movf	___awdiv@divisor+1,w
  1973  0D4A  1C03               	skipc
  1974  0D4B  03F8               	decf	___awdiv@dividend+1,f
  1975  0D4C  02F8               	subwf	___awdiv@dividend+1,f
  1976  0D4D                     l1941:
  1977  0D4D  1423               	bsf	___awdiv@quotient,0
  1978  0D4E                     l1943:
  1979  0D4E  3001               	movlw	1
  1980  0D4F                     u2725:
  1981  0D4F  1003               	clrc
  1982  0D50  0CF6               	rrf	___awdiv@divisor+1,f
  1983  0D51  0CF5               	rrf	___awdiv@divisor,f
  1984  0D52  3EFF               	addlw	-1
  1985  0D53  1D03               	skipz
  1986  0D54  2D4F               	goto	u2725
  1987  0D55                     l1945:
  1988  0D55  3001               	movlw	1
  1989  0D56  02A1               	subwf	___awdiv@counter,f
  1990  0D57  1D03               	btfss	3,2
  1991  0D58  2D5A               	goto	u2731
  1992  0D59  2D5B               	goto	u2730
  1993  0D5A                     u2731:
  1994  0D5A  2D36               	goto	l1937
  1995  0D5B                     u2730:
  1996  0D5B                     l1947:
  1997  0D5B  0822               	movf	___awdiv@sign,w
  1998  0D5C  1903               	btfsc	3,2
  1999  0D5D  2D5F               	goto	u2741
  2000  0D5E  2D60               	goto	u2740
  2001  0D5F                     u2741:
  2002  0D5F  2D65               	goto	l1951
  2003  0D60                     u2740:
  2004  0D60                     l1949:
  2005  0D60  09A3               	comf	___awdiv@quotient,f
  2006  0D61  09A4               	comf	___awdiv@quotient+1,f
  2007  0D62  0AA3               	incf	___awdiv@quotient,f
  2008  0D63  1903               	skipnz
  2009  0D64  0AA4               	incf	___awdiv@quotient+1,f
  2010  0D65                     l1951:
  2011  0D65  0824               	movf	___awdiv@quotient+1,w
  2012  0D66  00F6               	movwf	?___awdiv+1
  2013  0D67  0823               	movf	___awdiv@quotient,w
  2014  0D68  00F5               	movwf	?___awdiv
  2015  0D69                     l428:
  2016  0D69  0008               	return
  2017  0D6A                     __end_of___awdiv:
  2018                           
  2019                           	psect	text6
  2020  0A05                     __ptext6:	
  2021 ;; *************** function _initADC *****************
  2022 ;; Defined at:
  2023 ;;		line 23 in file "ADC.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2037 ;;      Params:         0       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0
  2040 ;;      Totals:         0       0       0       0       0
  2041 ;;Total ram usage:        0 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    2
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           
  2052                           ;psect for function _initADC
  2053  0A05                     _initADC:
  2054  0A05                     l2229:	
  2055                           ;incstack = 0
  2056                           ; Regs used in _initADC: [wreg+status,2+status,0]
  2057                           
  2058                           
  2059                           ;ADC.c: 30:     ADCON0bits.ADCS = 1;
  2060  0A05  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0A06  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0A07  081F               	movf	31,w	;volatile
  2063  0A08  393F               	andlw	-193
  2064  0A09  3840               	iorlw	64
  2065  0A0A  009F               	movwf	31	;volatile
  2066  0A0B                     l2231:
  2067                           
  2068                           ;ADC.c: 35:     INTCONbits.GIE =1 ;
  2069  0A0B  178B               	bsf	11,7	;volatile
  2070  0A0C                     l2233:
  2071                           
  2072                           ;ADC.c: 36:     INTCONbits.PEIE =1 ;
  2073  0A0C  170B               	bsf	11,6	;volatile
  2074  0A0D                     l2235:
  2075                           
  2076                           ;ADC.c: 38:     PIE1bits.ADIE = 1;
  2077  0A0D  1683               	bsf	3,5	;RP0=1, select bank1
  2078  0A0E  1303               	bcf	3,6	;RP1=0, select bank1
  2079  0A0F  170C               	bsf	12,6	;volatile
  2080  0A10                     l2237:
  2081                           
  2082                           ;ADC.c: 40:     ADCON1bits.ADFM = 0;
  2083  0A10  139F               	bcf	31,7	;volatile
  2084  0A11                     l2239:
  2085                           
  2086                           ;ADC.c: 41:     ADCON1bits.VCFG1 = 0;
  2087  0A11  129F               	bcf	31,5	;volatile
  2088  0A12                     l2241:
  2089                           
  2090                           ;ADC.c: 42:     ADCON1bits.VCFG0 = 0;
  2091  0A12  121F               	bcf	31,4	;volatile
  2092  0A13                     l2243:
  2093                           
  2094                           ;ADC.c: 43:     ADCON0bits.ADON = 1;
  2095  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0A14  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0A15  141F               	bsf	31,0	;volatile
  2098  0A16                     l74:
  2099  0A16  0008               	return
  2100  0A17                     __end_of_initADC:
  2101                           
  2102                           	psect	text7
  2103  0614                     __ptext7:	
  2104 ;; *************** function _analogToString *****************
  2105 ;; Defined at:
  2106 ;;		line 89 in file "main.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  value           1    wreg     unsigned char 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  value           1   40[BANK0 ] unsigned char 
  2111 ;;  string          5   41[BANK0 ] unsigned char [5]
  2112 ;;  valor           4   47[BANK0 ] float 
  2113 ;;  entero          1   46[BANK0 ] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      PTR unsigned char 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2123 ;;      Params:         0       0       0       0       0
  2124 ;;      Locals:         0      11       0       0       0
  2125 ;;      Temps:          0       4       0       0       0
  2126 ;;      Totals:         0      15       0       0       0
  2127 ;;Total ram usage:       15 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    4
  2130 ;; This function calls:
  2131 ;;		___flmul
  2132 ;;		___flsub
  2133 ;;		___fltol
  2134 ;;		___xxtofl
  2135 ;; This function is called by:
  2136 ;;		_main
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _analogToString
  2142  0614                     _analogToString:
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _analogToString: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2146                           ;analogToString@value stored from wreg
  2147  0614  1283               	bcf	3,5	;RP0=0, select bank0
  2148  0615  1303               	bcf	3,6	;RP1=0, select bank0
  2149  0616  00C8               	movwf	analogToString@value
  2150  0617                     l2311:
  2151                           
  2152                           ;main.c: 90:     float valor = value *0.019;
  2153  0617  303C               	movlw	60
  2154  0618  00AD               	movwf	___flmul@b+3
  2155  0619  309B               	movlw	155
  2156  061A  00AC               	movwf	___flmul@b+2
  2157  061B  30A5               	movlw	165
  2158  061C  00AB               	movwf	___flmul@b+1
  2159  061D  30E3               	movlw	227
  2160  061E  00AA               	movwf	___flmul@b
  2161  061F  0848               	movf	analogToString@value,w
  2162  0620  00C4               	movwf	??_analogToString
  2163  0621  01C5               	clrf	??_analogToString+1
  2164  0622  01C6               	clrf	??_analogToString+2
  2165  0623  01C7               	clrf	??_analogToString+3
  2166  0624  0847               	movf	??_analogToString+3,w
  2167  0625  00F8               	movwf	___xxtofl@val+3
  2168  0626  0846               	movf	??_analogToString+2,w
  2169  0627  00F7               	movwf	___xxtofl@val+2
  2170  0628  0845               	movf	??_analogToString+1,w
  2171  0629  00F6               	movwf	___xxtofl@val+1
  2172  062A  0844               	movf	??_analogToString,w
  2173  062B  00F5               	movwf	___xxtofl@val
  2174  062C  3001               	movlw	1
  2175  062D  120A  118A  2740  120A  118A  	fcall	___xxtofl
  2176  0632  0878               	movf	?___xxtofl+3,w
  2177  0633  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0634  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0635  00B1               	movwf	___flmul@a+3
  2180  0636  0877               	movf	?___xxtofl+2,w
  2181  0637  00B0               	movwf	___flmul@a+2
  2182  0638  0876               	movf	?___xxtofl+1,w
  2183  0639  00AF               	movwf	___flmul@a+1
  2184  063A  0875               	movf	?___xxtofl,w
  2185  063B  00AE               	movwf	___flmul@a
  2186  063C  120A  118A  2023  120A  118A  	fcall	___flmul
  2187  0641  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0642  1303               	bcf	3,6	;RP1=0, select bank0
  2189  0643  082D               	movf	?___flmul+3,w
  2190  0644  00D2               	movwf	analogToString@valor+3
  2191  0645  082C               	movf	?___flmul+2,w
  2192  0646  00D1               	movwf	analogToString@valor+2
  2193  0647  082B               	movf	?___flmul+1,w
  2194  0648  00D0               	movwf	analogToString@valor+1
  2195  0649  082A               	movf	?___flmul,w
  2196  064A  00CF               	movwf	analogToString@valor
  2197  064B                     l2313:
  2198                           
  2199                           ;main.c: 91:     char string[5];;main.c: 92:     uint8_t entero = valor;
  2200  064B  0852               	movf	analogToString@valor+3,w
  2201  064C  00F8               	movwf	___fltol@f1+3
  2202  064D  0851               	movf	analogToString@valor+2,w
  2203  064E  00F7               	movwf	___fltol@f1+2
  2204  064F  0850               	movf	analogToString@valor+1,w
  2205  0650  00F6               	movwf	___fltol@f1+1
  2206  0651  084F               	movf	analogToString@valor,w
  2207  0652  00F5               	movwf	___fltol@f1
  2208  0653  120A  158A  25DD  120A  118A  	fcall	___fltol
  2209  0658  0875               	movf	?___fltol,w
  2210  0659  1283               	bcf	3,5	;RP0=0, select bank0
  2211  065A  1303               	bcf	3,6	;RP1=0, select bank0
  2212  065B  00C4               	movwf	??_analogToString
  2213  065C  0844               	movf	??_analogToString,w
  2214  065D  00CE               	movwf	analogToString@entero
  2215  065E                     l2315:
  2216                           
  2217                           ;main.c: 94:     string[0] = entero + 48;
  2218  065E  084E               	movf	analogToString@entero,w
  2219  065F  3E30               	addlw	48
  2220  0660  00C4               	movwf	??_analogToString
  2221  0661  0844               	movf	??_analogToString,w
  2222  0662  00C9               	movwf	analogToString@string
  2223  0663                     l2317:
  2224                           
  2225                           ;main.c: 95:     string[1]= '.';
  2226  0663  302E               	movlw	46
  2227  0664  00C4               	movwf	??_analogToString
  2228  0665  0844               	movf	??_analogToString,w
  2229  0666  00CA               	movwf	analogToString@string+1
  2230  0667                     l2319:
  2231                           
  2232                           ;main.c: 96:     valor =( valor - entero);
  2233  0667  084E               	movf	analogToString@entero,w
  2234  0668  00C4               	movwf	??_analogToString
  2235  0669  01C5               	clrf	??_analogToString+1
  2236  066A  01C6               	clrf	??_analogToString+2
  2237  066B  01C7               	clrf	??_analogToString+3
  2238  066C  0847               	movf	??_analogToString+3,w
  2239  066D  00F8               	movwf	___xxtofl@val+3
  2240  066E  0846               	movf	??_analogToString+2,w
  2241  066F  00F7               	movwf	___xxtofl@val+2
  2242  0670  0845               	movf	??_analogToString+1,w
  2243  0671  00F6               	movwf	___xxtofl@val+1
  2244  0672  0844               	movf	??_analogToString,w
  2245  0673  00F5               	movwf	___xxtofl@val
  2246  0674  3001               	movlw	1
  2247  0675  120A  118A  2740  120A  118A  	fcall	___xxtofl
  2248  067A  0878               	movf	?___xxtofl+3,w
  2249  067B  1283               	bcf	3,5	;RP0=0, select bank0
  2250  067C  1303               	bcf	3,6	;RP1=0, select bank0
  2251  067D  00B3               	movwf	___flsub@a+3
  2252  067E  0877               	movf	?___xxtofl+2,w
  2253  067F  00B2               	movwf	___flsub@a+2
  2254  0680  0876               	movf	?___xxtofl+1,w
  2255  0681  00B1               	movwf	___flsub@a+1
  2256  0682  0875               	movf	?___xxtofl,w
  2257  0683  00B0               	movwf	___flsub@a
  2258  0684  0852               	movf	analogToString@valor+3,w
  2259  0685  00B7               	movwf	___flsub@b+3
  2260  0686  0851               	movf	analogToString@valor+2,w
  2261  0687  00B6               	movwf	___flsub@b+2
  2262  0688  0850               	movf	analogToString@valor+1,w
  2263  0689  00B5               	movwf	___flsub@b+1
  2264  068A  084F               	movf	analogToString@valor,w
  2265  068B  00B4               	movwf	___flsub@b
  2266  068C  120A  158A  2286  120A  118A  	fcall	___flsub
  2267  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0693  0833               	movf	?___flsub+3,w
  2270  0694  00D2               	movwf	analogToString@valor+3
  2271  0695  0832               	movf	?___flsub+2,w
  2272  0696  00D1               	movwf	analogToString@valor+2
  2273  0697  0831               	movf	?___flsub+1,w
  2274  0698  00D0               	movwf	analogToString@valor+1
  2275  0699  0830               	movf	?___flsub,w
  2276  069A  00CF               	movwf	analogToString@valor
  2277  069B                     l2321:
  2278                           
  2279                           ;main.c: 98:     valor*=10;
  2280  069B  3041               	movlw	65
  2281  069C  00AD               	movwf	___flmul@b+3
  2282  069D  3020               	movlw	32
  2283  069E  00AC               	movwf	___flmul@b+2
  2284  069F  3000               	movlw	0
  2285  06A0  00AB               	movwf	___flmul@b+1
  2286  06A1  3000               	movlw	0
  2287  06A2  00AA               	movwf	___flmul@b
  2288  06A3  0852               	movf	analogToString@valor+3,w
  2289  06A4  00B1               	movwf	___flmul@a+3
  2290  06A5  0851               	movf	analogToString@valor+2,w
  2291  06A6  00B0               	movwf	___flmul@a+2
  2292  06A7  0850               	movf	analogToString@valor+1,w
  2293  06A8  00AF               	movwf	___flmul@a+1
  2294  06A9  084F               	movf	analogToString@valor,w
  2295  06AA  00AE               	movwf	___flmul@a
  2296  06AB  120A  118A  2023  120A  118A  	fcall	___flmul
  2297  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  2298  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  2299  06B2  082D               	movf	?___flmul+3,w
  2300  06B3  00D2               	movwf	analogToString@valor+3
  2301  06B4  082C               	movf	?___flmul+2,w
  2302  06B5  00D1               	movwf	analogToString@valor+2
  2303  06B6  082B               	movf	?___flmul+1,w
  2304  06B7  00D0               	movwf	analogToString@valor+1
  2305  06B8  082A               	movf	?___flmul,w
  2306  06B9  00CF               	movwf	analogToString@valor
  2307  06BA                     l2323:
  2308                           
  2309                           ;main.c: 99:     entero = valor ;
  2310  06BA  0852               	movf	analogToString@valor+3,w
  2311  06BB  00F8               	movwf	___fltol@f1+3
  2312  06BC  0851               	movf	analogToString@valor+2,w
  2313  06BD  00F7               	movwf	___fltol@f1+2
  2314  06BE  0850               	movf	analogToString@valor+1,w
  2315  06BF  00F6               	movwf	___fltol@f1+1
  2316  06C0  084F               	movf	analogToString@valor,w
  2317  06C1  00F5               	movwf	___fltol@f1
  2318  06C2  120A  158A  25DD  120A  118A  	fcall	___fltol
  2319  06C7  0875               	movf	?___fltol,w
  2320  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2321  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2322  06CA  00C4               	movwf	??_analogToString
  2323  06CB  0844               	movf	??_analogToString,w
  2324  06CC  00CE               	movwf	analogToString@entero
  2325  06CD                     l2325:
  2326                           
  2327                           ;main.c: 100:     string[2] = entero + 48;
  2328  06CD  084E               	movf	analogToString@entero,w
  2329  06CE  3E30               	addlw	48
  2330  06CF  00C4               	movwf	??_analogToString
  2331  06D0  0844               	movf	??_analogToString,w
  2332  06D1  00CB               	movwf	analogToString@string+2
  2333  06D2                     l2327:
  2334                           
  2335                           ;main.c: 102:     valor -= entero;
  2336  06D2  084E               	movf	analogToString@entero,w
  2337  06D3  00C4               	movwf	??_analogToString
  2338  06D4  01C5               	clrf	??_analogToString+1
  2339  06D5  01C6               	clrf	??_analogToString+2
  2340  06D6  01C7               	clrf	??_analogToString+3
  2341  06D7  0847               	movf	??_analogToString+3,w
  2342  06D8  00F8               	movwf	___xxtofl@val+3
  2343  06D9  0846               	movf	??_analogToString+2,w
  2344  06DA  00F7               	movwf	___xxtofl@val+2
  2345  06DB  0845               	movf	??_analogToString+1,w
  2346  06DC  00F6               	movwf	___xxtofl@val+1
  2347  06DD  0844               	movf	??_analogToString,w
  2348  06DE  00F5               	movwf	___xxtofl@val
  2349  06DF  3001               	movlw	1
  2350  06E0  120A  118A  2740  120A  118A  	fcall	___xxtofl
  2351  06E5  0878               	movf	?___xxtofl+3,w
  2352  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  2353  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  2354  06E8  00B3               	movwf	___flsub@a+3
  2355  06E9  0877               	movf	?___xxtofl+2,w
  2356  06EA  00B2               	movwf	___flsub@a+2
  2357  06EB  0876               	movf	?___xxtofl+1,w
  2358  06EC  00B1               	movwf	___flsub@a+1
  2359  06ED  0875               	movf	?___xxtofl,w
  2360  06EE  00B0               	movwf	___flsub@a
  2361  06EF  0852               	movf	analogToString@valor+3,w
  2362  06F0  00B7               	movwf	___flsub@b+3
  2363  06F1  0851               	movf	analogToString@valor+2,w
  2364  06F2  00B6               	movwf	___flsub@b+2
  2365  06F3  0850               	movf	analogToString@valor+1,w
  2366  06F4  00B5               	movwf	___flsub@b+1
  2367  06F5  084F               	movf	analogToString@valor,w
  2368  06F6  00B4               	movwf	___flsub@b
  2369  06F7  120A  158A  2286  120A  118A  	fcall	___flsub
  2370  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  2371  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  2372  06FE  0833               	movf	?___flsub+3,w
  2373  06FF  00D2               	movwf	analogToString@valor+3
  2374  0700  0832               	movf	?___flsub+2,w
  2375  0701  00D1               	movwf	analogToString@valor+2
  2376  0702  0831               	movf	?___flsub+1,w
  2377  0703  00D0               	movwf	analogToString@valor+1
  2378  0704  0830               	movf	?___flsub,w
  2379  0705  00CF               	movwf	analogToString@valor
  2380  0706                     l2329:
  2381                           
  2382                           ;main.c: 103:     valor*=10;
  2383  0706  3041               	movlw	65
  2384  0707  00AD               	movwf	___flmul@b+3
  2385  0708  3020               	movlw	32
  2386  0709  00AC               	movwf	___flmul@b+2
  2387  070A  3000               	movlw	0
  2388  070B  00AB               	movwf	___flmul@b+1
  2389  070C  3000               	movlw	0
  2390  070D  00AA               	movwf	___flmul@b
  2391  070E  0852               	movf	analogToString@valor+3,w
  2392  070F  00B1               	movwf	___flmul@a+3
  2393  0710  0851               	movf	analogToString@valor+2,w
  2394  0711  00B0               	movwf	___flmul@a+2
  2395  0712  0850               	movf	analogToString@valor+1,w
  2396  0713  00AF               	movwf	___flmul@a+1
  2397  0714  084F               	movf	analogToString@valor,w
  2398  0715  00AE               	movwf	___flmul@a
  2399  0716  120A  118A  2023  120A  118A  	fcall	___flmul
  2400  071B  1283               	bcf	3,5	;RP0=0, select bank0
  2401  071C  1303               	bcf	3,6	;RP1=0, select bank0
  2402  071D  082D               	movf	?___flmul+3,w
  2403  071E  00D2               	movwf	analogToString@valor+3
  2404  071F  082C               	movf	?___flmul+2,w
  2405  0720  00D1               	movwf	analogToString@valor+2
  2406  0721  082B               	movf	?___flmul+1,w
  2407  0722  00D0               	movwf	analogToString@valor+1
  2408  0723  082A               	movf	?___flmul,w
  2409  0724  00CF               	movwf	analogToString@valor
  2410  0725                     l2331:
  2411                           
  2412                           ;main.c: 105:     entero = valor ;
  2413  0725  0852               	movf	analogToString@valor+3,w
  2414  0726  00F8               	movwf	___fltol@f1+3
  2415  0727  0851               	movf	analogToString@valor+2,w
  2416  0728  00F7               	movwf	___fltol@f1+2
  2417  0729  0850               	movf	analogToString@valor+1,w
  2418  072A  00F6               	movwf	___fltol@f1+1
  2419  072B  084F               	movf	analogToString@valor,w
  2420  072C  00F5               	movwf	___fltol@f1
  2421  072D  120A  158A  25DD  120A  118A  	fcall	___fltol
  2422  0732  0875               	movf	?___fltol,w
  2423  0733  1283               	bcf	3,5	;RP0=0, select bank0
  2424  0734  1303               	bcf	3,6	;RP1=0, select bank0
  2425  0735  00C4               	movwf	??_analogToString
  2426  0736  0844               	movf	??_analogToString,w
  2427  0737  00CE               	movwf	analogToString@entero
  2428  0738                     l2333:
  2429                           
  2430                           ;main.c: 106:     string[3] = (entero + 48);
  2431  0738  084E               	movf	analogToString@entero,w
  2432  0739  3E30               	addlw	48
  2433  073A  00C4               	movwf	??_analogToString
  2434  073B  0844               	movf	??_analogToString,w
  2435  073C  00CC               	movwf	analogToString@string+3
  2436  073D                     l2335:
  2437                           
  2438                           ;main.c: 107:     string[4] ='\0';
  2439  073D  01CD               	clrf	analogToString@string+4
  2440  073E                     l2337:
  2441                           
  2442                           ;main.c: 108:     return string;
  2443  073E  3049               	movlw	(low (analogToString@string| 0))& (0+255)
  2444  073F                     l47:
  2445  073F  0008               	return
  2446  0740                     __end_of_analogToString:
  2447                           
  2448                           	psect	text8
  2449  0740                     __ptext8:	
  2450 ;; *************** function ___xxtofl *****************
  2451 ;; Defined at:
  2452 ;;		line 10 in file "D:\programas\xc8\pic\sources\c90\common\xxtofl.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  sign            1    wreg     unsigned char 
  2455 ;;  val             4    5[COMMON] long 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  sign            1    4[BANK0 ] unsigned char 
  2458 ;;  arg             4    6[BANK0 ] unsigned long 
  2459 ;;  exp             1    5[BANK0 ] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  4    5[COMMON] unsigned char 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         4       0       0       0       0
  2470 ;;      Locals:         0       6       0       0       0
  2471 ;;      Temps:          0       4       0       0       0
  2472 ;;      Totals:         4      10       0       0       0
  2473 ;;Total ram usage:       14 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    2
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_analogToString
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           
  2484                           ;psect for function ___xxtofl
  2485  0740                     ___xxtofl:
  2486                           
  2487                           ;incstack = 0
  2488                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2489                           ;___xxtofl@sign stored from wreg
  2490  0740  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0741  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0742  00A4               	movwf	___xxtofl@sign
  2493  0743                     l2175:
  2494  0743  0824               	movf	___xxtofl@sign,w
  2495  0744  1903               	btfsc	3,2
  2496  0745  2F47               	goto	u3311
  2497  0746  2F48               	goto	u3310
  2498  0747                     u3311:
  2499  0747  2F5C               	goto	l2181
  2500  0748                     u3310:
  2501  0748                     l2177:
  2502  0748  1FF8               	btfss	___xxtofl@val+3,7
  2503  0749  2F4B               	goto	u3321
  2504  074A  2F4C               	goto	u3320
  2505  074B                     u3321:
  2506  074B  2F5C               	goto	l2181
  2507  074C                     u3320:
  2508  074C                     l2179:
  2509  074C  0975               	comf	___xxtofl@val,w
  2510  074D  00A6               	movwf	___xxtofl@arg
  2511  074E  0976               	comf	___xxtofl@val+1,w
  2512  074F  00A7               	movwf	___xxtofl@arg+1
  2513  0750  0977               	comf	___xxtofl@val+2,w
  2514  0751  00A8               	movwf	___xxtofl@arg+2
  2515  0752  0978               	comf	___xxtofl@val+3,w
  2516  0753  00A9               	movwf	___xxtofl@arg+3
  2517  0754  0AA6               	incf	___xxtofl@arg,f
  2518  0755  1903               	skipnz
  2519  0756  0AA7               	incf	___xxtofl@arg+1,f
  2520  0757  1903               	skipnz
  2521  0758  0AA8               	incf	___xxtofl@arg+2,f
  2522  0759  1903               	skipnz
  2523  075A  0AA9               	incf	___xxtofl@arg+3,f
  2524  075B  2F64               	goto	l708
  2525  075C                     l2181:
  2526  075C  0878               	movf	___xxtofl@val+3,w
  2527  075D  00A9               	movwf	___xxtofl@arg+3
  2528  075E  0877               	movf	___xxtofl@val+2,w
  2529  075F  00A8               	movwf	___xxtofl@arg+2
  2530  0760  0876               	movf	___xxtofl@val+1,w
  2531  0761  00A7               	movwf	___xxtofl@arg+1
  2532  0762  0875               	movf	___xxtofl@val,w
  2533  0763  00A6               	movwf	___xxtofl@arg
  2534  0764                     l708:
  2535  0764  0878               	movf	___xxtofl@val+3,w
  2536  0765  0477               	iorwf	___xxtofl@val+2,w
  2537  0766  0476               	iorwf	___xxtofl@val+1,w
  2538  0767  0475               	iorwf	___xxtofl@val,w
  2539  0768  1D03               	skipz
  2540  0769  2F6B               	goto	u3331
  2541  076A  2F6C               	goto	u3330
  2542  076B                     u3331:
  2543  076B  2F75               	goto	l2187
  2544  076C                     u3330:
  2545  076C                     l2183:
  2546  076C  3000               	movlw	0
  2547  076D  00F8               	movwf	?___xxtofl+3
  2548  076E  3000               	movlw	0
  2549  076F  00F7               	movwf	?___xxtofl+2
  2550  0770  3000               	movlw	0
  2551  0771  00F6               	movwf	?___xxtofl+1
  2552  0772  3000               	movlw	0
  2553  0773  00F5               	movwf	?___xxtofl
  2554  0774  2FFB               	goto	l710
  2555  0775                     l2187:
  2556  0775  3096               	movlw	150
  2557  0776  00A0               	movwf	??___xxtofl
  2558  0777  0820               	movf	??___xxtofl,w
  2559  0778  00A5               	movwf	___xxtofl@exp
  2560  0779  2F87               	goto	l2191
  2561  077A                     l2189:
  2562  077A  3001               	movlw	1
  2563  077B  00A0               	movwf	??___xxtofl
  2564  077C  0820               	movf	??___xxtofl,w
  2565  077D  07A5               	addwf	___xxtofl@exp,f
  2566  077E  3001               	movlw	1
  2567  077F                     u3345:
  2568  077F  1003               	clrc
  2569  0780  0CA9               	rrf	___xxtofl@arg+3,f
  2570  0781  0CA8               	rrf	___xxtofl@arg+2,f
  2571  0782  0CA7               	rrf	___xxtofl@arg+1,f
  2572  0783  0CA6               	rrf	___xxtofl@arg,f
  2573  0784  3EFF               	addlw	-1
  2574  0785  1D03               	skipz
  2575  0786  2F7F               	goto	u3345
  2576  0787                     l2191:
  2577  0787  30FE               	movlw	254
  2578  0788  0529               	andwf	___xxtofl@arg+3,w
  2579  0789  1D03               	btfss	3,2
  2580  078A  2F8C               	goto	u3351
  2581  078B  2F8D               	goto	u3350
  2582  078C                     u3351:
  2583  078C  2F7A               	goto	l2189
  2584  078D                     u3350:
  2585  078D  2FA9               	goto	l714
  2586  078E                     l2193:
  2587  078E  3001               	movlw	1
  2588  078F  00A0               	movwf	??___xxtofl
  2589  0790  0820               	movf	??___xxtofl,w
  2590  0791  07A5               	addwf	___xxtofl@exp,f
  2591  0792                     l2195:
  2592  0792  3001               	movlw	1
  2593  0793  07A6               	addwf	___xxtofl@arg,f
  2594  0794  3000               	movlw	0
  2595  0795  1803               	skipnc
  2596  0796  3001               	movlw	1
  2597  0797  07A7               	addwf	___xxtofl@arg+1,f
  2598  0798  3000               	movlw	0
  2599  0799  1803               	skipnc
  2600  079A  3001               	movlw	1
  2601  079B  07A8               	addwf	___xxtofl@arg+2,f
  2602  079C  3000               	movlw	0
  2603  079D  1803               	skipnc
  2604  079E  3001               	movlw	1
  2605  079F  07A9               	addwf	___xxtofl@arg+3,f
  2606  07A0                     l2197:
  2607  07A0  3001               	movlw	1
  2608  07A1                     u3365:
  2609  07A1  1003               	clrc
  2610  07A2  0CA9               	rrf	___xxtofl@arg+3,f
  2611  07A3  0CA8               	rrf	___xxtofl@arg+2,f
  2612  07A4  0CA7               	rrf	___xxtofl@arg+1,f
  2613  07A5  0CA6               	rrf	___xxtofl@arg,f
  2614  07A6  3EFF               	addlw	-1
  2615  07A7  1D03               	skipz
  2616  07A8  2FA1               	goto	u3365
  2617  07A9                     l714:
  2618  07A9  30FF               	movlw	255
  2619  07AA  0529               	andwf	___xxtofl@arg+3,w
  2620  07AB  1D03               	btfss	3,2
  2621  07AC  2FAE               	goto	u3371
  2622  07AD  2FAF               	goto	u3370
  2623  07AE                     u3371:
  2624  07AE  2F8E               	goto	l2193
  2625  07AF                     u3370:
  2626  07AF  2FBB               	goto	l2201
  2627  07B0                     l2199:
  2628  07B0  3001               	movlw	1
  2629  07B1  02A5               	subwf	___xxtofl@exp,f
  2630  07B2  3001               	movlw	1
  2631  07B3  00A0               	movwf	??___xxtofl
  2632  07B4                     u3385:
  2633  07B4  1003               	clrc
  2634  07B5  0DA6               	rlf	___xxtofl@arg,f
  2635  07B6  0DA7               	rlf	___xxtofl@arg+1,f
  2636  07B7  0DA8               	rlf	___xxtofl@arg+2,f
  2637  07B8  0DA9               	rlf	___xxtofl@arg+3,f
  2638  07B9  0BA0               	decfsz	??___xxtofl,f
  2639  07BA  2FB4               	goto	u3385
  2640  07BB                     l2201:
  2641  07BB  1BA8               	btfsc	___xxtofl@arg+2,7
  2642  07BC  2FBE               	goto	u3391
  2643  07BD  2FBF               	goto	u3390
  2644  07BE                     u3391:
  2645  07BE  2FC5               	goto	l721
  2646  07BF                     u3390:
  2647  07BF                     l2203:
  2648  07BF  3002               	movlw	2
  2649  07C0  0225               	subwf	___xxtofl@exp,w
  2650  07C1  1803               	skipnc
  2651  07C2  2FC4               	goto	u3401
  2652  07C3  2FC5               	goto	u3400
  2653  07C4                     u3401:
  2654  07C4  2FB0               	goto	l2199
  2655  07C5                     u3400:
  2656  07C5                     l721:
  2657  07C5  1825               	btfsc	___xxtofl@exp,0
  2658  07C6  2FC8               	goto	u3411
  2659  07C7  2FC9               	goto	u3410
  2660  07C8                     u3411:
  2661  07C8  2FD1               	goto	l722
  2662  07C9                     u3410:
  2663  07C9                     l2205:
  2664  07C9  30FF               	movlw	255
  2665  07CA  05A6               	andwf	___xxtofl@arg,f
  2666  07CB  30FF               	movlw	255
  2667  07CC  05A7               	andwf	___xxtofl@arg+1,f
  2668  07CD  307F               	movlw	127
  2669  07CE  05A8               	andwf	___xxtofl@arg+2,f
  2670  07CF  30FF               	movlw	255
  2671  07D0  05A9               	andwf	___xxtofl@arg+3,f
  2672  07D1                     l722:
  2673  07D1  1003               	clrc
  2674  07D2  0CA5               	rrf	___xxtofl@exp,f
  2675  07D3                     l2207:
  2676  07D3  0825               	movf	___xxtofl@exp,w
  2677  07D4  00A0               	movwf	??___xxtofl
  2678  07D5  01A1               	clrf	??___xxtofl+1
  2679  07D6  01A2               	clrf	??___xxtofl+2
  2680  07D7  01A3               	clrf	??___xxtofl+3
  2681  07D8  3018               	movlw	24
  2682  07D9                     u3425:
  2683  07D9  1003               	clrc
  2684  07DA  0DA0               	rlf	??___xxtofl,f
  2685  07DB  0DA1               	rlf	??___xxtofl+1,f
  2686  07DC  0DA2               	rlf	??___xxtofl+2,f
  2687  07DD  0DA3               	rlf	??___xxtofl+3,f
  2688  07DE                     u3420:
  2689  07DE  3EFF               	addlw	-1
  2690  07DF  1D03               	skipz
  2691  07E0  2FD9               	goto	u3425
  2692  07E1  0820               	movf	??___xxtofl,w
  2693  07E2  04A6               	iorwf	___xxtofl@arg,f
  2694  07E3  0821               	movf	??___xxtofl+1,w
  2695  07E4  04A7               	iorwf	___xxtofl@arg+1,f
  2696  07E5  0822               	movf	??___xxtofl+2,w
  2697  07E6  04A8               	iorwf	___xxtofl@arg+2,f
  2698  07E7  0823               	movf	??___xxtofl+3,w
  2699  07E8  04A9               	iorwf	___xxtofl@arg+3,f
  2700  07E9                     l2209:
  2701  07E9  0824               	movf	___xxtofl@sign,w
  2702  07EA  1903               	btfsc	3,2
  2703  07EB  2FED               	goto	u3431
  2704  07EC  2FEE               	goto	u3430
  2705  07ED                     u3431:
  2706  07ED  2FF3               	goto	l2215
  2707  07EE                     u3430:
  2708  07EE                     l2211:
  2709  07EE  1FF8               	btfss	___xxtofl@val+3,7
  2710  07EF  2FF1               	goto	u3441
  2711  07F0  2FF2               	goto	u3440
  2712  07F1                     u3441:
  2713  07F1  2FF3               	goto	l2215
  2714  07F2                     u3440:
  2715  07F2                     l2213:
  2716  07F2  17A9               	bsf	___xxtofl@arg+3,7
  2717  07F3                     l2215:
  2718  07F3  0829               	movf	___xxtofl@arg+3,w
  2719  07F4  00F8               	movwf	?___xxtofl+3
  2720  07F5  0828               	movf	___xxtofl@arg+2,w
  2721  07F6  00F7               	movwf	?___xxtofl+2
  2722  07F7  0827               	movf	___xxtofl@arg+1,w
  2723  07F8  00F6               	movwf	?___xxtofl+1
  2724  07F9  0826               	movf	___xxtofl@arg,w
  2725  07FA  00F5               	movwf	?___xxtofl
  2726  07FB                     l710:
  2727  07FB  0008               	return
  2728  07FC                     __end_of___xxtofl:
  2729                           
  2730                           	psect	text9
  2731  0DDD                     __ptext9:	
  2732 ;; *************** function ___fltol *****************
  2733 ;; Defined at:
  2734 ;;		line 43 in file "D:\programas\xc8\pic\sources\c90\common\fltol.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  f1              4    5[COMMON] unsigned char 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  exp1            1    6[BANK0 ] unsigned char 
  2739 ;;  sign1           1    5[BANK0 ] unsigned char 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  4    5[COMMON] long 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2749 ;;      Params:         4       0       0       0       0
  2750 ;;      Locals:         0       2       0       0       0
  2751 ;;      Temps:          0       5       0       0       0
  2752 ;;      Totals:         4       7       0       0       0
  2753 ;;Total ram usage:       11 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    2
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_analogToString
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           
  2764                           ;psect for function ___fltol
  2765  0DDD                     ___fltol:
  2766  0DDD                     l1993:	
  2767                           ;incstack = 0
  2768                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2769                           
  2770  0DDD  1003               	clrc
  2771  0DDE  0D77               	rlf	___fltol@f1+2,w
  2772  0DDF  0D78               	rlf	___fltol@f1+3,w
  2773  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  2775  0DE2  00A0               	movwf	??___fltol
  2776  0DE3  0820               	movf	??___fltol,w
  2777  0DE4  00A6               	movwf	___fltol@exp1
  2778  0DE5  0826               	movf	___fltol@exp1,w
  2779  0DE6  1D03               	btfss	3,2
  2780  0DE7  2DE9               	goto	u2841
  2781  0DE8  2DEA               	goto	u2840
  2782  0DE9                     u2841:
  2783  0DE9  2DF3               	goto	l1999
  2784  0DEA                     u2840:
  2785  0DEA                     l1995:
  2786  0DEA  3000               	movlw	0
  2787  0DEB  00F8               	movwf	?___fltol+3
  2788  0DEC  3000               	movlw	0
  2789  0DED  00F7               	movwf	?___fltol+2
  2790  0DEE  3000               	movlw	0
  2791  0DEF  00F6               	movwf	?___fltol+1
  2792  0DF0  3000               	movlw	0
  2793  0DF1  00F5               	movwf	?___fltol
  2794  0DF2  2E58               	goto	l461
  2795  0DF3                     l1999:
  2796  0DF3  0875               	movf	___fltol@f1,w
  2797  0DF4  00A0               	movwf	??___fltol
  2798  0DF5  0876               	movf	___fltol@f1+1,w
  2799  0DF6  00A1               	movwf	??___fltol+1
  2800  0DF7  0877               	movf	___fltol@f1+2,w
  2801  0DF8  00A2               	movwf	??___fltol+2
  2802  0DF9  0878               	movf	___fltol@f1+3,w
  2803  0DFA  00A3               	movwf	??___fltol+3
  2804  0DFB  301F               	movlw	31
  2805  0DFC                     u2855:
  2806  0DFC  1003               	clrc
  2807  0DFD  0CA3               	rrf	??___fltol+3,f
  2808  0DFE  0CA2               	rrf	??___fltol+2,f
  2809  0DFF  0CA1               	rrf	??___fltol+1,f
  2810  0E00  0CA0               	rrf	??___fltol,f
  2811  0E01                     u2850:
  2812  0E01  3EFF               	addlw	-1
  2813  0E02  1D03               	skipz
  2814  0E03  2DFC               	goto	u2855
  2815  0E04  0820               	movf	??___fltol,w
  2816  0E05  00A4               	movwf	??___fltol+4
  2817  0E06  0824               	movf	??___fltol+4,w
  2818  0E07  00A5               	movwf	___fltol@sign1
  2819  0E08                     l2001:
  2820  0E08  17F7               	bsf	___fltol@f1+2,7
  2821  0E09                     l2003:
  2822  0E09  30FF               	movlw	255
  2823  0E0A  05F5               	andwf	___fltol@f1,f
  2824  0E0B  30FF               	movlw	255
  2825  0E0C  05F6               	andwf	___fltol@f1+1,f
  2826  0E0D  30FF               	movlw	255
  2827  0E0E  05F7               	andwf	___fltol@f1+2,f
  2828  0E0F  3000               	movlw	0
  2829  0E10  05F8               	andwf	___fltol@f1+3,f
  2830  0E11                     l2005:
  2831  0E11  3096               	movlw	150
  2832  0E12  02A6               	subwf	___fltol@exp1,f
  2833  0E13                     l2007:
  2834  0E13  1FA6               	btfss	___fltol@exp1,7
  2835  0E14  2E16               	goto	u2861
  2836  0E15  2E17               	goto	u2860
  2837  0E16                     u2861:
  2838  0E16  2E31               	goto	l2017
  2839  0E17                     u2860:
  2840  0E17                     l2009:
  2841  0E17  0826               	movf	___fltol@exp1,w
  2842  0E18  3A80               	xorlw	128
  2843  0E19  3E97               	addlw	151
  2844  0E1A  1803               	skipnc
  2845  0E1B  2E1D               	goto	u2871
  2846  0E1C  2E1E               	goto	u2870
  2847  0E1D                     u2871:
  2848  0E1D  2E1F               	goto	l2015
  2849  0E1E                     u2870:
  2850  0E1E  2DEA               	goto	l1995
  2851  0E1F                     l2015:
  2852  0E1F  3001               	movlw	1
  2853  0E20                     u2885:
  2854  0E20  1003               	clrc
  2855  0E21  0CF8               	rrf	___fltol@f1+3,f
  2856  0E22  0CF7               	rrf	___fltol@f1+2,f
  2857  0E23  0CF6               	rrf	___fltol@f1+1,f
  2858  0E24  0CF5               	rrf	___fltol@f1,f
  2859  0E25  3EFF               	addlw	-1
  2860  0E26  1D03               	skipz
  2861  0E27  2E20               	goto	u2885
  2862  0E28  3001               	movlw	1
  2863  0E29  00A0               	movwf	??___fltol
  2864  0E2A  0820               	movf	??___fltol,w
  2865  0E2B  07A6               	addwf	___fltol@exp1,f
  2866  0E2C  1D03               	btfss	3,2
  2867  0E2D  2E2F               	goto	u2891
  2868  0E2E  2E30               	goto	u2890
  2869  0E2F                     u2891:
  2870  0E2F  2E1F               	goto	l2015
  2871  0E30                     u2890:
  2872  0E30  2E48               	goto	l2025
  2873  0E31                     l2017:
  2874  0E31  3020               	movlw	32
  2875  0E32  0226               	subwf	___fltol@exp1,w
  2876  0E33  1C03               	skipc
  2877  0E34  2E36               	goto	u2901
  2878  0E35  2E37               	goto	u2900
  2879  0E36                     u2901:
  2880  0E36  2E43               	goto	l468
  2881  0E37                     u2900:
  2882  0E37  2DEA               	goto	l1995
  2883  0E38                     l2023:
  2884  0E38  3001               	movlw	1
  2885  0E39  00A0               	movwf	??___fltol
  2886  0E3A                     u2915:
  2887  0E3A  1003               	clrc
  2888  0E3B  0DF5               	rlf	___fltol@f1,f
  2889  0E3C  0DF6               	rlf	___fltol@f1+1,f
  2890  0E3D  0DF7               	rlf	___fltol@f1+2,f
  2891  0E3E  0DF8               	rlf	___fltol@f1+3,f
  2892  0E3F  0BA0               	decfsz	??___fltol,f
  2893  0E40  2E3A               	goto	u2915
  2894  0E41  3001               	movlw	1
  2895  0E42  02A6               	subwf	___fltol@exp1,f
  2896  0E43                     l468:
  2897  0E43  0826               	movf	___fltol@exp1,w
  2898  0E44  1D03               	btfss	3,2
  2899  0E45  2E47               	goto	u2921
  2900  0E46  2E48               	goto	u2920
  2901  0E47                     u2921:
  2902  0E47  2E38               	goto	l2023
  2903  0E48                     u2920:
  2904  0E48                     l2025:
  2905  0E48  0825               	movf	___fltol@sign1,w
  2906  0E49  1903               	btfsc	3,2
  2907  0E4A  2E4C               	goto	u2931
  2908  0E4B  2E4D               	goto	u2930
  2909  0E4C                     u2931:
  2910  0E4C  2E58               	goto	l471
  2911  0E4D                     u2930:
  2912  0E4D                     l2027:
  2913  0E4D  09F5               	comf	___fltol@f1,f
  2914  0E4E  09F6               	comf	___fltol@f1+1,f
  2915  0E4F  09F7               	comf	___fltol@f1+2,f
  2916  0E50  09F8               	comf	___fltol@f1+3,f
  2917  0E51  0AF5               	incf	___fltol@f1,f
  2918  0E52  1903               	skipnz
  2919  0E53  0AF6               	incf	___fltol@f1+1,f
  2920  0E54  1903               	skipnz
  2921  0E55  0AF7               	incf	___fltol@f1+2,f
  2922  0E56  1903               	skipnz
  2923  0E57  0AF8               	incf	___fltol@f1+3,f
  2924  0E58                     l471:
  2925  0E58                     l461:
  2926  0E58  0008               	return
  2927  0E59                     __end_of___fltol:
  2928                           
  2929                           	psect	text10
  2930  0A86                     __ptext10:	
  2931 ;; *************** function ___flsub *****************
  2932 ;; Defined at:
  2933 ;;		line 242 in file "D:\programas\xc8\pic\sources\c90\common\sprcadd.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  a               4   16[BANK0 ] long 
  2936 ;;  b               4   20[BANK0 ] long 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  4   16[BANK0 ] long 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2948 ;;      Params:         0       8       0       0       0
  2949 ;;      Locals:         0       0       0       0       0
  2950 ;;      Temps:          0       0       0       0       0
  2951 ;;      Totals:         0       8       0       0       0
  2952 ;;Total ram usage:        8 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    3
  2955 ;; This function calls:
  2956 ;;		___fladd
  2957 ;; This function is called by:
  2958 ;;		_analogToString
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function ___flsub
  2964  0A86                     ___flsub:
  2965  0A86                     l2029:	
  2966                           ;incstack = 0
  2967                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2968                           
  2969  0A86  3080               	movlw	128
  2970  0A87  1283               	bcf	3,5	;RP0=0, select bank0
  2971  0A88  1303               	bcf	3,6	;RP1=0, select bank0
  2972  0A89  06B3               	xorwf	___flsub@a+3,f
  2973  0A8A                     l2031:
  2974  0A8A  0837               	movf	___flsub@b+3,w
  2975  0A8B  00A3               	movwf	___fladd@b+3
  2976  0A8C  0836               	movf	___flsub@b+2,w
  2977  0A8D  00A2               	movwf	___fladd@b+2
  2978  0A8E  0835               	movf	___flsub@b+1,w
  2979  0A8F  00A1               	movwf	___fladd@b+1
  2980  0A90  0834               	movf	___flsub@b,w
  2981  0A91  00A0               	movwf	___fladd@b
  2982  0A92  0833               	movf	___flsub@a+3,w
  2983  0A93  00A7               	movwf	___fladd@a+3
  2984  0A94  0832               	movf	___flsub@a+2,w
  2985  0A95  00A6               	movwf	___fladd@a+2
  2986  0A96  0831               	movf	___flsub@a+1,w
  2987  0A97  00A5               	movwf	___fladd@a+1
  2988  0A98  0830               	movf	___flsub@a,w
  2989  0A99  00A4               	movwf	___fladd@a
  2990  0A9A  120A  118A  2384  120A  158A  	fcall	___fladd
  2991  0A9F  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0AA0  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0AA1  0823               	movf	?___fladd+3,w
  2994  0AA2  00B3               	movwf	?___flsub+3
  2995  0AA3  0822               	movf	?___fladd+2,w
  2996  0AA4  00B2               	movwf	?___flsub+2
  2997  0AA5  0821               	movf	?___fladd+1,w
  2998  0AA6  00B1               	movwf	?___flsub+1
  2999  0AA7  0820               	movf	?___fladd,w
  3000  0AA8  00B0               	movwf	?___flsub
  3001  0AA9                     l614:
  3002  0AA9  0008               	return
  3003  0AAA                     __end_of___flsub:
  3004                           
  3005                           	psect	text11
  3006  0384                     __ptext11:	
  3007 ;; *************** function ___fladd *****************
  3008 ;; Defined at:
  3009 ;;		line 10 in file "D:\programas\xc8\pic\sources\c90\common\sprcadd.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  b               4    0[BANK0 ] long 
  3012 ;;  a               4    4[BANK0 ] long 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  grs             1    8[COMMON] unsigned char 
  3015 ;;  bexp            1    7[COMMON] unsigned char 
  3016 ;;  aexp            1    6[COMMON] unsigned char 
  3017 ;;  signs           1    5[COMMON] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  4    0[BANK0 ] unsigned char 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0, btemp+1
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3027 ;;      Params:         0       8       0       0       0
  3028 ;;      Locals:         4       0       0       0       0
  3029 ;;      Temps:          0       8       0       0       0
  3030 ;;      Totals:         4      16       0       0       0
  3031 ;;Total ram usage:       20 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    2
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		___flsub
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           
  3042                           ;psect for function ___fladd
  3043  0384                     ___fladd:
  3044  0384                     l1637:	
  3045                           ;incstack = 0
  3046                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3047                           
  3048  0384  1283               	bcf	3,5	;RP0=0, select bank0
  3049  0385  1303               	bcf	3,6	;RP1=0, select bank0
  3050  0386  0823               	movf	___fladd@b+3,w
  3051  0387  3980               	andlw	128
  3052  0388  00A8               	movwf	??___fladd
  3053  0389  0828               	movf	??___fladd,w
  3054  038A  00F5               	movwf	___fladd@signs
  3055  038B                     l1639:
  3056  038B  0823               	movf	___fladd@b+3,w
  3057  038C  00A8               	movwf	??___fladd
  3058  038D  0728               	addwf	??___fladd,w
  3059  038E  00A9               	movwf	??___fladd+1
  3060  038F  0829               	movf	??___fladd+1,w
  3061  0390  00F7               	movwf	___fladd@bexp
  3062  0391                     l1641:
  3063  0391  1FA2               	btfss	___fladd@b+2,7
  3064  0392  2B94               	goto	u2061
  3065  0393  2B95               	goto	u2060
  3066  0394                     u2061:
  3067  0394  2B96               	goto	l1645
  3068  0395                     u2060:
  3069  0395                     l1643:
  3070  0395  1477               	bsf	___fladd@bexp,0
  3071  0396                     l1645:
  3072  0396  0877               	movf	___fladd@bexp,w
  3073  0397  1903               	btfsc	3,2
  3074  0398  2B9A               	goto	u2071
  3075  0399  2B9B               	goto	u2070
  3076  039A                     u2071:
  3077  039A  2BAB               	goto	l1655
  3078  039B                     u2070:
  3079  039B                     l1647:
  3080  039B  0A77               	incf	___fladd@bexp,w
  3081  039C  1D03               	btfss	3,2
  3082  039D  2B9F               	goto	u2081
  3083  039E  2BA0               	goto	u2080
  3084  039F                     u2081:
  3085  039F  2BA8               	goto	l1651
  3086  03A0                     u2080:
  3087  03A0                     l1649:
  3088  03A0  3000               	movlw	0
  3089  03A1  00A3               	movwf	___fladd@b+3
  3090  03A2  3000               	movlw	0
  3091  03A3  00A2               	movwf	___fladd@b+2
  3092  03A4  3000               	movlw	0
  3093  03A5  00A1               	movwf	___fladd@b+1
  3094  03A6  3000               	movlw	0
  3095  03A7  00A0               	movwf	___fladd@b
  3096  03A8                     l1651:
  3097  03A8  17A2               	bsf	___fladd@b+2,7
  3098  03A9                     l1653:
  3099  03A9  01A3               	clrf	___fladd@b+3
  3100  03AA  2BB3               	goto	l1657
  3101  03AB                     l1655:
  3102  03AB  3000               	movlw	0
  3103  03AC  00A3               	movwf	___fladd@b+3
  3104  03AD  3000               	movlw	0
  3105  03AE  00A2               	movwf	___fladd@b+2
  3106  03AF  3000               	movlw	0
  3107  03B0  00A1               	movwf	___fladd@b+1
  3108  03B1  3000               	movlw	0
  3109  03B2  00A0               	movwf	___fladd@b
  3110  03B3                     l1657:
  3111  03B3  0827               	movf	___fladd@a+3,w
  3112  03B4  3980               	andlw	128
  3113  03B5  00A8               	movwf	??___fladd
  3114  03B6  0828               	movf	??___fladd,w
  3115  03B7  00F6               	movwf	___fladd@aexp
  3116  03B8                     l1659:
  3117  03B8  0876               	movf	___fladd@aexp,w
  3118  03B9  0675               	xorwf	___fladd@signs,w
  3119  03BA  1903               	skipnz
  3120  03BB  2BBD               	goto	u2091
  3121  03BC  2BBE               	goto	u2090
  3122  03BD                     u2091:
  3123  03BD  2BBF               	goto	l1663
  3124  03BE                     u2090:
  3125  03BE                     l1661:
  3126  03BE  1775               	bsf	___fladd@signs,6
  3127  03BF                     l1663:
  3128  03BF  0827               	movf	___fladd@a+3,w
  3129  03C0  00A8               	movwf	??___fladd
  3130  03C1  0728               	addwf	??___fladd,w
  3131  03C2  00A9               	movwf	??___fladd+1
  3132  03C3  0829               	movf	??___fladd+1,w
  3133  03C4  00F6               	movwf	___fladd@aexp
  3134  03C5                     l1665:
  3135  03C5  1FA6               	btfss	___fladd@a+2,7
  3136  03C6  2BC8               	goto	u2101
  3137  03C7  2BC9               	goto	u2100
  3138  03C8                     u2101:
  3139  03C8  2BCA               	goto	l1669
  3140  03C9                     u2100:
  3141  03C9                     l1667:
  3142  03C9  1476               	bsf	___fladd@aexp,0
  3143  03CA                     l1669:
  3144  03CA  0876               	movf	___fladd@aexp,w
  3145  03CB  1903               	btfsc	3,2
  3146  03CC  2BCE               	goto	u2111
  3147  03CD  2BCF               	goto	u2110
  3148  03CE                     u2111:
  3149  03CE  2BDF               	goto	l1679
  3150  03CF                     u2110:
  3151  03CF                     l1671:
  3152  03CF  0A76               	incf	___fladd@aexp,w
  3153  03D0  1D03               	btfss	3,2
  3154  03D1  2BD3               	goto	u2121
  3155  03D2  2BD4               	goto	u2120
  3156  03D3                     u2121:
  3157  03D3  2BDC               	goto	l1675
  3158  03D4                     u2120:
  3159  03D4                     l1673:
  3160  03D4  3000               	movlw	0
  3161  03D5  00A7               	movwf	___fladd@a+3
  3162  03D6  3000               	movlw	0
  3163  03D7  00A6               	movwf	___fladd@a+2
  3164  03D8  3000               	movlw	0
  3165  03D9  00A5               	movwf	___fladd@a+1
  3166  03DA  3000               	movlw	0
  3167  03DB  00A4               	movwf	___fladd@a
  3168  03DC                     l1675:
  3169  03DC  17A6               	bsf	___fladd@a+2,7
  3170  03DD                     l1677:
  3171  03DD  01A7               	clrf	___fladd@a+3
  3172  03DE  2BE7               	goto	l568
  3173  03DF                     l1679:
  3174  03DF  3000               	movlw	0
  3175  03E0  00A7               	movwf	___fladd@a+3
  3176  03E1  3000               	movlw	0
  3177  03E2  00A6               	movwf	___fladd@a+2
  3178  03E3  3000               	movlw	0
  3179  03E4  00A5               	movwf	___fladd@a+1
  3180  03E5  3000               	movlw	0
  3181  03E6  00A4               	movwf	___fladd@a
  3182  03E7                     l568:
  3183  03E7  0877               	movf	___fladd@bexp,w
  3184  03E8  0276               	subwf	___fladd@aexp,w
  3185  03E9  1803               	skipnc
  3186  03EA  2BEC               	goto	u2131
  3187  03EB  2BED               	goto	u2130
  3188  03EC                     u2131:
  3189  03EC  2C31               	goto	l1715
  3190  03ED                     u2130:
  3191  03ED                     l1681:
  3192  03ED  1F75               	btfss	___fladd@signs,6
  3193  03EE  2BF0               	goto	u2141
  3194  03EF  2BF1               	goto	u2140
  3195  03F0                     u2141:
  3196  03F0  2BF5               	goto	l1685
  3197  03F1                     u2140:
  3198  03F1                     l1683:
  3199  03F1  3080               	movlw	128
  3200  03F2  00A8               	movwf	??___fladd
  3201  03F3  0828               	movf	??___fladd,w
  3202  03F4  06F5               	xorwf	___fladd@signs,f
  3203  03F5                     l1685:
  3204  03F5  0877               	movf	___fladd@bexp,w
  3205  03F6  00A8               	movwf	??___fladd
  3206  03F7  0828               	movf	??___fladd,w
  3207  03F8  00F8               	movwf	___fladd@grs
  3208  03F9                     l1687:
  3209  03F9  0876               	movf	___fladd@aexp,w
  3210  03FA  00A8               	movwf	??___fladd
  3211  03FB  0828               	movf	??___fladd,w
  3212  03FC  00F7               	movwf	___fladd@bexp
  3213  03FD                     l1689:
  3214  03FD  0878               	movf	___fladd@grs,w
  3215  03FE  00A8               	movwf	??___fladd
  3216  03FF  0828               	movf	??___fladd,w
  3217  0400  00F6               	movwf	___fladd@aexp
  3218  0401                     l1691:
  3219  0401  0820               	movf	___fladd@b,w
  3220  0402  00A8               	movwf	??___fladd
  3221  0403  0828               	movf	??___fladd,w
  3222  0404  00F8               	movwf	___fladd@grs
  3223  0405                     l1693:
  3224  0405  0824               	movf	___fladd@a,w
  3225  0406  00A8               	movwf	??___fladd
  3226  0407  0828               	movf	??___fladd,w
  3227  0408  00A0               	movwf	___fladd@b
  3228  0409                     l1695:
  3229  0409  0878               	movf	___fladd@grs,w
  3230  040A  00A8               	movwf	??___fladd
  3231  040B  0828               	movf	??___fladd,w
  3232  040C  00A4               	movwf	___fladd@a
  3233  040D                     l1697:
  3234  040D  0821               	movf	___fladd@b+1,w
  3235  040E  00A8               	movwf	??___fladd
  3236  040F  0828               	movf	??___fladd,w
  3237  0410  00F8               	movwf	___fladd@grs
  3238  0411                     l1699:
  3239  0411  0825               	movf	___fladd@a+1,w
  3240  0412  00A8               	movwf	??___fladd
  3241  0413  0828               	movf	??___fladd,w
  3242  0414  00A1               	movwf	___fladd@b+1
  3243  0415                     l1701:
  3244  0415  0878               	movf	___fladd@grs,w
  3245  0416  00A8               	movwf	??___fladd
  3246  0417  0828               	movf	??___fladd,w
  3247  0418  00A5               	movwf	___fladd@a+1
  3248  0419                     l1703:
  3249  0419  0822               	movf	___fladd@b+2,w
  3250  041A  00A8               	movwf	??___fladd
  3251  041B  0828               	movf	??___fladd,w
  3252  041C  00F8               	movwf	___fladd@grs
  3253  041D                     l1705:
  3254  041D  0826               	movf	___fladd@a+2,w
  3255  041E  00A8               	movwf	??___fladd
  3256  041F  0828               	movf	??___fladd,w
  3257  0420  00A2               	movwf	___fladd@b+2
  3258  0421                     l1707:
  3259  0421  0878               	movf	___fladd@grs,w
  3260  0422  00A8               	movwf	??___fladd
  3261  0423  0828               	movf	??___fladd,w
  3262  0424  00A6               	movwf	___fladd@a+2
  3263  0425                     l1709:
  3264  0425  0823               	movf	___fladd@b+3,w
  3265  0426  00A8               	movwf	??___fladd
  3266  0427  0828               	movf	??___fladd,w
  3267  0428  00F8               	movwf	___fladd@grs
  3268  0429                     l1711:
  3269  0429  0827               	movf	___fladd@a+3,w
  3270  042A  00A8               	movwf	??___fladd
  3271  042B  0828               	movf	??___fladd,w
  3272  042C  00A3               	movwf	___fladd@b+3
  3273  042D                     l1713:
  3274  042D  0878               	movf	___fladd@grs,w
  3275  042E  00A8               	movwf	??___fladd
  3276  042F  0828               	movf	??___fladd,w
  3277  0430  00A7               	movwf	___fladd@a+3
  3278  0431                     l1715:
  3279  0431  01F8               	clrf	___fladd@grs
  3280  0432                     l1717:
  3281  0432  0876               	movf	___fladd@aexp,w
  3282  0433  00A8               	movwf	??___fladd
  3283  0434  01A9               	clrf	??___fladd+1
  3284  0435  0829               	movf	??___fladd+1,w
  3285  0436  00AB               	movwf	??___fladd+3
  3286  0437  0877               	movf	___fladd@bexp,w
  3287  0438  0228               	subwf	??___fladd,w
  3288  0439  00AA               	movwf	??___fladd+2
  3289  043A  1C03               	skipc
  3290  043B  03AB               	decf	??___fladd+3,f
  3291  043C  082B               	movf	??___fladd+3,w
  3292  043D  3A80               	xorlw	128
  3293  043E  00FF               	movwf	btemp+1
  3294  043F  3080               	movlw	128
  3295  0440  027F               	subwf	btemp+1,w
  3296  0441  1D03               	skipz
  3297  0442  2C45               	goto	u2155
  3298  0443  301A               	movlw	26
  3299  0444  022A               	subwf	??___fladd+2,w
  3300  0445                     u2155:
  3301  0445  1C03               	skipc
  3302  0446  2C48               	goto	u2151
  3303  0447  2C49               	goto	u2150
  3304  0448                     u2151:
  3305  0448  2C8A               	goto	l1733
  3306  0449                     u2150:
  3307  0449                     l1719:
  3308  0449  1283               	bcf	3,5	;RP0=0, select bank0
  3309  044A  1303               	bcf	3,6	;RP1=0, select bank0
  3310  044B  0823               	movf	___fladd@b+3,w
  3311  044C  0422               	iorwf	___fladd@b+2,w
  3312  044D  0421               	iorwf	___fladd@b+1,w
  3313  044E  0420               	iorwf	___fladd@b,w
  3314  044F  1D03               	skipz
  3315  0450  2C52               	goto	u2161
  3316  0451  2C54               	goto	u2160
  3317  0452                     u2161:
  3318  0452  3001               	movlw	1
  3319  0453  2C55               	goto	u2170
  3320  0454                     u2160:
  3321  0454  3000               	movlw	0
  3322  0455                     u2170:
  3323  0455  00A8               	movwf	??___fladd
  3324  0456  0828               	movf	??___fladd,w
  3325  0457  00F8               	movwf	___fladd@grs
  3326  0458  3000               	movlw	0
  3327  0459  00A3               	movwf	___fladd@b+3
  3328  045A  3000               	movlw	0
  3329  045B  00A2               	movwf	___fladd@b+2
  3330  045C  3000               	movlw	0
  3331  045D  00A1               	movwf	___fladd@b+1
  3332  045E  3000               	movlw	0
  3333  045F  00A0               	movwf	___fladd@b
  3334  0460  0876               	movf	___fladd@aexp,w
  3335  0461  00A8               	movwf	??___fladd
  3336  0462  0828               	movf	??___fladd,w
  3337  0463  00F7               	movwf	___fladd@bexp
  3338  0464  2C90               	goto	l572
  3339  0465                     l574:
  3340  0465  1C78               	btfss	___fladd@grs,0
  3341  0466  2C68               	goto	u2181
  3342  0467  2C69               	goto	u2180
  3343  0468                     u2181:
  3344  0468  2C74               	goto	l1723
  3345  0469                     u2180:
  3346  0469                     l1721:
  3347  0469  0878               	movf	___fladd@grs,w
  3348  046A  1283               	bcf	3,5	;RP0=0, select bank0
  3349  046B  1303               	bcf	3,6	;RP1=0, select bank0
  3350  046C  00A8               	movwf	??___fladd
  3351  046D  1003               	clrc
  3352  046E  0C28               	rrf	??___fladd,w
  3353  046F  3801               	iorlw	1
  3354  0470  00A9               	movwf	??___fladd+1
  3355  0471  0829               	movf	??___fladd+1,w
  3356  0472  00F8               	movwf	___fladd@grs
  3357  0473  2C76               	goto	l1725
  3358  0474                     l1723:
  3359  0474  1003               	clrc
  3360  0475  0CF8               	rrf	___fladd@grs,f
  3361  0476                     l1725:
  3362  0476  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0477  1303               	bcf	3,6	;RP1=0, select bank0
  3364  0478  1C20               	btfss	___fladd@b,0
  3365  0479  2C7B               	goto	u2191
  3366  047A  2C7C               	goto	u2190
  3367  047B                     u2191:
  3368  047B  2C7D               	goto	l1729
  3369  047C                     u2190:
  3370  047C                     l1727:
  3371  047C  17F8               	bsf	___fladd@grs,7
  3372  047D                     l1729:
  3373  047D  3001               	movlw	1
  3374  047E  00A8               	movwf	??___fladd
  3375  047F                     u2205:
  3376  047F  0D23               	rlf	___fladd@b+3,w
  3377  0480  0CA3               	rrf	___fladd@b+3,f
  3378  0481  0CA2               	rrf	___fladd@b+2,f
  3379  0482  0CA1               	rrf	___fladd@b+1,f
  3380  0483  0CA0               	rrf	___fladd@b,f
  3381  0484  0BA8               	decfsz	??___fladd& (0+127),f
  3382  0485  2C7F               	goto	u2205
  3383  0486                     l1731:
  3384  0486  3001               	movlw	1
  3385  0487  00A8               	movwf	??___fladd
  3386  0488  0828               	movf	??___fladd,w
  3387  0489  07F7               	addwf	___fladd@bexp,f
  3388  048A                     l1733:
  3389  048A  0876               	movf	___fladd@aexp,w
  3390  048B  0277               	subwf	___fladd@bexp,w
  3391  048C  1C03               	skipc
  3392  048D  2C8F               	goto	u2211
  3393  048E  2C90               	goto	u2210
  3394  048F                     u2211:
  3395  048F  2C65               	goto	l574
  3396  0490                     u2210:
  3397  0490                     l572:
  3398  0490  1B75               	btfsc	___fladd@signs,6
  3399  0491  2C93               	goto	u2221
  3400  0492  2C94               	goto	u2220
  3401  0493                     u2221:
  3402  0493  2CE3               	goto	l1759
  3403  0494                     u2220:
  3404  0494                     l1735:
  3405  0494  0877               	movf	___fladd@bexp,w
  3406  0495  1D03               	btfss	3,2
  3407  0496  2C98               	goto	u2231
  3408  0497  2C99               	goto	u2230
  3409  0498                     u2231:
  3410  0498  2CA4               	goto	l1741
  3411  0499                     u2230:
  3412  0499                     l1737:
  3413  0499  3000               	movlw	0
  3414  049A  1283               	bcf	3,5	;RP0=0, select bank0
  3415  049B  1303               	bcf	3,6	;RP1=0, select bank0
  3416  049C  00A3               	movwf	?___fladd+3
  3417  049D  3000               	movlw	0
  3418  049E  00A2               	movwf	?___fladd+2
  3419  049F  3000               	movlw	0
  3420  04A0  00A1               	movwf	?___fladd+1
  3421  04A1  3000               	movlw	0
  3422  04A2  00A0               	movwf	?___fladd
  3423  04A3  2E13               	goto	l581
  3424  04A4                     l1741:
  3425  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  3426  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  3427  04A6  0824               	movf	___fladd@a,w
  3428  04A7  07A0               	addwf	___fladd@b,f
  3429  04A8  0825               	movf	___fladd@a+1,w
  3430  04A9  1103               	clrz
  3431  04AA  1803               	skipnc
  3432  04AB  3E01               	addlw	1
  3433  04AC  1903               	skipnz
  3434  04AD  2CAF               	goto	u2241
  3435  04AE  07A1               	addwf	___fladd@b+1,f
  3436  04AF                     u2241:
  3437  04AF  0826               	movf	___fladd@a+2,w
  3438  04B0  1103               	clrz
  3439  04B1  1803               	skipnc
  3440  04B2  3E01               	addlw	1
  3441  04B3  1903               	skipnz
  3442  04B4  2CB6               	goto	u2242
  3443  04B5  07A2               	addwf	___fladd@b+2,f
  3444  04B6                     u2242:
  3445  04B6  0827               	movf	___fladd@a+3,w
  3446  04B7  1103               	clrz
  3447  04B8  1803               	skipnc
  3448  04B9  3E01               	addlw	1
  3449  04BA  1903               	skipnz
  3450  04BB  2CBD               	goto	u2243
  3451  04BC  07A3               	addwf	___fladd@b+3,f
  3452  04BD                     u2243:
  3453  04BD                     l1743:
  3454  04BD  1C23               	btfss	___fladd@b+3,0
  3455  04BE  2CC0               	goto	u2251
  3456  04BF  2CC1               	goto	u2250
  3457  04C0                     u2251:
  3458  04C0  2D99               	goto	l1793
  3459  04C1                     u2250:
  3460  04C1                     l1745:
  3461  04C1  1C78               	btfss	___fladd@grs,0
  3462  04C2  2CC4               	goto	u2261
  3463  04C3  2CC5               	goto	u2260
  3464  04C4                     u2261:
  3465  04C4  2CCE               	goto	l1749
  3466  04C5                     u2260:
  3467  04C5                     l1747:
  3468  04C5  0878               	movf	___fladd@grs,w
  3469  04C6  00A8               	movwf	??___fladd
  3470  04C7  1003               	clrc
  3471  04C8  0C28               	rrf	??___fladd,w
  3472  04C9  3801               	iorlw	1
  3473  04CA  00A9               	movwf	??___fladd+1
  3474  04CB  0829               	movf	??___fladd+1,w
  3475  04CC  00F8               	movwf	___fladd@grs
  3476  04CD  2CD0               	goto	l1751
  3477  04CE                     l1749:
  3478  04CE  1003               	clrc
  3479  04CF  0CF8               	rrf	___fladd@grs,f
  3480  04D0                     l1751:
  3481  04D0  1C20               	btfss	___fladd@b,0
  3482  04D1  2CD3               	goto	u2271
  3483  04D2  2CD4               	goto	u2270
  3484  04D3                     u2271:
  3485  04D3  2CD5               	goto	l1755
  3486  04D4                     u2270:
  3487  04D4                     l1753:
  3488  04D4  17F8               	bsf	___fladd@grs,7
  3489  04D5                     l1755:
  3490  04D5  3001               	movlw	1
  3491  04D6  00A8               	movwf	??___fladd
  3492  04D7                     u2285:
  3493  04D7  0D23               	rlf	___fladd@b+3,w
  3494  04D8  0CA3               	rrf	___fladd@b+3,f
  3495  04D9  0CA2               	rrf	___fladd@b+2,f
  3496  04DA  0CA1               	rrf	___fladd@b+1,f
  3497  04DB  0CA0               	rrf	___fladd@b,f
  3498  04DC  0BA8               	decfsz	??___fladd& (0+127),f
  3499  04DD  2CD7               	goto	u2285
  3500  04DE                     l1757:
  3501  04DE  3001               	movlw	1
  3502  04DF  00A8               	movwf	??___fladd
  3503  04E0  0828               	movf	??___fladd,w
  3504  04E1  07F7               	addwf	___fladd@bexp,f
  3505  04E2  2D99               	goto	l1793
  3506  04E3                     l1759:
  3507  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3508  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3509  04E5  0823               	movf	___fladd@b+3,w
  3510  04E6  3A80               	xorlw	128
  3511  04E7  00FF               	movwf	btemp+1
  3512  04E8  0827               	movf	___fladd@a+3,w
  3513  04E9  3A80               	xorlw	128
  3514  04EA  027F               	subwf	btemp+1,w
  3515  04EB  1D03               	skipz
  3516  04EC  2CF7               	goto	u2293
  3517  04ED  0826               	movf	___fladd@a+2,w
  3518  04EE  0222               	subwf	___fladd@b+2,w
  3519  04EF  1D03               	skipz
  3520  04F0  2CF7               	goto	u2293
  3521  04F1  0825               	movf	___fladd@a+1,w
  3522  04F2  0221               	subwf	___fladd@b+1,w
  3523  04F3  1D03               	skipz
  3524  04F4  2CF7               	goto	u2293
  3525  04F5  0824               	movf	___fladd@a,w
  3526  04F6  0220               	subwf	___fladd@b,w
  3527  04F7                     u2293:
  3528  04F7  1803               	skipnc
  3529  04F8  2CFA               	goto	u2291
  3530  04F9  2CFB               	goto	u2290
  3531  04FA                     u2291:
  3532  04FA  2D53               	goto	l1769
  3533  04FB                     u2290:
  3534  04FB                     l1761:
  3535  04FB  30FF               	movlw	255
  3536  04FC  00A8               	movwf	??___fladd
  3537  04FD  30FF               	movlw	255
  3538  04FE  00A9               	movwf	??___fladd+1
  3539  04FF  30FF               	movlw	255
  3540  0500  00AA               	movwf	??___fladd+2
  3541  0501  30FF               	movlw	255
  3542  0502  00AB               	movwf	??___fladd+3
  3543  0503  0824               	movf	___fladd@a,w
  3544  0504  00AC               	movwf	??___fladd+4
  3545  0505  0825               	movf	___fladd@a+1,w
  3546  0506  00AD               	movwf	??___fladd+5
  3547  0507  0826               	movf	___fladd@a+2,w
  3548  0508  00AE               	movwf	??___fladd+6
  3549  0509  0827               	movf	___fladd@a+3,w
  3550  050A  00AF               	movwf	??___fladd+7
  3551  050B  0820               	movf	___fladd@b,w
  3552  050C  02AC               	subwf	??___fladd+4,f
  3553  050D  0821               	movf	___fladd@b+1,w
  3554  050E  1C03               	skipc
  3555  050F  0F21               	incfsz	___fladd@b+1,w
  3556  0510  2D12               	goto	u2301
  3557  0511  2D13               	goto	u2302
  3558  0512                     u2301:
  3559  0512  02AD               	subwf	??___fladd+5,f
  3560  0513                     u2302:
  3561  0513  0822               	movf	___fladd@b+2,w
  3562  0514  1C03               	skipc
  3563  0515  0F22               	incfsz	___fladd@b+2,w
  3564  0516  2D18               	goto	u2303
  3565  0517  2D19               	goto	u2304
  3566  0518                     u2303:
  3567  0518  02AE               	subwf	??___fladd+6,f
  3568  0519                     u2304:
  3569  0519  0823               	movf	___fladd@b+3,w
  3570  051A  1C03               	skipc
  3571  051B  0F23               	incfsz	___fladd@b+3,w
  3572  051C  2D1E               	goto	u2305
  3573  051D  2D1F               	goto	u2306
  3574  051E                     u2305:
  3575  051E  02AF               	subwf	??___fladd+7,f
  3576  051F                     u2306:
  3577  051F  082C               	movf	??___fladd+4,w
  3578  0520  07A8               	addwf	??___fladd,f
  3579  0521  082D               	movf	??___fladd+5,w
  3580  0522  1803               	skipnc
  3581  0523  0F2D               	incfsz	??___fladd+5,w
  3582  0524  2D26               	goto	u2310
  3583  0525  2D27               	goto	u2311
  3584  0526                     u2310:
  3585  0526  07A9               	addwf	??___fladd+1,f
  3586  0527                     u2311:
  3587  0527  082E               	movf	??___fladd+6,w
  3588  0528  1803               	skipnc
  3589  0529  0F2E               	incfsz	??___fladd+6,w
  3590  052A  2D2C               	goto	u2312
  3591  052B  2D2D               	goto	u2313
  3592  052C                     u2312:
  3593  052C  07AA               	addwf	??___fladd+2,f
  3594  052D                     u2313:
  3595  052D  082F               	movf	??___fladd+7,w
  3596  052E  1803               	skipnc
  3597  052F  0A2F               	incf	??___fladd+7,w
  3598  0530  07AB               	addwf	??___fladd+3,f
  3599  0531  082B               	movf	??___fladd+3,w
  3600  0532  00A3               	movwf	___fladd@b+3
  3601  0533  082A               	movf	??___fladd+2,w
  3602  0534  00A2               	movwf	___fladd@b+2
  3603  0535  0829               	movf	??___fladd+1,w
  3604  0536  00A1               	movwf	___fladd@b+1
  3605  0537  0828               	movf	??___fladd,w
  3606  0538  00A0               	movwf	___fladd@b
  3607  0539                     l1763:
  3608  0539  3080               	movlw	128
  3609  053A  00A8               	movwf	??___fladd
  3610  053B  0828               	movf	??___fladd,w
  3611  053C  06F5               	xorwf	___fladd@signs,f
  3612  053D  09F8               	comf	___fladd@grs,f
  3613  053E  0AF8               	incf	___fladd@grs,f
  3614  053F                     l1765:
  3615  053F  0878               	movf	___fladd@grs,w
  3616  0540  1D03               	btfss	3,2
  3617  0541  2D43               	goto	u2321
  3618  0542  2D44               	goto	u2320
  3619  0543                     u2321:
  3620  0543  2D61               	goto	l589
  3621  0544                     u2320:
  3622  0544                     l1767:
  3623  0544  3001               	movlw	1
  3624  0545  07A0               	addwf	___fladd@b,f
  3625  0546  3000               	movlw	0
  3626  0547  1803               	skipnc
  3627  0548  3001               	movlw	1
  3628  0549  07A1               	addwf	___fladd@b+1,f
  3629  054A  3000               	movlw	0
  3630  054B  1803               	skipnc
  3631  054C  3001               	movlw	1
  3632  054D  07A2               	addwf	___fladd@b+2,f
  3633  054E  3000               	movlw	0
  3634  054F  1803               	skipnc
  3635  0550  3001               	movlw	1
  3636  0551  07A3               	addwf	___fladd@b+3,f
  3637  0552  2D61               	goto	l589
  3638  0553                     l1769:
  3639  0553  0824               	movf	___fladd@a,w
  3640  0554  02A0               	subwf	___fladd@b,f
  3641  0555  0825               	movf	___fladd@a+1,w
  3642  0556  1C03               	skipc
  3643  0557  0F25               	incfsz	___fladd@a+1,w
  3644  0558  02A1               	subwf	___fladd@b+1,f
  3645  0559  0826               	movf	___fladd@a+2,w
  3646  055A  1C03               	skipc
  3647  055B  0F26               	incfsz	___fladd@a+2,w
  3648  055C  02A2               	subwf	___fladd@b+2,f
  3649  055D  0827               	movf	___fladd@a+3,w
  3650  055E  1C03               	skipc
  3651  055F  0F27               	incfsz	___fladd@a+3,w
  3652  0560  02A3               	subwf	___fladd@b+3,f
  3653  0561                     l589:
  3654  0561  0823               	movf	___fladd@b+3,w
  3655  0562  0422               	iorwf	___fladd@b+2,w
  3656  0563  0421               	iorwf	___fladd@b+1,w
  3657  0564  0420               	iorwf	___fladd@b,w
  3658  0565  1D03               	skipz
  3659  0566  2D68               	goto	u2331
  3660  0567  2D69               	goto	u2330
  3661  0568                     u2331:
  3662  0568  2D95               	goto	l1791
  3663  0569                     u2330:
  3664  0569                     l1771:
  3665  0569  0878               	movf	___fladd@grs,w
  3666  056A  1D03               	btfss	3,2
  3667  056B  2D6D               	goto	u2341
  3668  056C  2D6E               	goto	u2340
  3669  056D                     u2341:
  3670  056D  2D95               	goto	l1791
  3671  056E                     u2340:
  3672  056E                     l1773:
  3673  056E  3000               	movlw	0
  3674  056F  00A3               	movwf	?___fladd+3
  3675  0570  3000               	movlw	0
  3676  0571  00A2               	movwf	?___fladd+2
  3677  0572  3000               	movlw	0
  3678  0573  00A1               	movwf	?___fladd+1
  3679  0574  3000               	movlw	0
  3680  0575  00A0               	movwf	?___fladd
  3681  0576  2E13               	goto	l581
  3682  0577                     l1777:
  3683  0577  3001               	movlw	1
  3684  0578  00A8               	movwf	??___fladd
  3685  0579                     u2355:
  3686  0579  1003               	clrc
  3687  057A  0DA0               	rlf	___fladd@b,f
  3688  057B  0DA1               	rlf	___fladd@b+1,f
  3689  057C  0DA2               	rlf	___fladd@b+2,f
  3690  057D  0DA3               	rlf	___fladd@b+3,f
  3691  057E  0BA8               	decfsz	??___fladd,f
  3692  057F  2D79               	goto	u2355
  3693  0580                     l1779:
  3694  0580  1FF8               	btfss	___fladd@grs,7
  3695  0581  2D83               	goto	u2361
  3696  0582  2D84               	goto	u2360
  3697  0583                     u2361:
  3698  0583  2D85               	goto	l593
  3699  0584                     u2360:
  3700  0584                     l1781:
  3701  0584  1420               	bsf	___fladd@b,0
  3702  0585                     l593:
  3703  0585  1C78               	btfss	___fladd@grs,0
  3704  0586  2D88               	goto	u2371
  3705  0587  2D89               	goto	u2370
  3706  0588                     u2371:
  3707  0588  2D8C               	goto	l1785
  3708  0589                     u2370:
  3709  0589                     l1783:
  3710  0589  1403               	setc
  3711  058A  0DF8               	rlf	___fladd@grs,f
  3712  058B  2D8E               	goto	l1787
  3713  058C                     l1785:
  3714  058C  1003               	clrc
  3715  058D  0DF8               	rlf	___fladd@grs,f
  3716  058E                     l1787:
  3717  058E  0877               	movf	___fladd@bexp,w
  3718  058F  1903               	btfsc	3,2
  3719  0590  2D92               	goto	u2381
  3720  0591  2D93               	goto	u2380
  3721  0592                     u2381:
  3722  0592  2D95               	goto	l1791
  3723  0593                     u2380:
  3724  0593                     l1789:
  3725  0593  3001               	movlw	1
  3726  0594  02F7               	subwf	___fladd@bexp,f
  3727  0595                     l1791:
  3728  0595  1FA2               	btfss	___fladd@b+2,7
  3729  0596  2D98               	goto	u2391
  3730  0597  2D99               	goto	u2390
  3731  0598                     u2391:
  3732  0598  2D77               	goto	l1777
  3733  0599                     u2390:
  3734  0599                     l1793:
  3735  0599  01F6               	clrf	___fladd@aexp
  3736  059A                     l1795:
  3737  059A  1FF8               	btfss	___fladd@grs,7
  3738  059B  2D9D               	goto	u2401
  3739  059C  2D9E               	goto	u2400
  3740  059D                     u2401:
  3741  059D  2DAC               	goto	l1803
  3742  059E                     u2400:
  3743  059E                     l1797:
  3744  059E  0878               	movf	___fladd@grs,w
  3745  059F  397F               	andlw	127
  3746  05A0  1903               	btfsc	3,2
  3747  05A1  2DA3               	goto	u2411
  3748  05A2  2DA4               	goto	u2410
  3749  05A3                     u2411:
  3750  05A3  2DA7               	goto	l599
  3751  05A4                     u2410:
  3752  05A4                     l1799:
  3753  05A4  01F6               	clrf	___fladd@aexp
  3754  05A5  0AF6               	incf	___fladd@aexp,f
  3755  05A6  2DAC               	goto	l1803
  3756  05A7                     l599:
  3757  05A7  1C20               	btfss	___fladd@b,0
  3758  05A8  2DAA               	goto	u2421
  3759  05A9  2DAB               	goto	u2420
  3760  05AA                     u2421:
  3761  05AA  2DAC               	goto	l1803
  3762  05AB                     u2420:
  3763  05AB  2DA4               	goto	l1799
  3764  05AC                     l1803:
  3765  05AC  0876               	movf	___fladd@aexp,w
  3766  05AD  1903               	btfsc	3,2
  3767  05AE  2DB0               	goto	u2431
  3768  05AF  2DB1               	goto	u2430
  3769  05B0                     u2431:
  3770  05B0  2DE5               	goto	l602
  3771  05B1                     u2430:
  3772  05B1                     l1805:
  3773  05B1  3001               	movlw	1
  3774  05B2  07A0               	addwf	___fladd@b,f
  3775  05B3  3000               	movlw	0
  3776  05B4  1803               	skipnc
  3777  05B5  3001               	movlw	1
  3778  05B6  07A1               	addwf	___fladd@b+1,f
  3779  05B7  3000               	movlw	0
  3780  05B8  1803               	skipnc
  3781  05B9  3001               	movlw	1
  3782  05BA  07A2               	addwf	___fladd@b+2,f
  3783  05BB  3000               	movlw	0
  3784  05BC  1803               	skipnc
  3785  05BD  3001               	movlw	1
  3786  05BE  07A3               	addwf	___fladd@b+3,f
  3787  05BF                     l1807:
  3788  05BF  1C23               	btfss	___fladd@b+3,0
  3789  05C0  2DC2               	goto	u2441
  3790  05C1  2DC3               	goto	u2440
  3791  05C2                     u2441:
  3792  05C2  2DE5               	goto	l602
  3793  05C3                     u2440:
  3794  05C3                     l1809:
  3795  05C3  0820               	movf	___fladd@b,w
  3796  05C4  00A8               	movwf	??___fladd
  3797  05C5  0821               	movf	___fladd@b+1,w
  3798  05C6  00A9               	movwf	??___fladd+1
  3799  05C7  0822               	movf	___fladd@b+2,w
  3800  05C8  00AA               	movwf	??___fladd+2
  3801  05C9  0823               	movf	___fladd@b+3,w
  3802  05CA  00AB               	movwf	??___fladd+3
  3803  05CB  3001               	movlw	1
  3804  05CC  00AC               	movwf	??___fladd+4
  3805  05CD                     u2455:
  3806  05CD  0D2B               	rlf	??___fladd+3,w
  3807  05CE  0CAB               	rrf	??___fladd+3,f
  3808  05CF  0CAA               	rrf	??___fladd+2,f
  3809  05D0  0CA9               	rrf	??___fladd+1,f
  3810  05D1  0CA8               	rrf	??___fladd,f
  3811  05D2                     u2450:
  3812  05D2  0BAC               	decfsz	??___fladd+4,f
  3813  05D3  2DCD               	goto	u2455
  3814  05D4  082B               	movf	??___fladd+3,w
  3815  05D5  00A3               	movwf	___fladd@b+3
  3816  05D6  082A               	movf	??___fladd+2,w
  3817  05D7  00A2               	movwf	___fladd@b+2
  3818  05D8  0829               	movf	??___fladd+1,w
  3819  05D9  00A1               	movwf	___fladd@b+1
  3820  05DA  0828               	movf	??___fladd,w
  3821  05DB  00A0               	movwf	___fladd@b
  3822  05DC  0A77               	incf	___fladd@bexp,w
  3823  05DD  1903               	btfsc	3,2
  3824  05DE  2DE0               	goto	u2461
  3825  05DF  2DE1               	goto	u2460
  3826  05E0                     u2461:
  3827  05E0  2DE5               	goto	l602
  3828  05E1                     u2460:
  3829  05E1                     l1811:
  3830  05E1  3001               	movlw	1
  3831  05E2  00A8               	movwf	??___fladd
  3832  05E3  0828               	movf	??___fladd,w
  3833  05E4  07F7               	addwf	___fladd@bexp,f
  3834  05E5                     l602:
  3835  05E5  0A77               	incf	___fladd@bexp,w
  3836  05E6  1903               	btfsc	3,2
  3837  05E7  2DE9               	goto	u2471
  3838  05E8  2DEA               	goto	u2470
  3839  05E9                     u2471:
  3840  05E9  2DEF               	goto	l1815
  3841  05EA                     u2470:
  3842  05EA                     l1813:
  3843  05EA  0877               	movf	___fladd@bexp,w
  3844  05EB  1D03               	btfss	3,2
  3845  05EC  2DEE               	goto	u2481
  3846  05ED  2DEF               	goto	u2480
  3847  05EE                     u2481:
  3848  05EE  2DFD               	goto	l1821
  3849  05EF                     u2480:
  3850  05EF                     l1815:
  3851  05EF  3000               	movlw	0
  3852  05F0  00A3               	movwf	___fladd@b+3
  3853  05F1  3000               	movlw	0
  3854  05F2  00A2               	movwf	___fladd@b+2
  3855  05F3  3000               	movlw	0
  3856  05F4  00A1               	movwf	___fladd@b+1
  3857  05F5  3000               	movlw	0
  3858  05F6  00A0               	movwf	___fladd@b
  3859  05F7                     l1817:
  3860  05F7  0877               	movf	___fladd@bexp,w
  3861  05F8  1D03               	btfss	3,2
  3862  05F9  2DFB               	goto	u2491
  3863  05FA  2DFC               	goto	u2490
  3864  05FB                     u2491:
  3865  05FB  2DFD               	goto	l1821
  3866  05FC                     u2490:
  3867  05FC                     l1819:
  3868  05FC  01F5               	clrf	___fladd@signs
  3869  05FD                     l1821:
  3870  05FD  1C77               	btfss	___fladd@bexp,0
  3871  05FE  2E00               	goto	u2501
  3872  05FF  2E01               	goto	u2500
  3873  0600                     u2501:
  3874  0600  2E03               	goto	l1825
  3875  0601                     u2500:
  3876  0601                     l1823:
  3877  0601  17A2               	bsf	___fladd@b+2,7
  3878  0602  2E07               	goto	l610
  3879  0603                     l1825:
  3880  0603  307F               	movlw	127
  3881  0604  00A8               	movwf	??___fladd
  3882  0605  0828               	movf	??___fladd,w
  3883  0606  05A2               	andwf	___fladd@b+2,f
  3884  0607                     l610:
  3885  0607  0877               	movf	___fladd@bexp,w
  3886  0608  00A8               	movwf	??___fladd
  3887  0609  1003               	clrc
  3888  060A  0C28               	rrf	??___fladd,w
  3889  060B  00A9               	movwf	??___fladd+1
  3890  060C  0829               	movf	??___fladd+1,w
  3891  060D  00A3               	movwf	___fladd@b+3
  3892  060E                     l1827:
  3893  060E  1FF5               	btfss	___fladd@signs,7
  3894  060F  2E11               	goto	u2511
  3895  0610  2E12               	goto	u2510
  3896  0611                     u2511:
  3897  0611  2E13               	goto	l611
  3898  0612                     u2510:
  3899  0612                     l1829:
  3900  0612  17A3               	bsf	___fladd@b+3,7
  3901  0613                     l611:
  3902  0613                     l581:
  3903  0613  0008               	return
  3904  0614                     __end_of___fladd:
  3905                           
  3906                           	psect	text12
  3907  0023                     __ptext12:	
  3908 ;; *************** function ___flmul *****************
  3909 ;; Defined at:
  3910 ;;		line 8 in file "D:\programas\xc8\pic\sources\c90\common\sprcmul.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  b               4   10[BANK0 ] unsigned char 
  3913 ;;  a               4   14[BANK0 ] unsigned char 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  prod            4   30[BANK0 ] struct .
  3916 ;;  grs             4   24[BANK0 ] unsigned long 
  3917 ;;  temp            2   34[BANK0 ] struct .
  3918 ;;  bexp            1   29[BANK0 ] unsigned char 
  3919 ;;  aexp            1   28[BANK0 ] unsigned char 
  3920 ;;  sign            1   23[BANK0 ] unsigned char 
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  4   10[BANK0 ] unsigned char 
  3923 ;; Registers used:
  3924 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3930 ;;      Params:         0       8       0       0       0
  3931 ;;      Locals:         0      13       0       0       0
  3932 ;;      Temps:          0       5       0       0       0
  3933 ;;      Totals:         0      26       0       0       0
  3934 ;;Total ram usage:       26 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    3
  3937 ;; This function calls:
  3938 ;;		__Umul8_16
  3939 ;; This function is called by:
  3940 ;;		_analogToString
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           
  3945                           ;psect for function ___flmul
  3946  0023                     ___flmul:
  3947  0023                     l2035:	
  3948                           ;incstack = 0
  3949                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3950                           
  3951  0023  1283               	bcf	3,5	;RP0=0, select bank0
  3952  0024  1303               	bcf	3,6	;RP1=0, select bank0
  3953  0025  082D               	movf	___flmul@b+3,w
  3954  0026  3980               	andlw	128
  3955  0027  00B2               	movwf	??___flmul
  3956  0028  0832               	movf	??___flmul,w
  3957  0029  00B7               	movwf	___flmul@sign
  3958  002A                     l2037:
  3959  002A  082D               	movf	___flmul@b+3,w
  3960  002B  00B2               	movwf	??___flmul
  3961  002C  0732               	addwf	??___flmul,w
  3962  002D  00B3               	movwf	??___flmul+1
  3963  002E  0833               	movf	??___flmul+1,w
  3964  002F  00BD               	movwf	___flmul@bexp
  3965  0030                     l2039:
  3966  0030  1FAC               	btfss	___flmul@b+2,7
  3967  0031  2833               	goto	u2941
  3968  0032  2834               	goto	u2940
  3969  0033                     u2941:
  3970  0033  2835               	goto	l2043
  3971  0034                     u2940:
  3972  0034                     l2041:
  3973  0034  143D               	bsf	___flmul@bexp,0
  3974  0035                     l2043:
  3975  0035  083D               	movf	___flmul@bexp,w
  3976  0036  1903               	btfsc	3,2
  3977  0037  2839               	goto	u2951
  3978  0038  283A               	goto	u2950
  3979  0039                     u2951:
  3980  0039  2849               	goto	l2051
  3981  003A                     u2950:
  3982  003A                     l2045:
  3983  003A  0A3D               	incf	___flmul@bexp,w
  3984  003B  1D03               	btfss	3,2
  3985  003C  283E               	goto	u2961
  3986  003D  283F               	goto	u2960
  3987  003E                     u2961:
  3988  003E  2847               	goto	l2049
  3989  003F                     u2960:
  3990  003F                     l2047:
  3991  003F  3000               	movlw	0
  3992  0040  00AD               	movwf	___flmul@b+3
  3993  0041  3000               	movlw	0
  3994  0042  00AC               	movwf	___flmul@b+2
  3995  0043  3000               	movlw	0
  3996  0044  00AB               	movwf	___flmul@b+1
  3997  0045  3000               	movlw	0
  3998  0046  00AA               	movwf	___flmul@b
  3999  0047                     l2049:
  4000  0047  17AC               	bsf	___flmul@b+2,7
  4001  0048  2851               	goto	l2053
  4002  0049                     l2051:
  4003  0049  3000               	movlw	0
  4004  004A  00AD               	movwf	___flmul@b+3
  4005  004B  3000               	movlw	0
  4006  004C  00AC               	movwf	___flmul@b+2
  4007  004D  3000               	movlw	0
  4008  004E  00AB               	movwf	___flmul@b+1
  4009  004F  3000               	movlw	0
  4010  0050  00AA               	movwf	___flmul@b
  4011  0051                     l2053:
  4012  0051  0831               	movf	___flmul@a+3,w
  4013  0052  3980               	andlw	128
  4014  0053  00B2               	movwf	??___flmul
  4015  0054  0832               	movf	??___flmul,w
  4016  0055  06B7               	xorwf	___flmul@sign,f
  4017  0056                     l2055:
  4018  0056  0831               	movf	___flmul@a+3,w
  4019  0057  00B2               	movwf	??___flmul
  4020  0058  0732               	addwf	??___flmul,w
  4021  0059  00B3               	movwf	??___flmul+1
  4022  005A  0833               	movf	??___flmul+1,w
  4023  005B  00BC               	movwf	___flmul@aexp
  4024  005C                     l2057:
  4025  005C  1FB0               	btfss	___flmul@a+2,7
  4026  005D  285F               	goto	u2971
  4027  005E  2860               	goto	u2970
  4028  005F                     u2971:
  4029  005F  2861               	goto	l2061
  4030  0060                     u2970:
  4031  0060                     l2059:
  4032  0060  143C               	bsf	___flmul@aexp,0
  4033  0061                     l2061:
  4034  0061  083C               	movf	___flmul@aexp,w
  4035  0062  1903               	btfsc	3,2
  4036  0063  2865               	goto	u2981
  4037  0064  2866               	goto	u2980
  4038  0065                     u2981:
  4039  0065  2875               	goto	l2069
  4040  0066                     u2980:
  4041  0066                     l2063:
  4042  0066  0A3C               	incf	___flmul@aexp,w
  4043  0067  1D03               	btfss	3,2
  4044  0068  286A               	goto	u2991
  4045  0069  286B               	goto	u2990
  4046  006A                     u2991:
  4047  006A  2873               	goto	l2067
  4048  006B                     u2990:
  4049  006B                     l2065:
  4050  006B  3000               	movlw	0
  4051  006C  00B1               	movwf	___flmul@a+3
  4052  006D  3000               	movlw	0
  4053  006E  00B0               	movwf	___flmul@a+2
  4054  006F  3000               	movlw	0
  4055  0070  00AF               	movwf	___flmul@a+1
  4056  0071  3000               	movlw	0
  4057  0072  00AE               	movwf	___flmul@a
  4058  0073                     l2067:
  4059  0073  17B0               	bsf	___flmul@a+2,7
  4060  0074  287D               	goto	l2071
  4061  0075                     l2069:
  4062  0075  3000               	movlw	0
  4063  0076  00B1               	movwf	___flmul@a+3
  4064  0077  3000               	movlw	0
  4065  0078  00B0               	movwf	___flmul@a+2
  4066  0079  3000               	movlw	0
  4067  007A  00AF               	movwf	___flmul@a+1
  4068  007B  3000               	movlw	0
  4069  007C  00AE               	movwf	___flmul@a
  4070  007D                     l2071:
  4071  007D  083C               	movf	___flmul@aexp,w
  4072  007E  1903               	btfsc	3,2
  4073  007F  2881               	goto	u3001
  4074  0080  2882               	goto	u3000
  4075  0081                     u3001:
  4076  0081  2887               	goto	l2075
  4077  0082                     u3000:
  4078  0082                     l2073:
  4079  0082  083D               	movf	___flmul@bexp,w
  4080  0083  1D03               	btfss	3,2
  4081  0084  2886               	goto	u3011
  4082  0085  2887               	goto	u3010
  4083  0086                     u3011:
  4084  0086  2890               	goto	l2079
  4085  0087                     u3010:
  4086  0087                     l2075:
  4087  0087  3000               	movlw	0
  4088  0088  00AD               	movwf	?___flmul+3
  4089  0089  3000               	movlw	0
  4090  008A  00AC               	movwf	?___flmul+2
  4091  008B  3000               	movlw	0
  4092  008C  00AB               	movwf	?___flmul+1
  4093  008D  3000               	movlw	0
  4094  008E  00AA               	movwf	?___flmul
  4095  008F  2B83               	goto	l664
  4096  0090                     l2079:
  4097  0090  082A               	movf	___flmul@b,w
  4098  0091  00B2               	movwf	??___flmul
  4099  0092  0832               	movf	??___flmul,w
  4100  0093  00F5               	movwf	__Umul8_16@multiplicand
  4101  0094  0830               	movf	___flmul@a+2,w
  4102  0095  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4103  009A  0876               	movf	?__Umul8_16+1,w
  4104  009B  1283               	bcf	3,5	;RP0=0, select bank0
  4105  009C  1303               	bcf	3,6	;RP1=0, select bank0
  4106  009D  00C3               	movwf	___flmul@temp+1
  4107  009E  0875               	movf	?__Umul8_16,w
  4108  009F  00C2               	movwf	___flmul@temp
  4109  00A0                     l2081:
  4110  00A0  0842               	movf	___flmul@temp,w
  4111  00A1  00B2               	movwf	??___flmul
  4112  00A2  01B3               	clrf	??___flmul+1
  4113  00A3  01B4               	clrf	??___flmul+2
  4114  00A4  01B5               	clrf	??___flmul+3
  4115  00A5  0835               	movf	??___flmul+3,w
  4116  00A6  00BB               	movwf	___flmul@grs+3
  4117  00A7  0834               	movf	??___flmul+2,w
  4118  00A8  00BA               	movwf	___flmul@grs+2
  4119  00A9  0833               	movf	??___flmul+1,w
  4120  00AA  00B9               	movwf	___flmul@grs+1
  4121  00AB  0832               	movf	??___flmul,w
  4122  00AC  00B8               	movwf	___flmul@grs
  4123  00AD                     l2083:
  4124  00AD  0843               	movf	___flmul@temp+1,w
  4125  00AE  00B2               	movwf	??___flmul
  4126  00AF  01B3               	clrf	??___flmul+1
  4127  00B0  01B4               	clrf	??___flmul+2
  4128  00B1  01B5               	clrf	??___flmul+3
  4129  00B2  0835               	movf	??___flmul+3,w
  4130  00B3  00C1               	movwf	___flmul@prod+3
  4131  00B4  0834               	movf	??___flmul+2,w
  4132  00B5  00C0               	movwf	___flmul@prod+2
  4133  00B6  0833               	movf	??___flmul+1,w
  4134  00B7  00BF               	movwf	___flmul@prod+1
  4135  00B8  0832               	movf	??___flmul,w
  4136  00B9  00BE               	movwf	___flmul@prod
  4137  00BA  082B               	movf	___flmul@b+1,w
  4138  00BB  00B2               	movwf	??___flmul
  4139  00BC  0832               	movf	??___flmul,w
  4140  00BD  00F5               	movwf	__Umul8_16@multiplicand
  4141  00BE  082F               	movf	___flmul@a+1,w
  4142  00BF  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4143  00C4  0876               	movf	?__Umul8_16+1,w
  4144  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  4145  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  4146  00C7  00C3               	movwf	___flmul@temp+1
  4147  00C8  0875               	movf	?__Umul8_16,w
  4148  00C9  00C2               	movwf	___flmul@temp
  4149  00CA                     l2085:
  4150  00CA  0842               	movf	___flmul@temp,w
  4151  00CB  00B2               	movwf	??___flmul
  4152  00CC  01B3               	clrf	??___flmul+1
  4153  00CD  01B4               	clrf	??___flmul+2
  4154  00CE  01B5               	clrf	??___flmul+3
  4155  00CF  0832               	movf	??___flmul,w
  4156  00D0  07B8               	addwf	___flmul@grs,f
  4157  00D1  0833               	movf	??___flmul+1,w
  4158  00D2  1103               	clrz
  4159  00D3  1803               	skipnc
  4160  00D4  3E01               	addlw	1
  4161  00D5  1903               	skipnz
  4162  00D6  28D8               	goto	u3021
  4163  00D7  07B9               	addwf	___flmul@grs+1,f
  4164  00D8                     u3021:
  4165  00D8  0834               	movf	??___flmul+2,w
  4166  00D9  1103               	clrz
  4167  00DA  1803               	skipnc
  4168  00DB  3E01               	addlw	1
  4169  00DC  1903               	skipnz
  4170  00DD  28DF               	goto	u3022
  4171  00DE  07BA               	addwf	___flmul@grs+2,f
  4172  00DF                     u3022:
  4173  00DF  0835               	movf	??___flmul+3,w
  4174  00E0  1103               	clrz
  4175  00E1  1803               	skipnc
  4176  00E2  3E01               	addlw	1
  4177  00E3  1903               	skipnz
  4178  00E4  28E6               	goto	u3023
  4179  00E5  07BB               	addwf	___flmul@grs+3,f
  4180  00E6                     u3023:
  4181  00E6                     l2087:
  4182  00E6  0843               	movf	___flmul@temp+1,w
  4183  00E7  00B2               	movwf	??___flmul
  4184  00E8  01B3               	clrf	??___flmul+1
  4185  00E9  01B4               	clrf	??___flmul+2
  4186  00EA  01B5               	clrf	??___flmul+3
  4187  00EB  0832               	movf	??___flmul,w
  4188  00EC  07BE               	addwf	___flmul@prod,f
  4189  00ED  0833               	movf	??___flmul+1,w
  4190  00EE  1103               	clrz
  4191  00EF  1803               	skipnc
  4192  00F0  3E01               	addlw	1
  4193  00F1  1903               	skipnz
  4194  00F2  28F4               	goto	u3031
  4195  00F3  07BF               	addwf	___flmul@prod+1,f
  4196  00F4                     u3031:
  4197  00F4  0834               	movf	??___flmul+2,w
  4198  00F5  1103               	clrz
  4199  00F6  1803               	skipnc
  4200  00F7  3E01               	addlw	1
  4201  00F8  1903               	skipnz
  4202  00F9  28FB               	goto	u3032
  4203  00FA  07C0               	addwf	___flmul@prod+2,f
  4204  00FB                     u3032:
  4205  00FB  0835               	movf	??___flmul+3,w
  4206  00FC  1103               	clrz
  4207  00FD  1803               	skipnc
  4208  00FE  3E01               	addlw	1
  4209  00FF  1903               	skipnz
  4210  0100  2902               	goto	u3033
  4211  0101  07C1               	addwf	___flmul@prod+3,f
  4212  0102                     u3033:
  4213  0102  082C               	movf	___flmul@b+2,w
  4214  0103  00B2               	movwf	??___flmul
  4215  0104  0832               	movf	??___flmul,w
  4216  0105  00F5               	movwf	__Umul8_16@multiplicand
  4217  0106  082E               	movf	___flmul@a,w
  4218  0107  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4219  010C  0876               	movf	?__Umul8_16+1,w
  4220  010D  1283               	bcf	3,5	;RP0=0, select bank0
  4221  010E  1303               	bcf	3,6	;RP1=0, select bank0
  4222  010F  00C3               	movwf	___flmul@temp+1
  4223  0110  0875               	movf	?__Umul8_16,w
  4224  0111  00C2               	movwf	___flmul@temp
  4225  0112                     l2089:
  4226  0112  0842               	movf	___flmul@temp,w
  4227  0113  00B2               	movwf	??___flmul
  4228  0114  01B3               	clrf	??___flmul+1
  4229  0115  01B4               	clrf	??___flmul+2
  4230  0116  01B5               	clrf	??___flmul+3
  4231  0117  0832               	movf	??___flmul,w
  4232  0118  07B8               	addwf	___flmul@grs,f
  4233  0119  0833               	movf	??___flmul+1,w
  4234  011A  1103               	clrz
  4235  011B  1803               	skipnc
  4236  011C  3E01               	addlw	1
  4237  011D  1903               	skipnz
  4238  011E  2920               	goto	u3041
  4239  011F  07B9               	addwf	___flmul@grs+1,f
  4240  0120                     u3041:
  4241  0120  0834               	movf	??___flmul+2,w
  4242  0121  1103               	clrz
  4243  0122  1803               	skipnc
  4244  0123  3E01               	addlw	1
  4245  0124  1903               	skipnz
  4246  0125  2927               	goto	u3042
  4247  0126  07BA               	addwf	___flmul@grs+2,f
  4248  0127                     u3042:
  4249  0127  0835               	movf	??___flmul+3,w
  4250  0128  1103               	clrz
  4251  0129  1803               	skipnc
  4252  012A  3E01               	addlw	1
  4253  012B  1903               	skipnz
  4254  012C  292E               	goto	u3043
  4255  012D  07BB               	addwf	___flmul@grs+3,f
  4256  012E                     u3043:
  4257  012E                     l2091:
  4258  012E  0843               	movf	___flmul@temp+1,w
  4259  012F  00B2               	movwf	??___flmul
  4260  0130  01B3               	clrf	??___flmul+1
  4261  0131  01B4               	clrf	??___flmul+2
  4262  0132  01B5               	clrf	??___flmul+3
  4263  0133  0832               	movf	??___flmul,w
  4264  0134  07BE               	addwf	___flmul@prod,f
  4265  0135  0833               	movf	??___flmul+1,w
  4266  0136  1103               	clrz
  4267  0137  1803               	skipnc
  4268  0138  3E01               	addlw	1
  4269  0139  1903               	skipnz
  4270  013A  293C               	goto	u3051
  4271  013B  07BF               	addwf	___flmul@prod+1,f
  4272  013C                     u3051:
  4273  013C  0834               	movf	??___flmul+2,w
  4274  013D  1103               	clrz
  4275  013E  1803               	skipnc
  4276  013F  3E01               	addlw	1
  4277  0140  1903               	skipnz
  4278  0141  2943               	goto	u3052
  4279  0142  07C0               	addwf	___flmul@prod+2,f
  4280  0143                     u3052:
  4281  0143  0835               	movf	??___flmul+3,w
  4282  0144  1103               	clrz
  4283  0145  1803               	skipnc
  4284  0146  3E01               	addlw	1
  4285  0147  1903               	skipnz
  4286  0148  294A               	goto	u3053
  4287  0149  07C1               	addwf	___flmul@prod+3,f
  4288  014A                     u3053:
  4289  014A                     l2093:
  4290  014A  3008               	movlw	8
  4291  014B  00B2               	movwf	??___flmul
  4292  014C                     u3065:
  4293  014C  1003               	clrc
  4294  014D  0DB8               	rlf	___flmul@grs,f
  4295  014E  0DB9               	rlf	___flmul@grs+1,f
  4296  014F  0DBA               	rlf	___flmul@grs+2,f
  4297  0150  0DBB               	rlf	___flmul@grs+3,f
  4298  0151  0BB2               	decfsz	??___flmul,f
  4299  0152  294C               	goto	u3065
  4300  0153                     l2095:
  4301  0153  082B               	movf	___flmul@b+1,w
  4302  0154  00B2               	movwf	??___flmul
  4303  0155  0832               	movf	??___flmul,w
  4304  0156  00F5               	movwf	__Umul8_16@multiplicand
  4305  0157  082E               	movf	___flmul@a,w
  4306  0158  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4307  015D  0876               	movf	?__Umul8_16+1,w
  4308  015E  1283               	bcf	3,5	;RP0=0, select bank0
  4309  015F  1303               	bcf	3,6	;RP1=0, select bank0
  4310  0160  00C3               	movwf	___flmul@temp+1
  4311  0161  0875               	movf	?__Umul8_16,w
  4312  0162  00C2               	movwf	___flmul@temp
  4313  0163                     l2097:
  4314  0163  0842               	movf	___flmul@temp,w
  4315  0164  00B2               	movwf	??___flmul
  4316  0165  0843               	movf	___flmul@temp+1,w
  4317  0166  00B3               	movwf	??___flmul+1
  4318  0167  01B4               	clrf	??___flmul+2
  4319  0168  01B5               	clrf	??___flmul+3
  4320  0169  0832               	movf	??___flmul,w
  4321  016A  07B8               	addwf	___flmul@grs,f
  4322  016B  0833               	movf	??___flmul+1,w
  4323  016C  1103               	clrz
  4324  016D  1803               	skipnc
  4325  016E  3E01               	addlw	1
  4326  016F  1903               	skipnz
  4327  0170  2972               	goto	u3071
  4328  0171  07B9               	addwf	___flmul@grs+1,f
  4329  0172                     u3071:
  4330  0172  0834               	movf	??___flmul+2,w
  4331  0173  1103               	clrz
  4332  0174  1803               	skipnc
  4333  0175  3E01               	addlw	1
  4334  0176  1903               	skipnz
  4335  0177  2979               	goto	u3072
  4336  0178  07BA               	addwf	___flmul@grs+2,f
  4337  0179                     u3072:
  4338  0179  0835               	movf	??___flmul+3,w
  4339  017A  1103               	clrz
  4340  017B  1803               	skipnc
  4341  017C  3E01               	addlw	1
  4342  017D  1903               	skipnz
  4343  017E  2980               	goto	u3073
  4344  017F  07BB               	addwf	___flmul@grs+3,f
  4345  0180                     u3073:
  4346  0180                     l2099:
  4347  0180  082A               	movf	___flmul@b,w
  4348  0181  00B2               	movwf	??___flmul
  4349  0182  0832               	movf	??___flmul,w
  4350  0183  00F5               	movwf	__Umul8_16@multiplicand
  4351  0184  082F               	movf	___flmul@a+1,w
  4352  0185  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4353  018A  0876               	movf	?__Umul8_16+1,w
  4354  018B  1283               	bcf	3,5	;RP0=0, select bank0
  4355  018C  1303               	bcf	3,6	;RP1=0, select bank0
  4356  018D  00C3               	movwf	___flmul@temp+1
  4357  018E  0875               	movf	?__Umul8_16,w
  4358  018F  00C2               	movwf	___flmul@temp
  4359  0190                     l2101:
  4360  0190  0842               	movf	___flmul@temp,w
  4361  0191  00B2               	movwf	??___flmul
  4362  0192  0843               	movf	___flmul@temp+1,w
  4363  0193  00B3               	movwf	??___flmul+1
  4364  0194  01B4               	clrf	??___flmul+2
  4365  0195  01B5               	clrf	??___flmul+3
  4366  0196  0832               	movf	??___flmul,w
  4367  0197  07B8               	addwf	___flmul@grs,f
  4368  0198  0833               	movf	??___flmul+1,w
  4369  0199  1103               	clrz
  4370  019A  1803               	skipnc
  4371  019B  3E01               	addlw	1
  4372  019C  1903               	skipnz
  4373  019D  299F               	goto	u3081
  4374  019E  07B9               	addwf	___flmul@grs+1,f
  4375  019F                     u3081:
  4376  019F  0834               	movf	??___flmul+2,w
  4377  01A0  1103               	clrz
  4378  01A1  1803               	skipnc
  4379  01A2  3E01               	addlw	1
  4380  01A3  1903               	skipnz
  4381  01A4  29A6               	goto	u3082
  4382  01A5  07BA               	addwf	___flmul@grs+2,f
  4383  01A6                     u3082:
  4384  01A6  0835               	movf	??___flmul+3,w
  4385  01A7  1103               	clrz
  4386  01A8  1803               	skipnc
  4387  01A9  3E01               	addlw	1
  4388  01AA  1903               	skipnz
  4389  01AB  29AD               	goto	u3083
  4390  01AC  07BB               	addwf	___flmul@grs+3,f
  4391  01AD                     u3083:
  4392  01AD                     l2103:
  4393  01AD  3008               	movlw	8
  4394  01AE  00B2               	movwf	??___flmul
  4395  01AF                     u3095:
  4396  01AF  1003               	clrc
  4397  01B0  0DB8               	rlf	___flmul@grs,f
  4398  01B1  0DB9               	rlf	___flmul@grs+1,f
  4399  01B2  0DBA               	rlf	___flmul@grs+2,f
  4400  01B3  0DBB               	rlf	___flmul@grs+3,f
  4401  01B4  0BB2               	decfsz	??___flmul,f
  4402  01B5  29AF               	goto	u3095
  4403  01B6  082A               	movf	___flmul@b,w
  4404  01B7  00B2               	movwf	??___flmul
  4405  01B8  0832               	movf	??___flmul,w
  4406  01B9  00F5               	movwf	__Umul8_16@multiplicand
  4407  01BA  082E               	movf	___flmul@a,w
  4408  01BB  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4409  01C0  0876               	movf	?__Umul8_16+1,w
  4410  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  4411  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  4412  01C3  00C3               	movwf	___flmul@temp+1
  4413  01C4  0875               	movf	?__Umul8_16,w
  4414  01C5  00C2               	movwf	___flmul@temp
  4415  01C6                     l2105:
  4416  01C6  0842               	movf	___flmul@temp,w
  4417  01C7  00B2               	movwf	??___flmul
  4418  01C8  0843               	movf	___flmul@temp+1,w
  4419  01C9  00B3               	movwf	??___flmul+1
  4420  01CA  01B4               	clrf	??___flmul+2
  4421  01CB  01B5               	clrf	??___flmul+3
  4422  01CC  0832               	movf	??___flmul,w
  4423  01CD  07B8               	addwf	___flmul@grs,f
  4424  01CE  0833               	movf	??___flmul+1,w
  4425  01CF  1103               	clrz
  4426  01D0  1803               	skipnc
  4427  01D1  3E01               	addlw	1
  4428  01D2  1903               	skipnz
  4429  01D3  29D5               	goto	u3101
  4430  01D4  07B9               	addwf	___flmul@grs+1,f
  4431  01D5                     u3101:
  4432  01D5  0834               	movf	??___flmul+2,w
  4433  01D6  1103               	clrz
  4434  01D7  1803               	skipnc
  4435  01D8  3E01               	addlw	1
  4436  01D9  1903               	skipnz
  4437  01DA  29DC               	goto	u3102
  4438  01DB  07BA               	addwf	___flmul@grs+2,f
  4439  01DC                     u3102:
  4440  01DC  0835               	movf	??___flmul+3,w
  4441  01DD  1103               	clrz
  4442  01DE  1803               	skipnc
  4443  01DF  3E01               	addlw	1
  4444  01E0  1903               	skipnz
  4445  01E1  29E3               	goto	u3103
  4446  01E2  07BB               	addwf	___flmul@grs+3,f
  4447  01E3                     u3103:
  4448  01E3                     l2107:
  4449  01E3  082B               	movf	___flmul@b+1,w
  4450  01E4  00B2               	movwf	??___flmul
  4451  01E5  0832               	movf	??___flmul,w
  4452  01E6  00F5               	movwf	__Umul8_16@multiplicand
  4453  01E7  0830               	movf	___flmul@a+2,w
  4454  01E8  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4455  01ED  0876               	movf	?__Umul8_16+1,w
  4456  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  4457  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  4458  01F0  00C3               	movwf	___flmul@temp+1
  4459  01F1  0875               	movf	?__Umul8_16,w
  4460  01F2  00C2               	movwf	___flmul@temp
  4461  01F3  0842               	movf	___flmul@temp,w
  4462  01F4  00B2               	movwf	??___flmul
  4463  01F5  0843               	movf	___flmul@temp+1,w
  4464  01F6  00B3               	movwf	??___flmul+1
  4465  01F7  01B4               	clrf	??___flmul+2
  4466  01F8  01B5               	clrf	??___flmul+3
  4467  01F9  0832               	movf	??___flmul,w
  4468  01FA  07BE               	addwf	___flmul@prod,f
  4469  01FB  0833               	movf	??___flmul+1,w
  4470  01FC  1103               	clrz
  4471  01FD  1803               	skipnc
  4472  01FE  3E01               	addlw	1
  4473  01FF  1903               	skipnz
  4474  0200  2A02               	goto	u3111
  4475  0201  07BF               	addwf	___flmul@prod+1,f
  4476  0202                     u3111:
  4477  0202  0834               	movf	??___flmul+2,w
  4478  0203  1103               	clrz
  4479  0204  1803               	skipnc
  4480  0205  3E01               	addlw	1
  4481  0206  1903               	skipnz
  4482  0207  2A09               	goto	u3112
  4483  0208  07C0               	addwf	___flmul@prod+2,f
  4484  0209                     u3112:
  4485  0209  0835               	movf	??___flmul+3,w
  4486  020A  1103               	clrz
  4487  020B  1803               	skipnc
  4488  020C  3E01               	addlw	1
  4489  020D  1903               	skipnz
  4490  020E  2A10               	goto	u3113
  4491  020F  07C1               	addwf	___flmul@prod+3,f
  4492  0210                     u3113:
  4493  0210                     l2109:
  4494  0210  082C               	movf	___flmul@b+2,w
  4495  0211  00B2               	movwf	??___flmul
  4496  0212  0832               	movf	??___flmul,w
  4497  0213  00F5               	movwf	__Umul8_16@multiplicand
  4498  0214  082F               	movf	___flmul@a+1,w
  4499  0215  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4500  021A  0876               	movf	?__Umul8_16+1,w
  4501  021B  1283               	bcf	3,5	;RP0=0, select bank0
  4502  021C  1303               	bcf	3,6	;RP1=0, select bank0
  4503  021D  00C3               	movwf	___flmul@temp+1
  4504  021E  0875               	movf	?__Umul8_16,w
  4505  021F  00C2               	movwf	___flmul@temp
  4506  0220                     l2111:
  4507  0220  0842               	movf	___flmul@temp,w
  4508  0221  00B2               	movwf	??___flmul
  4509  0222  0843               	movf	___flmul@temp+1,w
  4510  0223  00B3               	movwf	??___flmul+1
  4511  0224  01B4               	clrf	??___flmul+2
  4512  0225  01B5               	clrf	??___flmul+3
  4513  0226  0832               	movf	??___flmul,w
  4514  0227  07BE               	addwf	___flmul@prod,f
  4515  0228  0833               	movf	??___flmul+1,w
  4516  0229  1103               	clrz
  4517  022A  1803               	skipnc
  4518  022B  3E01               	addlw	1
  4519  022C  1903               	skipnz
  4520  022D  2A2F               	goto	u3121
  4521  022E  07BF               	addwf	___flmul@prod+1,f
  4522  022F                     u3121:
  4523  022F  0834               	movf	??___flmul+2,w
  4524  0230  1103               	clrz
  4525  0231  1803               	skipnc
  4526  0232  3E01               	addlw	1
  4527  0233  1903               	skipnz
  4528  0234  2A36               	goto	u3122
  4529  0235  07C0               	addwf	___flmul@prod+2,f
  4530  0236                     u3122:
  4531  0236  0835               	movf	??___flmul+3,w
  4532  0237  1103               	clrz
  4533  0238  1803               	skipnc
  4534  0239  3E01               	addlw	1
  4535  023A  1903               	skipnz
  4536  023B  2A3D               	goto	u3123
  4537  023C  07C1               	addwf	___flmul@prod+3,f
  4538  023D                     u3123:
  4539  023D  082C               	movf	___flmul@b+2,w
  4540  023E  00B2               	movwf	??___flmul
  4541  023F  0832               	movf	??___flmul,w
  4542  0240  00F5               	movwf	__Umul8_16@multiplicand
  4543  0241  0830               	movf	___flmul@a+2,w
  4544  0242  120A  158A  22CF  120A  118A  	fcall	__Umul8_16
  4545  0247  0876               	movf	?__Umul8_16+1,w
  4546  0248  1283               	bcf	3,5	;RP0=0, select bank0
  4547  0249  1303               	bcf	3,6	;RP1=0, select bank0
  4548  024A  00C3               	movwf	___flmul@temp+1
  4549  024B  0875               	movf	?__Umul8_16,w
  4550  024C  00C2               	movwf	___flmul@temp
  4551  024D                     l2113:
  4552  024D  0842               	movf	___flmul@temp,w
  4553  024E  00B2               	movwf	??___flmul
  4554  024F  0843               	movf	___flmul@temp+1,w
  4555  0250  00B3               	movwf	??___flmul+1
  4556  0251  01B4               	clrf	??___flmul+2
  4557  0252  01B5               	clrf	??___flmul+3
  4558  0253  3008               	movlw	8
  4559  0254                     u3135:
  4560  0254  1003               	clrc
  4561  0255  0DB2               	rlf	??___flmul,f
  4562  0256  0DB3               	rlf	??___flmul+1,f
  4563  0257  0DB4               	rlf	??___flmul+2,f
  4564  0258  0DB5               	rlf	??___flmul+3,f
  4565  0259                     u3130:
  4566  0259  3EFF               	addlw	-1
  4567  025A  1D03               	skipz
  4568  025B  2A54               	goto	u3135
  4569  025C  0832               	movf	??___flmul,w
  4570  025D  07BE               	addwf	___flmul@prod,f
  4571  025E  0833               	movf	??___flmul+1,w
  4572  025F  1103               	clrz
  4573  0260  1803               	skipnc
  4574  0261  3E01               	addlw	1
  4575  0262  1903               	skipnz
  4576  0263  2A65               	goto	u3141
  4577  0264  07BF               	addwf	___flmul@prod+1,f
  4578  0265                     u3141:
  4579  0265  0834               	movf	??___flmul+2,w
  4580  0266  1103               	clrz
  4581  0267  1803               	skipnc
  4582  0268  3E01               	addlw	1
  4583  0269  1903               	skipnz
  4584  026A  2A6C               	goto	u3142
  4585  026B  07C0               	addwf	___flmul@prod+2,f
  4586  026C                     u3142:
  4587  026C  0835               	movf	??___flmul+3,w
  4588  026D  1103               	clrz
  4589  026E  1803               	skipnc
  4590  026F  3E01               	addlw	1
  4591  0270  1903               	skipnz
  4592  0271  2A73               	goto	u3143
  4593  0272  07C1               	addwf	___flmul@prod+3,f
  4594  0273                     u3143:
  4595  0273                     l2115:
  4596  0273  0838               	movf	___flmul@grs,w
  4597  0274  00B2               	movwf	??___flmul
  4598  0275  0839               	movf	___flmul@grs+1,w
  4599  0276  00B3               	movwf	??___flmul+1
  4600  0277  083A               	movf	___flmul@grs+2,w
  4601  0278  00B4               	movwf	??___flmul+2
  4602  0279  083B               	movf	___flmul@grs+3,w
  4603  027A  00B5               	movwf	??___flmul+3
  4604  027B  3018               	movlw	24
  4605  027C                     u3155:
  4606  027C  1003               	clrc
  4607  027D  0CB5               	rrf	??___flmul+3,f
  4608  027E  0CB4               	rrf	??___flmul+2,f
  4609  027F  0CB3               	rrf	??___flmul+1,f
  4610  0280  0CB2               	rrf	??___flmul,f
  4611  0281                     u3150:
  4612  0281  3EFF               	addlw	-1
  4613  0282  1D03               	skipz
  4614  0283  2A7C               	goto	u3155
  4615  0284  0832               	movf	??___flmul,w
  4616  0285  07BE               	addwf	___flmul@prod,f
  4617  0286  0833               	movf	??___flmul+1,w
  4618  0287  1103               	clrz
  4619  0288  1803               	skipnc
  4620  0289  3E01               	addlw	1
  4621  028A  1903               	skipnz
  4622  028B  2A8D               	goto	u3161
  4623  028C  07BF               	addwf	___flmul@prod+1,f
  4624  028D                     u3161:
  4625  028D  0834               	movf	??___flmul+2,w
  4626  028E  1103               	clrz
  4627  028F  1803               	skipnc
  4628  0290  3E01               	addlw	1
  4629  0291  1903               	skipnz
  4630  0292  2A94               	goto	u3162
  4631  0293  07C0               	addwf	___flmul@prod+2,f
  4632  0294                     u3162:
  4633  0294  0835               	movf	??___flmul+3,w
  4634  0295  1103               	clrz
  4635  0296  1803               	skipnc
  4636  0297  3E01               	addlw	1
  4637  0298  1903               	skipnz
  4638  0299  2A9B               	goto	u3163
  4639  029A  07C1               	addwf	___flmul@prod+3,f
  4640  029B                     u3163:
  4641  029B                     l2117:
  4642  029B  3008               	movlw	8
  4643  029C  00B2               	movwf	??___flmul
  4644  029D                     u3175:
  4645  029D  1003               	clrc
  4646  029E  0DB8               	rlf	___flmul@grs,f
  4647  029F  0DB9               	rlf	___flmul@grs+1,f
  4648  02A0  0DBA               	rlf	___flmul@grs+2,f
  4649  02A1  0DBB               	rlf	___flmul@grs+3,f
  4650  02A2  0BB2               	decfsz	??___flmul,f
  4651  02A3  2A9D               	goto	u3175
  4652  02A4                     l2119:
  4653  02A4  083D               	movf	___flmul@bexp,w
  4654  02A5  073C               	addwf	___flmul@aexp,w
  4655  02A6  00B2               	movwf	??___flmul
  4656  02A7  01B3               	clrf	??___flmul+1
  4657  02A8  0DB3               	rlf	??___flmul+1,f
  4658  02A9  0832               	movf	??___flmul,w
  4659  02AA  3E82               	addlw	130
  4660  02AB  00C2               	movwf	___flmul@temp
  4661  02AC  0833               	movf	??___flmul+1,w
  4662  02AD  1803               	skipnc
  4663  02AE  3E01               	addlw	1
  4664  02AF  3EFF               	addlw	255
  4665  02B0  00C3               	movwf	___flmul@temp+1
  4666  02B1  2ACF               	goto	l2131
  4667  02B2                     l2121:
  4668  02B2  3001               	movlw	1
  4669  02B3  00B2               	movwf	??___flmul
  4670  02B4                     u3185:
  4671  02B4  1003               	clrc
  4672  02B5  0DBE               	rlf	___flmul@prod,f
  4673  02B6  0DBF               	rlf	___flmul@prod+1,f
  4674  02B7  0DC0               	rlf	___flmul@prod+2,f
  4675  02B8  0DC1               	rlf	___flmul@prod+3,f
  4676  02B9  0BB2               	decfsz	??___flmul,f
  4677  02BA  2AB4               	goto	u3185
  4678  02BB                     l2123:
  4679  02BB  1FBB               	btfss	___flmul@grs+3,7
  4680  02BC  2ABE               	goto	u3191
  4681  02BD  2ABF               	goto	u3190
  4682  02BE                     u3191:
  4683  02BE  2AC0               	goto	l2127
  4684  02BF                     u3190:
  4685  02BF                     l2125:
  4686  02BF  143E               	bsf	___flmul@prod,0
  4687  02C0                     l2127:
  4688  02C0  3001               	movlw	1
  4689  02C1  00B2               	movwf	??___flmul
  4690  02C2                     u3205:
  4691  02C2  1003               	clrc
  4692  02C3  0DB8               	rlf	___flmul@grs,f
  4693  02C4  0DB9               	rlf	___flmul@grs+1,f
  4694  02C5  0DBA               	rlf	___flmul@grs+2,f
  4695  02C6  0DBB               	rlf	___flmul@grs+3,f
  4696  02C7  0BB2               	decfsz	??___flmul,f
  4697  02C8  2AC2               	goto	u3205
  4698  02C9                     l2129:
  4699  02C9  30FF               	movlw	255
  4700  02CA  07C2               	addwf	___flmul@temp,f
  4701  02CB  1803               	skipnc
  4702  02CC  0AC3               	incf	___flmul@temp+1,f
  4703  02CD  30FF               	movlw	255
  4704  02CE  07C3               	addwf	___flmul@temp+1,f
  4705  02CF                     l2131:
  4706  02CF  1FC0               	btfss	___flmul@prod+2,7
  4707  02D0  2AD2               	goto	u3211
  4708  02D1  2AD3               	goto	u3210
  4709  02D2                     u3211:
  4710  02D2  2AB2               	goto	l2121
  4711  02D3                     u3210:
  4712  02D3                     l2133:
  4713  02D3  01BC               	clrf	___flmul@aexp
  4714  02D4                     l2135:
  4715  02D4  1FBB               	btfss	___flmul@grs+3,7
  4716  02D5  2AD7               	goto	u3221
  4717  02D6  2AD8               	goto	u3220
  4718  02D7                     u3221:
  4719  02D7  2AF4               	goto	l2143
  4720  02D8                     u3220:
  4721  02D8                     l2137:
  4722  02D8  30FF               	movlw	255
  4723  02D9  0538               	andwf	___flmul@grs,w
  4724  02DA  00B2               	movwf	??___flmul
  4725  02DB  30FF               	movlw	255
  4726  02DC  0539               	andwf	___flmul@grs+1,w
  4727  02DD  00B3               	movwf	??___flmul+1
  4728  02DE  30FF               	movlw	255
  4729  02DF  053A               	andwf	___flmul@grs+2,w
  4730  02E0  00B4               	movwf	??___flmul+2
  4731  02E1  307F               	movlw	127
  4732  02E2  053B               	andwf	___flmul@grs+3,w
  4733  02E3  00B5               	movwf	??___flmul+3
  4734  02E4  0835               	movf	??___flmul+3,w
  4735  02E5  0434               	iorwf	??___flmul+2,w
  4736  02E6  0433               	iorwf	??___flmul+1,w
  4737  02E7  0432               	iorwf	??___flmul,w
  4738  02E8  1903               	skipnz
  4739  02E9  2AEB               	goto	u3231
  4740  02EA  2AEC               	goto	u3230
  4741  02EB                     u3231:
  4742  02EB  2AEF               	goto	l670
  4743  02EC                     u3230:
  4744  02EC                     l2139:
  4745  02EC  01BC               	clrf	___flmul@aexp
  4746  02ED  0ABC               	incf	___flmul@aexp,f
  4747  02EE  2AF4               	goto	l2143
  4748  02EF                     l670:
  4749  02EF  1C3E               	btfss	___flmul@prod,0
  4750  02F0  2AF2               	goto	u3241
  4751  02F1  2AF3               	goto	u3240
  4752  02F2                     u3241:
  4753  02F2  2AF4               	goto	l2143
  4754  02F3                     u3240:
  4755  02F3  2AEC               	goto	l2139
  4756  02F4                     l2143:
  4757  02F4  083C               	movf	___flmul@aexp,w
  4758  02F5  1903               	btfsc	3,2
  4759  02F6  2AF8               	goto	u3251
  4760  02F7  2AF9               	goto	u3250
  4761  02F8                     u3251:
  4762  02F8  2B2A               	goto	l2153
  4763  02F9                     u3250:
  4764  02F9                     l2145:
  4765  02F9  3001               	movlw	1
  4766  02FA  07BE               	addwf	___flmul@prod,f
  4767  02FB  3000               	movlw	0
  4768  02FC  1803               	skipnc
  4769  02FD  3001               	movlw	1
  4770  02FE  07BF               	addwf	___flmul@prod+1,f
  4771  02FF  3000               	movlw	0
  4772  0300  1803               	skipnc
  4773  0301  3001               	movlw	1
  4774  0302  07C0               	addwf	___flmul@prod+2,f
  4775  0303  3000               	movlw	0
  4776  0304  1803               	skipnc
  4777  0305  3001               	movlw	1
  4778  0306  07C1               	addwf	___flmul@prod+3,f
  4779  0307                     l2147:
  4780  0307  1C41               	btfss	___flmul@prod+3,0
  4781  0308  2B0A               	goto	u3261
  4782  0309  2B0B               	goto	u3260
  4783  030A                     u3261:
  4784  030A  2B2A               	goto	l2153
  4785  030B                     u3260:
  4786  030B                     l2149:
  4787  030B  083E               	movf	___flmul@prod,w
  4788  030C  00B2               	movwf	??___flmul
  4789  030D  083F               	movf	___flmul@prod+1,w
  4790  030E  00B3               	movwf	??___flmul+1
  4791  030F  0840               	movf	___flmul@prod+2,w
  4792  0310  00B4               	movwf	??___flmul+2
  4793  0311  0841               	movf	___flmul@prod+3,w
  4794  0312  00B5               	movwf	??___flmul+3
  4795  0313  3001               	movlw	1
  4796  0314  00B6               	movwf	??___flmul+4
  4797  0315                     u3275:
  4798  0315  0D35               	rlf	??___flmul+3,w
  4799  0316  0CB5               	rrf	??___flmul+3,f
  4800  0317  0CB4               	rrf	??___flmul+2,f
  4801  0318  0CB3               	rrf	??___flmul+1,f
  4802  0319  0CB2               	rrf	??___flmul,f
  4803  031A                     u3270:
  4804  031A  0BB6               	decfsz	??___flmul+4,f
  4805  031B  2B15               	goto	u3275
  4806  031C  0835               	movf	??___flmul+3,w
  4807  031D  00C1               	movwf	___flmul@prod+3
  4808  031E  0834               	movf	??___flmul+2,w
  4809  031F  00C0               	movwf	___flmul@prod+2
  4810  0320  0833               	movf	??___flmul+1,w
  4811  0321  00BF               	movwf	___flmul@prod+1
  4812  0322  0832               	movf	??___flmul,w
  4813  0323  00BE               	movwf	___flmul@prod
  4814  0324                     l2151:
  4815  0324  3001               	movlw	1
  4816  0325  07C2               	addwf	___flmul@temp,f
  4817  0326  1803               	skipnc
  4818  0327  0AC3               	incf	___flmul@temp+1,f
  4819  0328  3000               	movlw	0
  4820  0329  07C3               	addwf	___flmul@temp+1,f
  4821  032A                     l2153:
  4822  032A  0843               	movf	___flmul@temp+1,w
  4823  032B  3A80               	xorlw	128
  4824  032C  00FF               	movwf	btemp+1
  4825  032D  3080               	movlw	128
  4826  032E  027F               	subwf	btemp+1,w
  4827  032F  1D03               	skipz
  4828  0330  2B33               	goto	u3285
  4829  0331  30FF               	movlw	255
  4830  0332  0242               	subwf	___flmul@temp,w
  4831  0333                     u3285:
  4832  0333  1C03               	skipc
  4833  0334  2B36               	goto	u3281
  4834  0335  2B37               	goto	u3280
  4835  0336                     u3281:
  4836  0336  2B42               	goto	l2157
  4837  0337                     u3280:
  4838  0337                     l2155:
  4839  0337  307F               	movlw	127
  4840  0338  1283               	bcf	3,5	;RP0=0, select bank0
  4841  0339  1303               	bcf	3,6	;RP1=0, select bank0
  4842  033A  00C1               	movwf	___flmul@prod+3
  4843  033B  3080               	movlw	128
  4844  033C  00C0               	movwf	___flmul@prod+2
  4845  033D  3000               	movlw	0
  4846  033E  00BF               	movwf	___flmul@prod+1
  4847  033F  3000               	movlw	0
  4848  0340  00BE               	movwf	___flmul@prod
  4849  0341  2B77               	goto	l676
  4850  0342                     l2157:
  4851  0342  1283               	bcf	3,5	;RP0=0, select bank0
  4852  0343  1303               	bcf	3,6	;RP1=0, select bank0
  4853  0344  0843               	movf	___flmul@temp+1,w
  4854  0345  3A80               	xorlw	128
  4855  0346  00FF               	movwf	btemp+1
  4856  0347  3080               	movlw	128
  4857  0348  027F               	subwf	btemp+1,w
  4858  0349  1D03               	skipz
  4859  034A  2B4D               	goto	u3295
  4860  034B  3001               	movlw	1
  4861  034C  0242               	subwf	___flmul@temp,w
  4862  034D                     u3295:
  4863  034D  1803               	skipnc
  4864  034E  2B50               	goto	u3291
  4865  034F  2B51               	goto	u3290
  4866  0350                     u3291:
  4867  0350  2B5D               	goto	l2163
  4868  0351                     u3290:
  4869  0351                     l2159:
  4870  0351  3000               	movlw	0
  4871  0352  1283               	bcf	3,5	;RP0=0, select bank0
  4872  0353  1303               	bcf	3,6	;RP1=0, select bank0
  4873  0354  00C1               	movwf	___flmul@prod+3
  4874  0355  3000               	movlw	0
  4875  0356  00C0               	movwf	___flmul@prod+2
  4876  0357  3000               	movlw	0
  4877  0358  00BF               	movwf	___flmul@prod+1
  4878  0359  3000               	movlw	0
  4879  035A  00BE               	movwf	___flmul@prod
  4880  035B                     l2161:
  4881  035B  01B7               	clrf	___flmul@sign
  4882  035C  2B77               	goto	l676
  4883  035D                     l2163:
  4884  035D  1283               	bcf	3,5	;RP0=0, select bank0
  4885  035E  1303               	bcf	3,6	;RP1=0, select bank0
  4886  035F  0842               	movf	___flmul@temp,w
  4887  0360  00B2               	movwf	??___flmul
  4888  0361  0832               	movf	??___flmul,w
  4889  0362  00BD               	movwf	___flmul@bexp
  4890  0363  30FF               	movlw	255
  4891  0364  05BE               	andwf	___flmul@prod,f
  4892  0365  30FF               	movlw	255
  4893  0366  05BF               	andwf	___flmul@prod+1,f
  4894  0367  307F               	movlw	127
  4895  0368  05C0               	andwf	___flmul@prod+2,f
  4896  0369  3000               	movlw	0
  4897  036A  05C1               	andwf	___flmul@prod+3,f
  4898  036B                     l2165:
  4899  036B  1C3D               	btfss	___flmul@bexp,0
  4900  036C  2B6E               	goto	u3301
  4901  036D  2B6F               	goto	u3300
  4902  036E                     u3301:
  4903  036E  2B70               	goto	l2169
  4904  036F                     u3300:
  4905  036F                     l2167:
  4906  036F  17C0               	bsf	___flmul@prod+2,7
  4907  0370                     l2169:
  4908  0370  083D               	movf	___flmul@bexp,w
  4909  0371  00B2               	movwf	??___flmul
  4910  0372  1003               	clrc
  4911  0373  0C32               	rrf	??___flmul,w
  4912  0374  00B3               	movwf	??___flmul+1
  4913  0375  0833               	movf	??___flmul+1,w
  4914  0376  00C1               	movwf	___flmul@prod+3
  4915  0377                     l676:
  4916  0377  0837               	movf	___flmul@sign,w
  4917  0378  00B2               	movwf	??___flmul
  4918  0379  0832               	movf	??___flmul,w
  4919  037A  04C1               	iorwf	___flmul@prod+3,f
  4920  037B                     l2171:
  4921  037B  0841               	movf	___flmul@prod+3,w
  4922  037C  00AD               	movwf	?___flmul+3
  4923  037D  0840               	movf	___flmul@prod+2,w
  4924  037E  00AC               	movwf	?___flmul+2
  4925  037F  083F               	movf	___flmul@prod+1,w
  4926  0380  00AB               	movwf	?___flmul+1
  4927  0381  083E               	movf	___flmul@prod,w
  4928  0382  00AA               	movwf	?___flmul
  4929  0383                     l664:
  4930  0383  0008               	return
  4931  0384                     __end_of___flmul:
  4932                           
  4933                           	psect	text13
  4934  0ACF                     __ptext13:	
  4935 ;; *************** function __Umul8_16 *****************
  4936 ;; Defined at:
  4937 ;;		line 4 in file "D:\programas\xc8\pic\sources\c90\common\Umul8_16.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  multiplier      1    wreg     unsigned char 
  4940 ;;  multiplicand    1    5[COMMON] unsigned char 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  multiplier      1    4[BANK0 ] unsigned char 
  4943 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  4944 ;;  product         2    0[BANK0 ] unsigned int 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  2    5[COMMON] unsigned int 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4954 ;;      Params:         2       0       0       0       0
  4955 ;;      Locals:         0       5       0       0       0
  4956 ;;      Temps:          2       0       0       0       0
  4957 ;;      Totals:         4       5       0       0       0
  4958 ;;Total ram usage:        9 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    2
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		___flmul
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           
  4969                           ;psect for function __Umul8_16
  4970  0ACF                     __Umul8_16:
  4971                           
  4972                           ;incstack = 0
  4973                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4974                           ;__Umul8_16@multiplier stored from wreg
  4975  0ACF  1283               	bcf	3,5	;RP0=0, select bank0
  4976  0AD0  1303               	bcf	3,6	;RP1=0, select bank0
  4977  0AD1  00A4               	movwf	__Umul8_16@multiplier
  4978  0AD2                     l1831:
  4979  0AD2  01A0               	clrf	__Umul8_16@product
  4980  0AD3  01A1               	clrf	__Umul8_16@product+1
  4981  0AD4                     l1833:
  4982  0AD4  0875               	movf	__Umul8_16@multiplicand,w
  4983  0AD5  00F7               	movwf	??__Umul8_16
  4984  0AD6  01F8               	clrf	??__Umul8_16+1
  4985  0AD7  0877               	movf	??__Umul8_16,w
  4986  0AD8  00A2               	movwf	__Umul8_16@word_mpld
  4987  0AD9  0878               	movf	??__Umul8_16+1,w
  4988  0ADA  00A3               	movwf	__Umul8_16@word_mpld+1
  4989  0ADB                     l1835:
  4990  0ADB  1C24               	btfss	__Umul8_16@multiplier,0
  4991  0ADC  2ADE               	goto	u2521
  4992  0ADD  2ADF               	goto	u2520
  4993  0ADE                     u2521:
  4994  0ADE  2AE5               	goto	l683
  4995  0ADF                     u2520:
  4996  0ADF                     l1837:
  4997  0ADF  0822               	movf	__Umul8_16@word_mpld,w
  4998  0AE0  07A0               	addwf	__Umul8_16@product,f
  4999  0AE1  1803               	skipnc
  5000  0AE2  0AA1               	incf	__Umul8_16@product+1,f
  5001  0AE3  0823               	movf	__Umul8_16@word_mpld+1,w
  5002  0AE4  07A1               	addwf	__Umul8_16@product+1,f
  5003  0AE5                     l683:
  5004  0AE5  3001               	movlw	1
  5005  0AE6                     u2535:
  5006  0AE6  1003               	clrc
  5007  0AE7  0DA2               	rlf	__Umul8_16@word_mpld,f
  5008  0AE8  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5009  0AE9  3EFF               	addlw	-1
  5010  0AEA  1D03               	skipz
  5011  0AEB  2AE6               	goto	u2535
  5012  0AEC  1003               	clrc
  5013  0AED  0CA4               	rrf	__Umul8_16@multiplier,f
  5014  0AEE                     l1839:
  5015  0AEE  0824               	movf	__Umul8_16@multiplier,w
  5016  0AEF  1D03               	btfss	3,2
  5017  0AF0  2AF2               	goto	u2541
  5018  0AF1  2AF3               	goto	u2540
  5019  0AF2                     u2541:
  5020  0AF2  2ADB               	goto	l1835
  5021  0AF3                     u2540:
  5022  0AF3                     l1841:
  5023  0AF3  0821               	movf	__Umul8_16@product+1,w
  5024  0AF4  00F6               	movwf	?__Umul8_16+1
  5025  0AF5  0820               	movf	__Umul8_16@product,w
  5026  0AF6  00F5               	movwf	?__Umul8_16
  5027  0AF7                     l685:
  5028  0AF7  0008               	return
  5029  0AF8                     __end_of__Umul8_16:
  5030                           
  5031                           	psect	text14
  5032  0B89                     __ptext14:	
  5033 ;; *************** function _UARTSendString *****************
  5034 ;; Defined at:
  5035 ;;		line 49 in file "UART.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  str             2    6[COMMON] PTR const unsigned char 
  5038 ;;		 -> analogToString@string(5), STR_5(3), STR_3(3), 
  5039 ;;  max_length      1    8[COMMON] const unsigned char 
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;  i               2    3[BANK0 ] int 
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5051 ;;      Params:         3       0       0       0       0
  5052 ;;      Locals:         0       2       0       0       0
  5053 ;;      Temps:          0       3       0       0       0
  5054 ;;      Totals:         3       5       0       0       0
  5055 ;;Total ram usage:        8 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:    3
  5058 ;; This function calls:
  5059 ;;		_UARTSendChar
  5060 ;; This function is called by:
  5061 ;;		_main
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           
  5066                           ;psect for function _UARTSendString
  5067  0B89                     _UARTSendString:
  5068  0B89                     l2341:	
  5069                           ;incstack = 0
  5070                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5071                           
  5072                           
  5073                           ;UART.c: 50:     int i = 0;
  5074  0B89  1283               	bcf	3,5	;RP0=0, select bank0
  5075  0B8A  1303               	bcf	3,6	;RP1=0, select bank0
  5076  0B8B  01A3               	clrf	UARTSendString@i
  5077  0B8C  01A4               	clrf	UARTSendString@i+1
  5078                           
  5079                           ;UART.c: 51:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  5080  0B8D  01A3               	clrf	UARTSendString@i
  5081  0B8E  01A4               	clrf	UARTSendString@i+1
  5082  0B8F  2BB4               	goto	l2347
  5083  0B90                     l2343:
  5084                           
  5085                           ;UART.c: 52:         UARTSendChar(str[i]);
  5086  0B90  0823               	movf	UARTSendString@i,w
  5087  0B91  0776               	addwf	UARTSendString@str,w
  5088  0B92  00A1               	movwf	??_UARTSendString+1
  5089  0B93  0877               	movf	UARTSendString@str+1,w
  5090  0B94  00A0               	movwf	??_UARTSendString
  5091  0B95  1803               	skipnc
  5092  0B96  0AA0               	incf	??_UARTSendString,f
  5093  0B97  1FA3               	btfss	UARTSendString@i,7
  5094  0B98  2B9A               	goto	u3520
  5095  0B99  03A0               	decf	??_UARTSendString,f
  5096  0B9A                     u3520:
  5097  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  5098  0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  5099  0B9C  0820               	movf	??_UARTSendString,w
  5100  0B9D  00A2               	movwf	??_UARTSendString+2
  5101  0B9E  0822               	movf	??_UARTSendString+2,w
  5102  0B9F  00FF               	movwf	btemp+1
  5103  0BA0  0821               	movf	??_UARTSendString+1,w
  5104  0BA1  0084               	movwf	4
  5105  0BA2  120A  158A  2000  120A  158A  	fcall	stringtab
  5106  0BA7  120A  158A  21DD  120A  158A  	fcall	_UARTSendChar
  5107  0BAC                     l2345:
  5108                           
  5109                           ;UART.c: 53:     }
  5110  0BAC  3001               	movlw	1
  5111  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  5112  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  5113  0BAF  07A3               	addwf	UARTSendString@i,f
  5114  0BB0  1803               	skipnc
  5115  0BB1  0AA4               	incf	UARTSendString@i+1,f
  5116  0BB2  3000               	movlw	0
  5117  0BB3  07A4               	addwf	UARTSendString@i+1,f
  5118  0BB4                     l2347:
  5119  0BB4  0824               	movf	UARTSendString@i+1,w
  5120  0BB5  3A80               	xorlw	128
  5121  0BB6  00A0               	movwf	??_UARTSendString
  5122  0BB7  3080               	movlw	128
  5123  0BB8  0220               	subwf	??_UARTSendString,w
  5124  0BB9  1D03               	skipz
  5125  0BBA  2BBD               	goto	u3535
  5126  0BBB  0878               	movf	UARTSendString@max_length,w
  5127  0BBC  0223               	subwf	UARTSendString@i,w
  5128  0BBD                     u3535:
  5129  0BBD  1803               	skipnc
  5130  0BBE  2BC0               	goto	u3531
  5131  0BBF  2BC1               	goto	u3530
  5132  0BC0                     u3531:
  5133  0BC0  2BDF               	goto	l171
  5134  0BC1                     u3530:
  5135  0BC1                     l2349:
  5136  0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  5137  0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  5138  0BC3  0823               	movf	UARTSendString@i,w
  5139  0BC4  0776               	addwf	UARTSendString@str,w
  5140  0BC5  00A1               	movwf	??_UARTSendString+1
  5141  0BC6  0877               	movf	UARTSendString@str+1,w
  5142  0BC7  00A0               	movwf	??_UARTSendString
  5143  0BC8  1803               	skipnc
  5144  0BC9  0AA0               	incf	??_UARTSendString,f
  5145  0BCA  1FA3               	btfss	UARTSendString@i,7
  5146  0BCB  2BCD               	goto	u3540
  5147  0BCC  03A0               	decf	??_UARTSendString,f
  5148  0BCD                     u3540:
  5149  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  5150  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  5151  0BCF  0820               	movf	??_UARTSendString,w
  5152  0BD0  00A2               	movwf	??_UARTSendString+2
  5153  0BD1  0822               	movf	??_UARTSendString+2,w
  5154  0BD2  00FF               	movwf	btemp+1
  5155  0BD3  0821               	movf	??_UARTSendString+1,w
  5156  0BD4  0084               	movwf	4
  5157  0BD5  120A  158A  2000  120A  158A  	fcall	stringtab
  5158  0BDA  3A00               	xorlw	0
  5159  0BDB  1D03               	skipz
  5160  0BDC  2BDE               	goto	u3551
  5161  0BDD  2BDF               	goto	u3550
  5162  0BDE                     u3551:
  5163  0BDE  2B90               	goto	l2343
  5164  0BDF                     u3550:
  5165  0BDF                     l171:
  5166  0BDF  0008               	return
  5167  0BE0                     __end_of_UARTSendString:
  5168                           
  5169                           	psect	text15
  5170  09DD                     __ptext15:	
  5171 ;; *************** function _UARTSendChar *****************
  5172 ;; Defined at:
  5173 ;;		line 39 in file "UART.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  c               1    wreg     const unsigned char 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  c               1    5[COMMON] const unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		wreg
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5187 ;;      Params:         0       0       0       0       0
  5188 ;;      Locals:         1       0       0       0       0
  5189 ;;      Temps:          0       0       0       0       0
  5190 ;;      Totals:         1       0       0       0       0
  5191 ;;Total ram usage:        1 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    2
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_UARTSendString
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           
  5202                           ;psect for function _UARTSendChar
  5203  09DD                     _UARTSendChar:
  5204                           
  5205                           ;incstack = 0
  5206                           ; Regs used in _UARTSendChar: [wreg]
  5207                           ;UARTSendChar@c stored from wreg
  5208  09DD  00F5               	movwf	UARTSendChar@c
  5209  09DE                     l1869:
  5210  09DE                     l160:	
  5211                           ;UART.c: 40:     while (TXSTAbits.TRMT == 0);
  5212                           
  5213  09DE  1683               	bsf	3,5	;RP0=1, select bank1
  5214  09DF  1303               	bcf	3,6	;RP1=0, select bank1
  5215  09E0  1C98               	btfss	24,1	;volatile
  5216  09E1  29E3               	goto	u2551
  5217  09E2  29E4               	goto	u2550
  5218  09E3                     u2551:
  5219  09E3  29DE               	goto	l160
  5220  09E4                     u2550:
  5221  09E4                     l1871:
  5222                           
  5223                           ;UART.c: 41:     TXREG = c;
  5224  09E4  0875               	movf	UARTSendChar@c,w
  5225  09E5  1283               	bcf	3,5	;RP0=0, select bank0
  5226  09E6  1303               	bcf	3,6	;RP1=0, select bank0
  5227  09E7  0099               	movwf	25	;volatile
  5228  09E8                     l163:
  5229  09E8  0008               	return
  5230  09E9                     __end_of_UARTSendChar:
  5231                           
  5232                           	psect	text16
  5233  09F7                     __ptext16:	
  5234 ;; *************** function _UARTReadChar *****************
  5235 ;; Defined at:
  5236 ;;		line 68 in file "UART.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;		None
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;		None
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  1    wreg      unsigned char 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0, pclath, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5250 ;;      Params:         0       0       0       0       0
  5251 ;;      Locals:         0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0
  5253 ;;      Totals:         0       0       0       0       0
  5254 ;;Total ram usage:        0 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    3
  5257 ;; This function calls:
  5258 ;;		_UARTDataReady
  5259 ;; This function is called by:
  5260 ;;		_main
  5261 ;;		_UARTReadString
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           
  5266                           ;psect for function _UARTReadChar
  5267  09F7                     _UARTReadChar:
  5268  09F7                     l2351:	
  5269                           ;incstack = 0
  5270                           ; Regs used in _UARTReadChar: [wreg+status,2+status,0+pclath+cstack]
  5271                           
  5272  09F7                     l2353:	
  5273                           ;UART.c: 69:     while (!UARTDataReady());
  5274                           
  5275  09F7  120A  158A  21D6  120A  158A  	fcall	_UARTDataReady
  5276  09FC  3A00               	xorlw	0
  5277  09FD  1903               	skipnz
  5278  09FE  2A00               	goto	u3561
  5279  09FF  2A01               	goto	u3560
  5280  0A00                     u3561:
  5281  0A00  29F7               	goto	l2353
  5282  0A01                     u3560:
  5283  0A01                     l2355:
  5284                           
  5285                           ;UART.c: 70:     return RCREG;
  5286  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  5287  0A02  1303               	bcf	3,6	;RP1=0, select bank0
  5288  0A03  081A               	movf	26,w	;volatile
  5289  0A04                     l180:
  5290  0A04  0008               	return
  5291  0A05                     __end_of_UARTReadChar:
  5292                           
  5293                           	psect	text17
  5294  09D6                     __ptext17:	
  5295 ;; *************** function _UARTDataReady *****************
  5296 ;; Defined at:
  5297 ;;		line 60 in file "UART.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;		None
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;		None
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      unsigned char 
  5304 ;; Registers used:
  5305 ;;		wreg, status,2, status,0
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5311 ;;      Params:         0       0       0       0       0
  5312 ;;      Locals:         0       0       0       0       0
  5313 ;;      Temps:          1       0       0       0       0
  5314 ;;      Totals:         1       0       0       0       0
  5315 ;;Total ram usage:        1 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    2
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_main
  5322 ;;		_UARTReadChar
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           
  5327                           ;psect for function _UARTDataReady
  5328  09D6                     _UARTDataReady:
  5329  09D6                     l1845:	
  5330                           ;incstack = 0
  5331                           ; Regs used in _UARTDataReady: [wreg+status,2+status,0]
  5332                           
  5333                           
  5334                           ;UART.c: 61:     return PIR1bits.RCIF;
  5335  09D6  1283               	bcf	3,5	;RP0=0, select bank0
  5336  09D7  1303               	bcf	3,6	;RP1=0, select bank0
  5337  09D8  0E0C               	swapf	12,w	;volatile
  5338  09D9  00F5               	movwf	??_UARTDataReady
  5339  09DA  0C75               	rrf	??_UARTDataReady,w
  5340  09DB  3901               	andlw	1
  5341  09DC                     l174:
  5342  09DC  0008               	return
  5343  09DD                     __end_of_UARTDataReady:
  5344                           
  5345                           	psect	text18
  5346  0D6A                     __ptext18:	
  5347 ;; *************** function _UARTInit *****************
  5348 ;; Defined at:
  5349 ;;		line 8 in file "UART.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  baud_rate       4   13[BANK0 ] const unsigned long 
  5352 ;;  BRGH            1   17[BANK0 ] const unsigned char 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;		None
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      void 
  5357 ;; Registers used:
  5358 ;;		wreg, status,2, status,0, pclath, cstack
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5364 ;;      Params:         0       5       0       0       0
  5365 ;;      Locals:         0       0       0       0       0
  5366 ;;      Temps:          0       4       0       0       0
  5367 ;;      Totals:         0       9       0       0       0
  5368 ;;Total ram usage:        9 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    3
  5371 ;; This function calls:
  5372 ;;		___lldiv
  5373 ;; This function is called by:
  5374 ;;		_main
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           
  5379                           ;psect for function _UARTInit
  5380  0D6A                     _UARTInit:
  5381  0D6A                     l2247:	
  5382                           ;incstack = 0
  5383                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  5384                           
  5385                           
  5386                           ;UART.c: 10:     if (BRGH == 0) {
  5387  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  5388  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  5389  0D6C  0831               	movf	UARTInit@BRGH,w
  5390  0D6D  1D03               	btfss	3,2
  5391  0D6E  2D70               	goto	u3451
  5392  0D6F  2D71               	goto	u3450
  5393  0D70                     u3451:
  5394  0D70  2DA0               	goto	l2253
  5395  0D71                     u3450:
  5396  0D71                     l2249:
  5397                           
  5398                           ;UART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  5399  0D71  082D               	movf	UARTInit@baud_rate,w
  5400  0D72  00B2               	movwf	??_UARTInit
  5401  0D73  082E               	movf	UARTInit@baud_rate+1,w
  5402  0D74  00B3               	movwf	??_UARTInit+1
  5403  0D75  082F               	movf	UARTInit@baud_rate+2,w
  5404  0D76  00B4               	movwf	??_UARTInit+2
  5405  0D77  0830               	movf	UARTInit@baud_rate+3,w
  5406  0D78  00B5               	movwf	??_UARTInit+3
  5407  0D79  3006               	movlw	6
  5408  0D7A                     u3465:
  5409  0D7A  1003               	clrc
  5410  0D7B  0DB2               	rlf	??_UARTInit,f
  5411  0D7C  0DB3               	rlf	??_UARTInit+1,f
  5412  0D7D  0DB4               	rlf	??_UARTInit+2,f
  5413  0D7E  0DB5               	rlf	??_UARTInit+3,f
  5414  0D7F                     u3460:
  5415  0D7F  3EFF               	addlw	-1
  5416  0D80  1D03               	skipz
  5417  0D81  2D7A               	goto	u3465
  5418  0D82  0835               	movf	??_UARTInit+3,w
  5419  0D83  00A3               	movwf	___lldiv@divisor+3
  5420  0D84  0834               	movf	??_UARTInit+2,w
  5421  0D85  00A2               	movwf	___lldiv@divisor+2
  5422  0D86  0833               	movf	??_UARTInit+1,w
  5423  0D87  00A1               	movwf	___lldiv@divisor+1
  5424  0D88  0832               	movf	??_UARTInit,w
  5425  0D89  00A0               	movwf	___lldiv@divisor
  5426  0D8A  3000               	movlw	0
  5427  0D8B  00A7               	movwf	___lldiv@dividend+3
  5428  0D8C  303D               	movlw	61
  5429  0D8D  00A6               	movwf	___lldiv@dividend+2
  5430  0D8E  3009               	movlw	9
  5431  0D8F  00A5               	movwf	___lldiv@dividend+1
  5432  0D90  3000               	movlw	0
  5433  0D91  00A4               	movwf	___lldiv@dividend
  5434  0D92  120A  158A  2499  120A  158A  	fcall	___lldiv
  5435  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  5436  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  5437  0D99  0820               	movf	?___lldiv,w
  5438  0D9A  3EFF               	addlw	255
  5439  0D9B  1683               	bsf	3,5	;RP0=1, select bank1
  5440  0D9C  1303               	bcf	3,6	;RP1=0, select bank1
  5441  0D9D  0099               	movwf	25	;volatile
  5442  0D9E                     l2251:
  5443                           
  5444                           ;UART.c: 12:         TXSTAbits.BRGH = 0;
  5445  0D9E  1118               	bcf	24,2	;volatile
  5446                           
  5447                           ;UART.c: 13:     } else {
  5448  0D9F  2DCE               	goto	l2257
  5449  0DA0                     l2253:
  5450                           
  5451                           ;UART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  5452  0DA0  082D               	movf	UARTInit@baud_rate,w
  5453  0DA1  00B2               	movwf	??_UARTInit
  5454  0DA2  082E               	movf	UARTInit@baud_rate+1,w
  5455  0DA3  00B3               	movwf	??_UARTInit+1
  5456  0DA4  082F               	movf	UARTInit@baud_rate+2,w
  5457  0DA5  00B4               	movwf	??_UARTInit+2
  5458  0DA6  0830               	movf	UARTInit@baud_rate+3,w
  5459  0DA7  00B5               	movwf	??_UARTInit+3
  5460  0DA8  3004               	movlw	4
  5461  0DA9                     u3475:
  5462  0DA9  1003               	clrc
  5463  0DAA  0DB2               	rlf	??_UARTInit,f
  5464  0DAB  0DB3               	rlf	??_UARTInit+1,f
  5465  0DAC  0DB4               	rlf	??_UARTInit+2,f
  5466  0DAD  0DB5               	rlf	??_UARTInit+3,f
  5467  0DAE                     u3470:
  5468  0DAE  3EFF               	addlw	-1
  5469  0DAF  1D03               	skipz
  5470  0DB0  2DA9               	goto	u3475
  5471  0DB1  0835               	movf	??_UARTInit+3,w
  5472  0DB2  00A3               	movwf	___lldiv@divisor+3
  5473  0DB3  0834               	movf	??_UARTInit+2,w
  5474  0DB4  00A2               	movwf	___lldiv@divisor+2
  5475  0DB5  0833               	movf	??_UARTInit+1,w
  5476  0DB6  00A1               	movwf	___lldiv@divisor+1
  5477  0DB7  0832               	movf	??_UARTInit,w
  5478  0DB8  00A0               	movwf	___lldiv@divisor
  5479  0DB9  3000               	movlw	0
  5480  0DBA  00A7               	movwf	___lldiv@dividend+3
  5481  0DBB  303D               	movlw	61
  5482  0DBC  00A6               	movwf	___lldiv@dividend+2
  5483  0DBD  3009               	movlw	9
  5484  0DBE  00A5               	movwf	___lldiv@dividend+1
  5485  0DBF  3000               	movlw	0
  5486  0DC0  00A4               	movwf	___lldiv@dividend
  5487  0DC1  120A  158A  2499  120A  158A  	fcall	___lldiv
  5488  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  5489  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  5490  0DC8  0820               	movf	?___lldiv,w
  5491  0DC9  3EFF               	addlw	255
  5492  0DCA  1683               	bsf	3,5	;RP0=1, select bank1
  5493  0DCB  1303               	bcf	3,6	;RP1=0, select bank1
  5494  0DCC  0099               	movwf	25	;volatile
  5495  0DCD                     l2255:
  5496                           
  5497                           ;UART.c: 15:         TXSTAbits.BRGH = 1;
  5498  0DCD  1518               	bsf	24,2	;volatile
  5499  0DCE                     l2257:
  5500                           
  5501                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  5502  0DCE  1318               	bcf	24,6	;volatile
  5503  0DCF                     l2259:
  5504                           
  5505                           ;UART.c: 20:     TXSTAbits.TXEN = 1;
  5506  0DCF  1698               	bsf	24,5	;volatile
  5507  0DD0                     l2261:
  5508                           
  5509                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  5510  0DD0  1218               	bcf	24,4	;volatile
  5511  0DD1                     l2263:
  5512                           
  5513                           ;UART.c: 24:     RCSTAbits.SPEN = 1;
  5514  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  5515  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  5516  0DD3  1798               	bsf	24,7	;volatile
  5517  0DD4                     l2265:
  5518                           
  5519                           ;UART.c: 25:     RCSTAbits.RX9 = 0;
  5520  0DD4  1318               	bcf	24,6	;volatile
  5521  0DD5                     l2267:
  5522                           
  5523                           ;UART.c: 26:     RCSTAbits.CREN = 1;
  5524  0DD5  1618               	bsf	24,4	;volatile
  5525  0DD6                     l2269:
  5526                           
  5527                           ;UART.c: 27:     RCSTAbits.FERR = 0;
  5528  0DD6  1118               	bcf	24,2	;volatile
  5529  0DD7                     l2271:
  5530                           
  5531                           ;UART.c: 28:     RCSTAbits.OERR = 0;
  5532  0DD7  1098               	bcf	24,1	;volatile
  5533  0DD8                     l2273:
  5534                           
  5535                           ;UART.c: 31:     TRISCbits.TRISC7 = 1;
  5536  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  5537  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  5538  0DDA  1787               	bsf	7,7	;volatile
  5539  0DDB                     l2275:
  5540                           
  5541                           ;UART.c: 32:     TRISCbits.TRISC6 = 0;
  5542  0DDB  1307               	bcf	7,6	;volatile
  5543  0DDC                     l157:
  5544  0DDC  0008               	return
  5545  0DDD                     __end_of_UARTInit:
  5546                           
  5547                           	psect	text19
  5548  0C99                     __ptext19:	
  5549 ;; *************** function ___lldiv *****************
  5550 ;; Defined at:
  5551 ;;		line 5 in file "D:\programas\xc8\pic\sources\c90\common\__lldiv.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  divisor         4    0[BANK0 ] unsigned long 
  5554 ;;  dividend        4    4[BANK0 ] unsigned long 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  quotient        4    8[BANK0 ] unsigned long 
  5557 ;;  counter         1   12[BANK0 ] unsigned char 
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  4    0[BANK0 ] unsigned long 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2, status,0
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5567 ;;      Params:         0       8       0       0       0
  5568 ;;      Locals:         0       5       0       0       0
  5569 ;;      Temps:          1       0       0       0       0
  5570 ;;      Totals:         1      13       0       0       0
  5571 ;;Total ram usage:       14 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    2
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_UARTInit
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function ___lldiv
  5583  0C99                     ___lldiv:
  5584  0C99                     l1887:	
  5585                           ;incstack = 0
  5586                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5587                           
  5588  0C99  3000               	movlw	0
  5589  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  5590  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  5591  0C9C  00AB               	movwf	___lldiv@quotient+3
  5592  0C9D  3000               	movlw	0
  5593  0C9E  00AA               	movwf	___lldiv@quotient+2
  5594  0C9F  3000               	movlw	0
  5595  0CA0  00A9               	movwf	___lldiv@quotient+1
  5596  0CA1  3000               	movlw	0
  5597  0CA2  00A8               	movwf	___lldiv@quotient
  5598  0CA3  0823               	movf	___lldiv@divisor+3,w
  5599  0CA4  0422               	iorwf	___lldiv@divisor+2,w
  5600  0CA5  0421               	iorwf	___lldiv@divisor+1,w
  5601  0CA6  0420               	iorwf	___lldiv@divisor,w
  5602  0CA7  1903               	skipnz
  5603  0CA8  2CAA               	goto	u2581
  5604  0CA9  2CAB               	goto	u2580
  5605  0CAA                     u2581:
  5606  0CAA  2CF8               	goto	l1907
  5607  0CAB                     u2580:
  5608  0CAB                     l1889:
  5609  0CAB  01AC               	clrf	___lldiv@counter
  5610  0CAC  0AAC               	incf	___lldiv@counter,f
  5611  0CAD  2CBB               	goto	l1893
  5612  0CAE                     l1891:
  5613  0CAE  3001               	movlw	1
  5614  0CAF  00F5               	movwf	??___lldiv
  5615  0CB0                     u2595:
  5616  0CB0  1003               	clrc
  5617  0CB1  0DA0               	rlf	___lldiv@divisor,f
  5618  0CB2  0DA1               	rlf	___lldiv@divisor+1,f
  5619  0CB3  0DA2               	rlf	___lldiv@divisor+2,f
  5620  0CB4  0DA3               	rlf	___lldiv@divisor+3,f
  5621  0CB5  0BF5               	decfsz	??___lldiv,f
  5622  0CB6  2CB0               	goto	u2595
  5623  0CB7  3001               	movlw	1
  5624  0CB8  00F5               	movwf	??___lldiv
  5625  0CB9  0875               	movf	??___lldiv,w
  5626  0CBA  07AC               	addwf	___lldiv@counter,f
  5627  0CBB                     l1893:
  5628  0CBB  1FA3               	btfss	___lldiv@divisor+3,7
  5629  0CBC  2CBE               	goto	u2601
  5630  0CBD  2CBF               	goto	u2600
  5631  0CBE                     u2601:
  5632  0CBE  2CAE               	goto	l1891
  5633  0CBF                     u2600:
  5634  0CBF                     l1895:
  5635  0CBF  3001               	movlw	1
  5636  0CC0  00F5               	movwf	??___lldiv
  5637  0CC1                     u2615:
  5638  0CC1  1003               	clrc
  5639  0CC2  0DA8               	rlf	___lldiv@quotient,f
  5640  0CC3  0DA9               	rlf	___lldiv@quotient+1,f
  5641  0CC4  0DAA               	rlf	___lldiv@quotient+2,f
  5642  0CC5  0DAB               	rlf	___lldiv@quotient+3,f
  5643  0CC6  0BF5               	decfsz	??___lldiv,f
  5644  0CC7  2CC1               	goto	u2615
  5645  0CC8                     l1897:
  5646  0CC8  0823               	movf	___lldiv@divisor+3,w
  5647  0CC9  0227               	subwf	___lldiv@dividend+3,w
  5648  0CCA  1D03               	skipz
  5649  0CCB  2CD6               	goto	u2625
  5650  0CCC  0822               	movf	___lldiv@divisor+2,w
  5651  0CCD  0226               	subwf	___lldiv@dividend+2,w
  5652  0CCE  1D03               	skipz
  5653  0CCF  2CD6               	goto	u2625
  5654  0CD0  0821               	movf	___lldiv@divisor+1,w
  5655  0CD1  0225               	subwf	___lldiv@dividend+1,w
  5656  0CD2  1D03               	skipz
  5657  0CD3  2CD6               	goto	u2625
  5658  0CD4  0820               	movf	___lldiv@divisor,w
  5659  0CD5  0224               	subwf	___lldiv@dividend,w
  5660  0CD6                     u2625:
  5661  0CD6  1C03               	skipc
  5662  0CD7  2CD9               	goto	u2621
  5663  0CD8  2CDA               	goto	u2620
  5664  0CD9                     u2621:
  5665  0CD9  2CE9               	goto	l1903
  5666  0CDA                     u2620:
  5667  0CDA                     l1899:
  5668  0CDA  0820               	movf	___lldiv@divisor,w
  5669  0CDB  02A4               	subwf	___lldiv@dividend,f
  5670  0CDC  0821               	movf	___lldiv@divisor+1,w
  5671  0CDD  1C03               	skipc
  5672  0CDE  0F21               	incfsz	___lldiv@divisor+1,w
  5673  0CDF  02A5               	subwf	___lldiv@dividend+1,f
  5674  0CE0  0822               	movf	___lldiv@divisor+2,w
  5675  0CE1  1C03               	skipc
  5676  0CE2  0F22               	incfsz	___lldiv@divisor+2,w
  5677  0CE3  02A6               	subwf	___lldiv@dividend+2,f
  5678  0CE4  0823               	movf	___lldiv@divisor+3,w
  5679  0CE5  1C03               	skipc
  5680  0CE6  0F23               	incfsz	___lldiv@divisor+3,w
  5681  0CE7  02A7               	subwf	___lldiv@dividend+3,f
  5682  0CE8                     l1901:
  5683  0CE8  1428               	bsf	___lldiv@quotient,0
  5684  0CE9                     l1903:
  5685  0CE9  3001               	movlw	1
  5686  0CEA                     u2635:
  5687  0CEA  1003               	clrc
  5688  0CEB  0CA3               	rrf	___lldiv@divisor+3,f
  5689  0CEC  0CA2               	rrf	___lldiv@divisor+2,f
  5690  0CED  0CA1               	rrf	___lldiv@divisor+1,f
  5691  0CEE  0CA0               	rrf	___lldiv@divisor,f
  5692  0CEF  3EFF               	addlw	-1
  5693  0CF0  1D03               	skipz
  5694  0CF1  2CEA               	goto	u2635
  5695  0CF2                     l1905:
  5696  0CF2  3001               	movlw	1
  5697  0CF3  02AC               	subwf	___lldiv@counter,f
  5698  0CF4  1D03               	btfss	3,2
  5699  0CF5  2CF7               	goto	u2641
  5700  0CF6  2CF8               	goto	u2640
  5701  0CF7                     u2641:
  5702  0CF7  2CBF               	goto	l1895
  5703  0CF8                     u2640:
  5704  0CF8                     l1907:
  5705  0CF8  082B               	movf	___lldiv@quotient+3,w
  5706  0CF9  00A3               	movwf	?___lldiv+3
  5707  0CFA  082A               	movf	___lldiv@quotient+2,w
  5708  0CFB  00A2               	movwf	?___lldiv+2
  5709  0CFC  0829               	movf	___lldiv@quotient+1,w
  5710  0CFD  00A1               	movwf	?___lldiv+1
  5711  0CFE  0828               	movf	___lldiv@quotient,w
  5712  0CFF  00A0               	movwf	?___lldiv
  5713  0D00                     l311:
  5714  0D00  0008               	return
  5715  0D01                     __end_of___lldiv:
  5716                           
  5717                           	psect	text20
  5718  0AF8                     __ptext20:	
  5719 ;; *************** function _LcdWriteString *****************
  5720 ;; Defined at:
  5721 ;;		line 64 in file "LCD8bits.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  value           2    0[BANK0 ] PTR const unsigned char 
  5724 ;;		 -> intToString@valor(4), analogToString@string(5), STR_4(3), STR_2(3), 
  5725 ;;		 -> STR_1(16), 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  i               2    5[BANK0 ] int 
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  1    wreg      void 
  5730 ;; Registers used:
  5731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5737 ;;      Params:         0       2       0       0       0
  5738 ;;      Locals:         0       2       0       0       0
  5739 ;;      Temps:          0       3       0       0       0
  5740 ;;      Totals:         0       7       0       0       0
  5741 ;;Total ram usage:        7 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; Hardware stack levels required when called:    4
  5744 ;; This function calls:
  5745 ;;		_LcdWriteChar
  5746 ;; This function is called by:
  5747 ;;		_main
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           
  5752                           ;psect for function _LcdWriteString
  5753  0AF8                     _LcdWriteString:
  5754  0AF8                     l2303:	
  5755                           ;incstack = 0
  5756                           ; Regs used in _LcdWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5757                           
  5758                           
  5759                           ;LCD8bits.c: 66:     for (int i = 0; value[i] != '\0'; i++)
  5760  0AF8  1283               	bcf	3,5	;RP0=0, select bank0
  5761  0AF9  1303               	bcf	3,6	;RP1=0, select bank0
  5762  0AFA  01A5               	clrf	LcdWriteString@i
  5763  0AFB  01A6               	clrf	LcdWriteString@i+1
  5764  0AFC  2B21               	goto	l2309
  5765  0AFD                     l2305:
  5766                           
  5767                           ;LCD8bits.c: 67:         LcdWriteChar(value[i]);
  5768  0AFD  0825               	movf	LcdWriteString@i,w
  5769  0AFE  0720               	addwf	LcdWriteString@value,w
  5770  0AFF  00A3               	movwf	??_LcdWriteString+1
  5771  0B00  0821               	movf	LcdWriteString@value+1,w
  5772  0B01  00A2               	movwf	??_LcdWriteString
  5773  0B02  1803               	skipnc
  5774  0B03  0AA2               	incf	??_LcdWriteString,f
  5775  0B04  1FA5               	btfss	LcdWriteString@i,7
  5776  0B05  2B07               	goto	u3490
  5777  0B06  03A2               	decf	??_LcdWriteString,f
  5778  0B07                     u3490:
  5779  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5780  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5781  0B09  0822               	movf	??_LcdWriteString,w
  5782  0B0A  00A4               	movwf	??_LcdWriteString+2
  5783  0B0B  0824               	movf	??_LcdWriteString+2,w
  5784  0B0C  00FF               	movwf	btemp+1
  5785  0B0D  0823               	movf	??_LcdWriteString+1,w
  5786  0B0E  0084               	movwf	4
  5787  0B0F  120A  158A  2000  120A  158A  	fcall	stringtab
  5788  0B14  120A  158A  222A  120A  158A  	fcall	_LcdWriteChar
  5789  0B19                     l2307:
  5790  0B19  3001               	movlw	1
  5791  0B1A  1283               	bcf	3,5	;RP0=0, select bank0
  5792  0B1B  1303               	bcf	3,6	;RP1=0, select bank0
  5793  0B1C  07A5               	addwf	LcdWriteString@i,f
  5794  0B1D  1803               	skipnc
  5795  0B1E  0AA6               	incf	LcdWriteString@i+1,f
  5796  0B1F  3000               	movlw	0
  5797  0B20  07A6               	addwf	LcdWriteString@i+1,f
  5798  0B21                     l2309:
  5799  0B21  0825               	movf	LcdWriteString@i,w
  5800  0B22  0720               	addwf	LcdWriteString@value,w
  5801  0B23  00A3               	movwf	??_LcdWriteString+1
  5802  0B24  0821               	movf	LcdWriteString@value+1,w
  5803  0B25  00A2               	movwf	??_LcdWriteString
  5804  0B26  1803               	skipnc
  5805  0B27  0AA2               	incf	??_LcdWriteString,f
  5806  0B28  1FA5               	btfss	LcdWriteString@i,7
  5807  0B29  2B2B               	goto	u3500
  5808  0B2A  03A2               	decf	??_LcdWriteString,f
  5809  0B2B                     u3500:
  5810  0B2B  1283               	bcf	3,5	;RP0=0, select bank0
  5811  0B2C  1303               	bcf	3,6	;RP1=0, select bank0
  5812  0B2D  0822               	movf	??_LcdWriteString,w
  5813  0B2E  00A4               	movwf	??_LcdWriteString+2
  5814  0B2F  0824               	movf	??_LcdWriteString+2,w
  5815  0B30  00FF               	movwf	btemp+1
  5816  0B31  0823               	movf	??_LcdWriteString+1,w
  5817  0B32  0084               	movwf	4
  5818  0B33  120A  158A  2000  120A  158A  	fcall	stringtab
  5819  0B38  3A00               	xorlw	0
  5820  0B39  1D03               	skipz
  5821  0B3A  2B3C               	goto	u3511
  5822  0B3B  2B3D               	goto	u3510
  5823  0B3C                     u3511:
  5824  0B3C  2AFD               	goto	l2305
  5825  0B3D                     u3510:
  5826  0B3D                     l132:
  5827  0B3D  0008               	return
  5828  0B3E                     __end_of_LcdWriteString:
  5829                           
  5830                           	psect	text21
  5831  0A2A                     __ptext21:	
  5832 ;; *************** function _LcdWriteChar *****************
  5833 ;; Defined at:
  5834 ;;		line 56 in file "LCD8bits.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  value           1    wreg     unsigned char 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  value           1    8[COMMON] unsigned char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      void 
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, status,0, pclath, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5848 ;;      Params:         0       0       0       0       0
  5849 ;;      Locals:         1       0       0       0       0
  5850 ;;      Temps:          1       0       0       0       0
  5851 ;;      Totals:         2       0       0       0       0
  5852 ;;Total ram usage:        2 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    3
  5855 ;; This function calls:
  5856 ;;		_LcdPort
  5857 ;; This function is called by:
  5858 ;;		_LcdWriteString
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           
  5863                           ;psect for function _LcdWriteChar
  5864  0A2A                     _LcdWriteChar:
  5865                           
  5866                           ;incstack = 0
  5867                           ; Regs used in _LcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  5868                           ;LcdWriteChar@value stored from wreg
  5869  0A2A  00F8               	movwf	LcdWriteChar@value
  5870  0A2B                     l1859:
  5871                           
  5872                           ;LCD8bits.c: 57:     RE2 = 1;
  5873  0A2B  1283               	bcf	3,5	;RP0=0, select bank0
  5874  0A2C  1303               	bcf	3,6	;RP1=0, select bank0
  5875  0A2D  1509               	bsf	9,2	;volatile
  5876  0A2E                     l1861:
  5877                           
  5878                           ;LCD8bits.c: 58:     LcdPort(value);
  5879  0A2E  0878               	movf	LcdWriteChar@value,w
  5880  0A2F  120A  158A  2659  120A  158A  	fcall	_LcdPort
  5881  0A34                     l1863:
  5882                           
  5883                           ;LCD8bits.c: 59:     RE0 = 1;
  5884  0A34  1283               	bcf	3,5	;RP0=0, select bank0
  5885  0A35  1303               	bcf	3,6	;RP1=0, select bank0
  5886  0A36  1409               	bsf	9,0	;volatile
  5887  0A37                     l1865:
  5888                           
  5889                           ;LCD8bits.c: 60:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5890  0A37  300D               	movlw	13
  5891  0A38  00F7               	movwf	??_LcdWriteChar
  5892  0A39                     u3657:
  5893  0A39  0BF7               	decfsz	??_LcdWriteChar,f
  5894  0A3A  2A39               	goto	u3657
  5895  0A3B                     l1867:
  5896                           
  5897                           ;LCD8bits.c: 61:     RE0 = 0;
  5898  0A3B  1283               	bcf	3,5	;RP0=0, select bank0
  5899  0A3C  1303               	bcf	3,6	;RP1=0, select bank0
  5900  0A3D  1009               	bcf	9,0	;volatile
  5901  0A3E                     l126:
  5902  0A3E  0008               	return
  5903  0A3F                     __end_of_LcdWriteChar:
  5904                           
  5905                           	psect	text22
  5906  0AAA                     __ptext22:	
  5907 ;; *************** function _LcdSetCursor *****************
  5908 ;; Defined at:
  5909 ;;		line 29 in file "LCD8bits.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  row             1    wreg     unsigned char 
  5912 ;;  column          1    1[BANK0 ] unsigned char 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  row             1    4[BANK0 ] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1    wreg      void 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5924 ;;      Params:         0       1       0       0       0
  5925 ;;      Locals:         0       1       0       0       0
  5926 ;;      Temps:          0       2       0       0       0
  5927 ;;      Totals:         0       4       0       0       0
  5928 ;;Total ram usage:        4 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    4
  5931 ;; This function calls:
  5932 ;;		_LcdCmd
  5933 ;; This function is called by:
  5934 ;;		_main
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           
  5939                           ;psect for function _LcdSetCursor
  5940  0AAA                     _LcdSetCursor:
  5941                           
  5942                           ;incstack = 0
  5943                           ; Regs used in _LcdSetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5944                           ;LcdSetCursor@row stored from wreg
  5945  0AAA  1283               	bcf	3,5	;RP0=0, select bank0
  5946  0AAB  1303               	bcf	3,6	;RP1=0, select bank0
  5947  0AAC  00A4               	movwf	LcdSetCursor@row
  5948  0AAD                     l2287:
  5949                           
  5950                           ;LCD8bits.c: 30:     switch(row){
  5951  0AAD  2ABE               	goto	l2295
  5952  0AAE                     l2289:
  5953                           
  5954                           ;LCD8bits.c: 32:             LcdCmd(0x80 + column - 1);
  5955  0AAE  0821               	movf	LcdSetCursor@column,w
  5956  0AAF  3E7F               	addlw	127
  5957  0AB0  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  5958                           
  5959                           ;LCD8bits.c: 33:             break;
  5960  0AB5  2ACE               	goto	l120
  5961  0AB6                     l2291:
  5962                           
  5963                           ;LCD8bits.c: 35:             LcdCmd(0xC0 + column - 1);
  5964  0AB6  0821               	movf	LcdSetCursor@column,w
  5965  0AB7  3EBF               	addlw	191
  5966  0AB8  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  5967                           
  5968                           ;LCD8bits.c: 36:             break;
  5969  0ABD  2ACE               	goto	l120
  5970  0ABE                     l2295:
  5971  0ABE  0824               	movf	LcdSetCursor@row,w
  5972  0ABF  00A2               	movwf	??_LcdSetCursor
  5973  0AC0  01A3               	clrf	??_LcdSetCursor+1
  5974                           
  5975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5976                           ; Switch size 1, requested type "simple"
  5977                           ; Number of cases is 1, Range of values is 0 to 0
  5978                           ; switch strategies available:
  5979                           ; Name         Instructions Cycles
  5980                           ; simple_byte            4     3 (average)
  5981                           ; direct_byte           11     8 (fixed)
  5982                           ; jumptable            260     6 (fixed)
  5983                           ;	Chosen strategy is simple_byte
  5984  0AC1  0823               	movf	??_LcdSetCursor+1,w
  5985  0AC2  3A00               	xorlw	0	; case 0
  5986  0AC3  1903               	skipnz
  5987  0AC4  2AC6               	goto	l2497
  5988  0AC5  2ACE               	goto	l120
  5989  0AC6                     l2497:
  5990                           
  5991                           ; Switch size 1, requested type "simple"
  5992                           ; Number of cases is 2, Range of values is 1 to 2
  5993                           ; switch strategies available:
  5994                           ; Name         Instructions Cycles
  5995                           ; simple_byte            7     4 (average)
  5996                           ; direct_byte           17    11 (fixed)
  5997                           ; jumptable            263     9 (fixed)
  5998                           ;	Chosen strategy is simple_byte
  5999  0AC6  0822               	movf	??_LcdSetCursor,w
  6000  0AC7  3A01               	xorlw	1	; case 1
  6001  0AC8  1903               	skipnz
  6002  0AC9  2AAE               	goto	l2289
  6003  0ACA  3A03               	xorlw	3	; case 2
  6004  0ACB  1903               	skipnz
  6005  0ACC  2AB6               	goto	l2291
  6006  0ACD  2ACE               	goto	l120
  6007  0ACE                     l120:
  6008  0ACE  0008               	return
  6009  0ACF                     __end_of_LcdSetCursor:
  6010                           
  6011                           	psect	text23
  6012  0B3E                     __ptext23:	
  6013 ;; *************** function _LcdInit *****************
  6014 ;; Defined at:
  6015 ;;		line 41 in file "LCD8bits.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;		None
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;		None
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      void 
  6022 ;; Registers used:
  6023 ;;		wreg, status,2, status,0, pclath, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6029 ;;      Params:         0       0       0       0       0
  6030 ;;      Locals:         0       0       0       0       0
  6031 ;;      Temps:          0       2       0       0       0
  6032 ;;      Totals:         0       2       0       0       0
  6033 ;;Total ram usage:        2 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; Hardware stack levels required when called:    4
  6036 ;; This function calls:
  6037 ;;		_LcdCmd
  6038 ;;		_LcdPort
  6039 ;; This function is called by:
  6040 ;;		_main
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           
  6045                           ;psect for function _LcdInit
  6046  0B3E                     _LcdInit:
  6047  0B3E                     l2219:	
  6048                           ;incstack = 0
  6049                           ; Regs used in _LcdInit: [wreg+status,2+status,0+pclath+cstack]
  6050                           
  6051                           
  6052                           ;LCD8bits.c: 42:     LcdPort(0x00);
  6053  0B3E  3000               	movlw	0
  6054  0B3F  120A  158A  2659  120A  158A  	fcall	_LcdPort
  6055  0B44                     l2221:
  6056                           
  6057                           ;LCD8bits.c: 43:     _delay((unsigned long)((20)*(4000000/4000.0)));
  6058  0B44  301A               	movlw	26
  6059  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  6060  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  6061  0B47  00A2               	movwf	??_LcdInit+1
  6062  0B48  30F7               	movlw	247
  6063  0B49  00A1               	movwf	??_LcdInit
  6064  0B4A                     u3667:
  6065  0B4A  0BA1               	decfsz	??_LcdInit,f
  6066  0B4B  2B4A               	goto	u3667
  6067  0B4C  0BA2               	decfsz	??_LcdInit+1,f
  6068  0B4D  2B4A               	goto	u3667
  6069  0B4E  2B4F               	nop2
  6070  0B4F                     l2223:
  6071                           
  6072                           ;LCD8bits.c: 44:     LcdCmd(0x30);
  6073  0B4F  3030               	movlw	48
  6074  0B50  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  6075                           
  6076                           ;LCD8bits.c: 45:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6077  0B55  3007               	movlw	7
  6078  0B56  1283               	bcf	3,5	;RP0=0, select bank0
  6079  0B57  1303               	bcf	3,6	;RP1=0, select bank0
  6080  0B58  00A2               	movwf	??_LcdInit+1
  6081  0B59  307C               	movlw	124
  6082  0B5A  00A1               	movwf	??_LcdInit
  6083  0B5B                     u3677:
  6084  0B5B  0BA1               	decfsz	??_LcdInit,f
  6085  0B5C  2B5B               	goto	u3677
  6086  0B5D  0BA2               	decfsz	??_LcdInit+1,f
  6087  0B5E  2B5B               	goto	u3677
  6088  0B5F  0000               	nop
  6089  0B60                     l2225:
  6090                           
  6091                           ;LCD8bits.c: 46:     LcdCmd(0x30);
  6092  0B60  3030               	movlw	48
  6093  0B61  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  6094  0B66                     l2227:
  6095                           
  6096                           ;LCD8bits.c: 47:     _delay((unsigned long)((11)*(4000000/4000.0)));
  6097  0B66  300F               	movlw	15
  6098  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  6099  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  6100  0B69  00A2               	movwf	??_LcdInit+1
  6101  0B6A  3047               	movlw	71
  6102  0B6B  00A1               	movwf	??_LcdInit
  6103  0B6C                     u3687:
  6104  0B6C  0BA1               	decfsz	??_LcdInit,f
  6105  0B6D  2B6C               	goto	u3687
  6106  0B6E  0BA2               	decfsz	??_LcdInit+1,f
  6107  0B6F  2B6C               	goto	u3687
  6108                           
  6109                           ;LCD8bits.c: 48:     LcdCmd(0x30);
  6110  0B70  3030               	movlw	48
  6111  0B71  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  6112                           
  6113                           ;LCD8bits.c: 50:     LcdCmd(0x38);
  6114  0B76  3038               	movlw	56
  6115  0B77  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  6116                           
  6117                           ;LCD8bits.c: 51:     LcdCmd(0x0C);
  6118  0B7C  300C               	movlw	12
  6119  0B7D  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  6120                           
  6121                           ;LCD8bits.c: 52:     LcdCmd(0x6);
  6122  0B82  3006               	movlw	6
  6123  0B83  120A  158A  226C  120A  158A  	fcall	_LcdCmd
  6124  0B88                     l123:
  6125  0B88  0008               	return
  6126  0B89                     __end_of_LcdInit:
  6127                           
  6128                           	psect	text24
  6129  0A6C                     __ptext24:	
  6130 ;; *************** function _LcdCmd *****************
  6131 ;; Defined at:
  6132 ;;		line 16 in file "LCD8bits.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;  value           1    wreg     unsigned char 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;  value           1    0[BANK0 ] unsigned char 
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  1    wreg      void 
  6139 ;; Registers used:
  6140 ;;		wreg, status,2, status,0, pclath, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6146 ;;      Params:         0       0       0       0       0
  6147 ;;      Locals:         0       1       0       0       0
  6148 ;;      Temps:          2       0       0       0       0
  6149 ;;      Totals:         2       1       0       0       0
  6150 ;;Total ram usage:        3 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:    3
  6153 ;; This function calls:
  6154 ;;		_LcdPort
  6155 ;; This function is called by:
  6156 ;;		_LcdSetCursor
  6157 ;;		_LcdInit
  6158 ;;		_LcdClear
  6159 ;;		_LcdShiftRight
  6160 ;;		_LcdShiftLeft
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           
  6165                           ;psect for function _LcdCmd
  6166  0A6C                     _LcdCmd:
  6167                           
  6168                           ;incstack = 0
  6169                           ; Regs used in _LcdCmd: [wreg+status,2+status,0+pclath+cstack]
  6170                           ;LcdCmd@value stored from wreg
  6171  0A6C  1283               	bcf	3,5	;RP0=0, select bank0
  6172  0A6D  1303               	bcf	3,6	;RP1=0, select bank0
  6173  0A6E  00A0               	movwf	LcdCmd@value
  6174  0A6F                     l1849:
  6175                           
  6176                           ;LCD8bits.c: 17:     RE2 = 0;
  6177  0A6F  1109               	bcf	9,2	;volatile
  6178  0A70                     l1851:
  6179                           
  6180                           ;LCD8bits.c: 18:     LcdPort(value);
  6181  0A70  0820               	movf	LcdCmd@value,w
  6182  0A71  120A  158A  2659  120A  158A  	fcall	_LcdPort
  6183  0A76                     l1853:
  6184                           
  6185                           ;LCD8bits.c: 19:     RE0 = 1;
  6186  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  6187  0A77  1303               	bcf	3,6	;RP1=0, select bank0
  6188  0A78  1409               	bsf	9,0	;volatile
  6189  0A79                     l1855:
  6190                           
  6191                           ;LCD8bits.c: 20:     _delay((unsigned long)((4)*(4000000/4000.0)));
  6192  0A79  3006               	movlw	6
  6193  0A7A  00F8               	movwf	??_LcdCmd+1
  6194  0A7B  3030               	movlw	48
  6195  0A7C  00F7               	movwf	??_LcdCmd
  6196  0A7D                     u3697:
  6197  0A7D  0BF7               	decfsz	??_LcdCmd,f
  6198  0A7E  2A7D               	goto	u3697
  6199  0A7F  0BF8               	decfsz	??_LcdCmd+1,f
  6200  0A80  2A7D               	goto	u3697
  6201  0A81  0000               	nop
  6202  0A82                     l1857:
  6203                           
  6204                           ;LCD8bits.c: 21:     RE0 = 0;
  6205  0A82  1283               	bcf	3,5	;RP0=0, select bank0
  6206  0A83  1303               	bcf	3,6	;RP1=0, select bank0
  6207  0A84  1009               	bcf	9,0	;volatile
  6208  0A85                     l110:
  6209  0A85  0008               	return
  6210  0A86                     __end_of_LcdCmd:
  6211                           
  6212                           	psect	text25
  6213  0E59                     __ptext25:	
  6214 ;; *************** function _LcdPort *****************
  6215 ;; Defined at:
  6216 ;;		line 3 in file "LCD8bits.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  value           1    wreg     unsigned char 
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;  value           1    6[COMMON] unsigned char 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      void 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6230 ;;      Params:         0       0       0       0       0
  6231 ;;      Locals:         1       0       0       0       0
  6232 ;;      Temps:          1       0       0       0       0
  6233 ;;      Totals:         2       0       0       0       0
  6234 ;;Total ram usage:        2 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    2
  6237 ;; This function calls:
  6238 ;;		Nothing
  6239 ;; This function is called by:
  6240 ;;		_LcdCmd
  6241 ;;		_LcdInit
  6242 ;;		_LcdWriteChar
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           
  6247                           ;psect for function _LcdPort
  6248  0E59                     _LcdPort:
  6249                           
  6250                           ;incstack = 0
  6251                           ; Regs used in _LcdPort: [wreg+status,2+status,0]
  6252                           ;LcdPort@value stored from wreg
  6253  0E59  00F6               	movwf	LcdPort@value
  6254  0E5A                     l1633:
  6255                           
  6256                           ;LCD8bits.c: 6:     RD0 = value &1;
  6257  0E5A  1876               	btfsc	LcdPort@value,0
  6258  0E5B  2E5D               	goto	u1831
  6259  0E5C  2E61               	goto	u1830
  6260  0E5D                     u1831:
  6261  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  6262  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  6263  0E5F  1408               	bsf	8,0	;volatile
  6264  0E60  2E64               	goto	u1844
  6265  0E61                     u1830:
  6266  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  6267  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  6268  0E63  1008               	bcf	8,0	;volatile
  6269  0E64                     u1844:
  6270  0E64                     l1635:
  6271                           
  6272                           ;LCD8bits.c: 7:     RD1 = (value & 2) >> 1;
  6273  0E64  0876               	movf	LcdPort@value,w
  6274  0E65  00F5               	movwf	??_LcdPort
  6275  0E66  3001               	movlw	1
  6276  0E67                     u1855:
  6277  0E67  1003               	clrc
  6278  0E68  0CF5               	rrf	??_LcdPort,f
  6279  0E69  3EFF               	addlw	-1
  6280  0E6A  1D03               	skipz
  6281  0E6B  2E67               	goto	u1855
  6282  0E6C  1875               	btfsc	??_LcdPort,0
  6283  0E6D  2E6F               	goto	u1861
  6284  0E6E  2E73               	goto	u1860
  6285  0E6F                     u1861:
  6286  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  6287  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  6288  0E71  1488               	bsf	8,1	;volatile
  6289  0E72  2E76               	goto	u1874
  6290  0E73                     u1860:
  6291  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  6292  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  6293  0E75  1088               	bcf	8,1	;volatile
  6294  0E76                     u1874:
  6295                           
  6296                           ;LCD8bits.c: 8:     RD2 = (value & 4) >> 2;
  6297  0E76  0876               	movf	LcdPort@value,w
  6298  0E77  00F5               	movwf	??_LcdPort
  6299  0E78  3002               	movlw	2
  6300  0E79                     u1885:
  6301  0E79  1003               	clrc
  6302  0E7A  0CF5               	rrf	??_LcdPort,f
  6303  0E7B  3EFF               	addlw	-1
  6304  0E7C  1D03               	skipz
  6305  0E7D  2E79               	goto	u1885
  6306  0E7E  1875               	btfsc	??_LcdPort,0
  6307  0E7F  2E81               	goto	u1891
  6308  0E80  2E85               	goto	u1890
  6309  0E81                     u1891:
  6310  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  6311  0E82  1303               	bcf	3,6	;RP1=0, select bank0
  6312  0E83  1508               	bsf	8,2	;volatile
  6313  0E84  2E88               	goto	u1904
  6314  0E85                     u1890:
  6315  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  6316  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  6317  0E87  1108               	bcf	8,2	;volatile
  6318  0E88                     u1904:
  6319                           
  6320                           ;LCD8bits.c: 9:     RD3 = (value &8) >> 3;
  6321  0E88  0876               	movf	LcdPort@value,w
  6322  0E89  00F5               	movwf	??_LcdPort
  6323  0E8A  3003               	movlw	3
  6324  0E8B                     u1915:
  6325  0E8B  1003               	clrc
  6326  0E8C  0CF5               	rrf	??_LcdPort,f
  6327  0E8D  3EFF               	addlw	-1
  6328  0E8E  1D03               	skipz
  6329  0E8F  2E8B               	goto	u1915
  6330  0E90  1875               	btfsc	??_LcdPort,0
  6331  0E91  2E93               	goto	u1921
  6332  0E92  2E97               	goto	u1920
  6333  0E93                     u1921:
  6334  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  6335  0E94  1303               	bcf	3,6	;RP1=0, select bank0
  6336  0E95  1588               	bsf	8,3	;volatile
  6337  0E96  2E9A               	goto	u1934
  6338  0E97                     u1920:
  6339  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6340  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6341  0E99  1188               	bcf	8,3	;volatile
  6342  0E9A                     u1934:
  6343                           
  6344                           ;LCD8bits.c: 10:     RD4 = (value & 16)>>4;
  6345  0E9A  0876               	movf	LcdPort@value,w
  6346  0E9B  00F5               	movwf	??_LcdPort
  6347  0E9C  3004               	movlw	4
  6348  0E9D                     u1945:
  6349  0E9D  1003               	clrc
  6350  0E9E  0CF5               	rrf	??_LcdPort,f
  6351  0E9F  3EFF               	addlw	-1
  6352  0EA0  1D03               	skipz
  6353  0EA1  2E9D               	goto	u1945
  6354  0EA2  1875               	btfsc	??_LcdPort,0
  6355  0EA3  2EA5               	goto	u1951
  6356  0EA4  2EA9               	goto	u1950
  6357  0EA5                     u1951:
  6358  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  6359  0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  6360  0EA7  1608               	bsf	8,4	;volatile
  6361  0EA8  2EAC               	goto	u1964
  6362  0EA9                     u1950:
  6363  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  6364  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  6365  0EAB  1208               	bcf	8,4	;volatile
  6366  0EAC                     u1964:
  6367                           
  6368                           ;LCD8bits.c: 11:     RD5 = (value & 32) >> 5 ;
  6369  0EAC  0876               	movf	LcdPort@value,w
  6370  0EAD  00F5               	movwf	??_LcdPort
  6371  0EAE  3005               	movlw	5
  6372  0EAF                     u1975:
  6373  0EAF  1003               	clrc
  6374  0EB0  0CF5               	rrf	??_LcdPort,f
  6375  0EB1  3EFF               	addlw	-1
  6376  0EB2  1D03               	skipz
  6377  0EB3  2EAF               	goto	u1975
  6378  0EB4  1875               	btfsc	??_LcdPort,0
  6379  0EB5  2EB7               	goto	u1981
  6380  0EB6  2EBB               	goto	u1980
  6381  0EB7                     u1981:
  6382  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  6383  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  6384  0EB9  1688               	bsf	8,5	;volatile
  6385  0EBA  2EBE               	goto	u1994
  6386  0EBB                     u1980:
  6387  0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  6388  0EBC  1303               	bcf	3,6	;RP1=0, select bank0
  6389  0EBD  1288               	bcf	8,5	;volatile
  6390  0EBE                     u1994:
  6391                           
  6392                           ;LCD8bits.c: 12:     RD6 = (value & 64) >> 6;
  6393  0EBE  0876               	movf	LcdPort@value,w
  6394  0EBF  00F5               	movwf	??_LcdPort
  6395  0EC0  3006               	movlw	6
  6396  0EC1                     u2005:
  6397  0EC1  1003               	clrc
  6398  0EC2  0CF5               	rrf	??_LcdPort,f
  6399  0EC3  3EFF               	addlw	-1
  6400  0EC4  1D03               	skipz
  6401  0EC5  2EC1               	goto	u2005
  6402  0EC6  1875               	btfsc	??_LcdPort,0
  6403  0EC7  2EC9               	goto	u2011
  6404  0EC8  2ECD               	goto	u2010
  6405  0EC9                     u2011:
  6406  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  6407  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  6408  0ECB  1708               	bsf	8,6	;volatile
  6409  0ECC  2ED0               	goto	u2024
  6410  0ECD                     u2010:
  6411  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  6412  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  6413  0ECF  1308               	bcf	8,6	;volatile
  6414  0ED0                     u2024:
  6415                           
  6416                           ;LCD8bits.c: 13:     RD7 = (value & 128) >> 7;
  6417  0ED0  0876               	movf	LcdPort@value,w
  6418  0ED1  00F5               	movwf	??_LcdPort
  6419  0ED2  3007               	movlw	7
  6420  0ED3                     u2035:
  6421  0ED3  1003               	clrc
  6422  0ED4  0CF5               	rrf	??_LcdPort,f
  6423  0ED5  3EFF               	addlw	-1
  6424  0ED6  1D03               	skipz
  6425  0ED7  2ED3               	goto	u2035
  6426  0ED8  1875               	btfsc	??_LcdPort,0
  6427  0ED9  2EDB               	goto	u2041
  6428  0EDA  2EDF               	goto	u2040
  6429  0EDB                     u2041:
  6430  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  6431  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  6432  0EDD  1788               	bsf	8,7	;volatile
  6433  0EDE  2EE2               	goto	u2054
  6434  0EDF                     u2040:
  6435  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  6436  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  6437  0EE1  1388               	bcf	8,7	;volatile
  6438  0EE2                     u2054:
  6439  0EE2                     l107:
  6440  0EE2  0008               	return
  6441  0EE3                     __end_of_LcdPort:
  6442                           
  6443                           	psect	text26
  6444  09E9                     __ptext26:	
  6445 ;; *************** function _isr *****************
  6446 ;; Defined at:
  6447 ;;		line 131 in file "main.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;		None
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;		None
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      void 
  6454 ;; Registers used:
  6455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6461 ;;      Params:         0       0       0       0       0
  6462 ;;      Locals:         0       0       0       0       0
  6463 ;;      Temps:          3       0       0       0       0
  6464 ;;      Totals:         3       0       0       0       0
  6465 ;;Total ram usage:        3 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    1
  6468 ;; This function calls:
  6469 ;;		_isrADC
  6470 ;; This function is called by:
  6471 ;;		Interrupt level 1
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           
  6476                           ;psect for function _isr
  6477  09E9                     _isr:
  6478  09E9                     i1l2443:
  6479                           
  6480                           ;main.c: 132:     isrADC();
  6481  09E9  120A  158A  2217  120A  158A  	fcall	_isrADC
  6482  09EE                     i1l55:
  6483  09EE  0874               	movf	??_isr+2,w
  6484  09EF  008A               	movwf	10
  6485  09F0  0873               	movf	??_isr+1,w
  6486  09F1  0084               	movwf	4
  6487  09F2  0E72               	swapf	??_isr,w
  6488  09F3  0083               	movwf	3
  6489  09F4  0EFE               	swapf	btemp,f
  6490  09F5  0E7E               	swapf	btemp,w
  6491  09F6  0009               	retfie
  6492  09F7                     __end_of_isr:
  6493                           
  6494                           	psect	intentry
  6495  0004                     __pintentry:	
  6496                           ;incstack = 0
  6497                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6498                           
  6499  0004                     interrupt_function:
  6500  007E                     saved_w	set	btemp
  6501  0004  00FE               	movwf	btemp
  6502  0005  0E03               	swapf	3,w
  6503  0006  00F2               	movwf	??_isr
  6504  0007  0804               	movf	4,w
  6505  0008  00F3               	movwf	??_isr+1
  6506  0009  080A               	movf	10,w
  6507  000A  00F4               	movwf	??_isr+2
  6508  000B  120A  158A  29E9   	ljmp	_isr
  6509                           
  6510                           	psect	text27
  6511  0A17                     __ptext27:	
  6512 ;; *************** function _isrADC *****************
  6513 ;; Defined at:
  6514 ;;		line 57 in file "ADC.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6528 ;;      Params:         0       0       0       0       0
  6529 ;;      Locals:         0       0       0       0       0
  6530 ;;      Temps:          2       0       0       0       0
  6531 ;;      Totals:         2       0       0       0       0
  6532 ;;Total ram usage:        2 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; This function calls:
  6535 ;;		Nothing
  6536 ;; This function is called by:
  6537 ;;		_isr
  6538 ;; This function uses a non-reentrant model
  6539 ;;
  6540                           
  6541                           
  6542                           ;psect for function _isrADC
  6543  0A17                     _isrADC:
  6544  0A17                     i1l2375:	
  6545                           ;incstack = 0
  6546                           ; Regs used in _isrADC: [wreg-fsr0h+status,2+status,0]
  6547                           
  6548                           
  6549                           ;ADC.c: 58:     if(PIR1bits.ADIF){
  6550  0A17  1283               	bcf	3,5	;RP0=0, select bank0
  6551  0A18  1303               	bcf	3,6	;RP1=0, select bank0
  6552  0A19  1F0C               	btfss	12,6	;volatile
  6553  0A1A  2A1C               	goto	u357_21
  6554  0A1B  2A1D               	goto	u357_20
  6555  0A1C                     u357_21:
  6556  0A1C  2A29               	goto	i1l82
  6557  0A1D                     u357_20:
  6558  0A1D                     i1l2377:
  6559                           
  6560                           ;ADC.c: 59:         ADC_VALUE[ADCON0bits.CHS] = ADRESH;
  6561  0A1D  081E               	movf	30,w	;volatile
  6562  0A1E  00F0               	movwf	??_isrADC
  6563  0A1F  0C1F               	rrf	31,w	;volatile
  6564  0A20  00F1               	movwf	??_isrADC+1
  6565  0A21  0C71               	rrf	??_isrADC+1,w
  6566  0A22  390F               	andlw	15
  6567  0A23  3E5B               	addlw	(low (_ADC_VALUE| 0))& (0+255)
  6568  0A24  0084               	movwf	4
  6569  0A25  0870               	movf	??_isrADC,w
  6570  0A26  1383               	bcf	3,7	;select IRP bank0
  6571  0A27  0080               	movwf	0
  6572  0A28                     i1l2379:
  6573                           
  6574                           ;ADC.c: 60:         PIR1bits.ADIF = 0;
  6575  0A28  130C               	bcf	12,6	;volatile
  6576  0A29                     i1l82:
  6577  0A29  0008               	return
  6578  0A2A                     __end_of_isrADC:
  6579  007E                     btemp	set	126	;btemp
  6580  007E                     wtemp0	set	126
  6581                           
  6582                           	psect	config
  6583                           
  6584                           ;Config register CONFIG1 @ 0x2007
  6585                           ;	Oscillator Selection bits
  6586                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  6587                           ;	Watchdog Timer Enable bit
  6588                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6589                           ;	Power-up Timer Enable bit
  6590                           ;	PWRTE = OFF, PWRT disabled
  6591                           ;	RE3/MCLR pin function select bit
  6592                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6593                           ;	Code Protection bit
  6594                           ;	CP = OFF, Program memory code protection is disabled
  6595                           ;	Data Code Protection bit
  6596                           ;	CPD = OFF, Data memory code protection is disabled
  6597                           ;	Brown Out Reset Selection bits
  6598                           ;	BOREN = OFF, BOR disabled
  6599                           ;	Internal External Switchover bit
  6600                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6601                           ;	Fail-Safe Clock Monitor Enabled bit
  6602                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6603                           ;	Low Voltage Programming Enable bit
  6604                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6605                           ;	In-Circuit Debugger Mode bit
  6606                           ;	DEBUG = 0x1, unprogrammed default
  6607  2007                     	org	8199
  6608  2007  20D7               	dw	8407
  6609                           
  6610                           ;Config register CONFIG2 @ 0x2008
  6611                           ;	Brown-out Reset Selection bit
  6612                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6613                           ;	Flash Program Memory Self Write Enable bits
  6614                           ;	WRT = 0x3, unprogrammed default
  6615  2008                     	org	8200
  6616  2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     59      71
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UARTSendString@str	PTR const unsigned char  size(2) Largest target is 5
		 -> analogToString@string(BANK0[5]), STR_5(CODE[3]), STR_3(CODE[3]), 

    LcdWriteString@value	PTR const unsigned char  size(2) Largest target is 16
		 -> intToString@valor(BANK0[4]), analogToString@string(BANK0[5]), STR_4(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[16]), 

    sp__intToString	PTR unsigned char  size(1) Largest target is 4
		 -> intToString@valor(BANK0[4]), 

    main@contadorString	PTR unsigned char  size(1) Largest target is 4
		 -> intToString@valor(BANK0[4]), 

    main@val2	PTR volatile unsigned char  size(1) Largest target is 5
		 -> analogToString@string(BANK0[5]), 

    sp__analogToString	PTR unsigned char  size(1) Largest target is 5
		 -> analogToString@string(BANK0[5]), 

    main@val	PTR volatile unsigned char  size(1) Largest target is 5
		 -> analogToString@string(BANK0[5]), 

    main@adc2	PTR unsigned char  size(1) Largest target is 12
		 -> ADC_VALUE(BANK0[12]), 

    sp__readADC	PTR unsigned char  size(1) Largest target is 12
		 -> ADC_VALUE(BANK0[12]), 

    main@adc1	PTR unsigned char  size(1) Largest target is 12
		 -> ADC_VALUE(BANK0[12]), 


Critical Paths under _main in COMMON

    _main->_UARTSendString
    _intToString->___awdiv
    _intToString->___awmod
    _intToString->___bmul
    _analogToString->___fltol
    _analogToString->___xxtofl
    ___flsub->___fladd
    ___flsub->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _UARTSendString->_UARTSendChar
    _UARTReadChar->_UARTDataReady
    _UARTInit->___lldiv
    _LcdWriteString->_LcdWriteChar
    _LcdWriteChar->_LcdPort
    _LcdSetCursor->_LcdCmd
    _LcdInit->_LcdCmd
    _LcdCmd->_LcdPort

Critical Paths under _isr in COMMON

    _isr->_isrADC

Critical Paths under _main in BANK0

    _main->_analogToString
    _intToString->___awdiv
    _analogToString->___flmul
    ___flsub->___fladd
    ___flmul->___xxtofl
    _UARTInit->___lldiv
    _LcdSetCursor->_LcdCmd
    _LcdInit->_LcdCmd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   11315
                                             51 BANK0      8     8      0
                            _LcdInit
                       _LcdSetCursor
                     _LcdWriteString
                      _UARTDataReady
                           _UARTInit
                       _UARTReadChar
                     _UARTSendString
                     _analogToString
                            _initADC
                        _intToString
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              2     2      0      44
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _intToString                                          9     9      0    1429
                                              5 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              5 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              5 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              5 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analogToString                                      15    15      0    6630
                                             36 BANK0     15    15      0
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              5 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                              5 COMMON     4     0      4
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             16 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2136
                                              5 COMMON     4     4      0
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              5 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       8     5      3     765
                                              6 COMMON     3     0      3
                                              0 BANK0      5     5      0
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTReadChar                                         0     0      0       0
                      _UARTDataReady
 ---------------------------------------------------------------------------------
 (2) _UARTDataReady                                        1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     684
                                             13 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              5 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _LcdWriteString                                       7     5      2     744
                                              0 BANK0      7     5      2
                       _LcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _LcdWriteChar                                         2     2      0     198
                                              7 COMMON     2     2      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (1) _LcdSetCursor                                         4     3      1     416
                                              1 BANK0      4     3      1
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              2     2      0     374
                                              1 BANK0      2     2      0
                             _LcdCmd
                            _LcdPort
 ---------------------------------------------------------------------------------
 (2) _LcdCmd                                               3     3      0     198
                                              7 COMMON     2     2      0
                                              0 BANK0      1     1      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (3) _LcdPort                                              2     2      0     176
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              2 COMMON     3     3      0
                             _isrADC
 ---------------------------------------------------------------------------------
 (5) _isrADC                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcdInit
     _LcdCmd
       _LcdPort
     _LcdPort
   _LcdSetCursor
     _LcdCmd
       _LcdPort
   _LcdWriteString
     _LcdWriteChar
       _LcdPort
   _UARTDataReady
   _UARTInit
     ___lldiv
   _UARTReadChar
     _UARTDataReady
   _UARTSendString
     _UARTSendChar
   _analogToString
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _initADC
   _intToString
     ___awdiv
     ___awmod
     ___bmul
   _readADC

 _isr (ROOT)
   _isrADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      50       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3B      47       5       88.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      50      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 12:56:39 2021

 __size_of_analogToString 012C         UARTInit@baud_rate 002D                         pc 0002  
          ___bmul@product 0077                        l50 0C98                        l47 073F  
                      l74 0A16                        l77 0A69                        l78 0A6B  
            ___awdiv@sign 0022                        fsr 0004       __Umul8_16@word_mpld 0022  
                     l110 0A85                       l120 0ACE                       l107 0EE2  
                     l123 0B88                       l132 0B3D                       l301 0A53  
                     l126 0A3E                       l311 0D00                       l160 09DE  
                     l163 09E8                       l171 0BDF                       l180 0A04  
                     l157 0DDC                       l174 09DC                       l441 0C3A  
                     l610 0607                       l602 05E5                       l611 0613  
                     l428 0D69                       l461 0E58                       l614 0AA9  
                     l710 07FB                       l471 0E58                       l721 07C5  
                     l722 07D1                       l714 07A9                       l572 0490  
                     l468 0E43                       l708 0764                       l581 0613  
                     l670 02EF                       l574 0465                       l664 0383  
                     l568 03E7                       l593 0585                       l683 0AE5  
                     l676 0377                       l685 0AF7                       l589 0561  
                     l599 05A7                       _RD0 0040                       _RD1 0041  
                     _RD2 0042                       _RE0 0048                       _RD3 0043  
                     _RD4 0044                       _RE2 004A                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       _isr 09E9  
                     fsr0 0004                       indf 0000              ___awmod@sign 0022  
            ___flmul@aexp 003C              ___flmul@bexp 003D              ___flmul@sign 0037  
            ___flmul@temp 0042              ___flmul@prod 003E              ___fltol@exp1 0026  
                    l2001 0E08                      l2003 0E09                      l2101 0190  
                    l2005 0E11                      l2111 0220                      l2103 01AD  
                    l2031 0A8A                      l2023 0E38                      l2015 0E1F  
                    l2007 0E13                      l2121 02B2                      l2113 024D  
                    l2105 01C6                      l2041 0034                      l2025 0E48  
                    l2009 0E17                      l2017 0E31                      l2201 07BB  
                    l2123 02BB                      l2131 02CF                      l2115 0273  
                    l2107 01E3                      l2051 0049                      l2043 0035  
                    l2035 0023                      l2027 0E4D                      l2211 07EE  
                    l2203 07BF                      l2221 0B44                      l2133 02D3  
                    l2125 02BF                      l2117 029B                      l2109 0210  
                    l2061 0061                      l2053 0051                      l2045 003A  
                    l2037 002A                      l2029 0A86                      l2213 07F2  
                    l2205 07C9                      l2223 0B4F                      l2303 0AF8  
                    l2151 0324                      l2143 02F4                      l2135 02D4  
                    l2127 02C0                      l2119 02A4                      l2071 007D  
                    l2063 0066                      l2055 0056                      l2047 003F  
                    l2039 0030                      l2215 07F3                      l2207 07D3  
                    l2311 0617                      l2231 0A0B                      l2225 0B60  
                    l2305 0AFD                      l2161 035B                      l2145 02F9  
                    l2153 032A                      l2137 02D8                      l2129 02C9  
                    l2081 00A0                      l2073 0082                      l2065 006B  
                    l2057 005C                      l2049 0047                      l2209 07E9  
                    l2321 069B                      l2313 064B                      l2241 0A12  
                    l2233 0A0C                      l2401 0F1D                      l2227 0B66  
                    l2219 0B3E                      l2307 0B19                      l2251 0D9E  
                    l2171 037B                      l2163 035D                      l2155 0337  
                    l2147 0307                      l2139 02EC                      l2091 012E  
                    l2083 00AD                      l2075 0087                      l2067 0073  
                    l2059 0060                      l2331 0725                      l2323 06BA  
                    l2315 065E                      l2243 0A13                      l2235 0A0D  
                    l2411 0F54                      l2403 0F28                      l2309 0B21  
                    l2261 0DD0                      l2253 0DA0                      l2341 0B89  
                    l2165 036B                      l2157 0342                      l2149 030B  
                    l2093 014A                      l2085 00CA                      l2069 0075  
                    l1701 0415                      l2181 075C                      l2333 0738  
                    l2325 06CD                      l2317 0663                      l2237 0A10  
                    l2229 0A05                      l2421 0F96                      l2413 0F5F  
                    l2405 0F31                      l2271 0DD7                      l2263 0DD1  
                    l2255 0DCD                      l2247 0D6A                      l2351 09F7  
                    l2343 0B90                      l2167 036F                      l2159 0351  
                    l2095 0153                      l2087 00E6                      l2079 0090  
                    l1711 0429                      l1703 0419                      l2191 0787  
                    l2183 076C                      l2175 0743                      l2335 073D  
                    l2327 06D2                      l2319 0667                      l2239 0A11  
                    l2431 0FD3                      l2423 0FA1                      l2415 0F6E  
                    l2407 0F3B                      l1633 0E5A                      l2273 0DD8  
                    l2265 0DD4                      l2257 0DCE                      l2249 0D71  
                    l2353 09F7                      l2345 0BAC                      l2169 0370  
                    l2097 0163                      l2089 0112                      l1721 0469  
                    l1713 042D                      l1705 041D                      l1641 0391  
                    l2193 078E                      l2177 0748                      l2337 073E  
                    l2329 0706                      l2361 0C54                      l2281 0A64  
                    l2441 0FF3                      l2433 0FD9                      l2425 0FB0  
                    l2417 0F7D                      l2409 0F4B                      l1635 0E64  
                    l2291 0AB6                      l2275 0DDB                      l2267 0DD5  
                    l2259 0DCF                      l2355 0A01                      l2347 0BB4  
                    l2099 0180                      l1811 05E1                      l1803 05AC  
                    l1731 0486                      l1723 0474                      l1707 0421  
                    l1715 0431                      l1651 03A8                      l1643 0395  
                    l2195 0792                      l2187 0775                      l2179 074C  
                    l2371 0C97                      l2363 0C59                      l2283 0A66  
                    l2435 0FDE                      l2427 0FBF                      l2419 0F8D  
                    l1901 0CE8                      l2269 0DD6                      l2349 0BC1  
                    l1821 05FD                      l1813 05EA                      l1805 05B1  
                    l1741 04A4                      l1725 0476                      l1733 048A  
                    l1717 0432                      l1709 0425                      l1661 03BE  
                    l1653 03A9                      l1645 0396                      l1637 0384  
                    l2197 07A0                      l2189 077A                      l2365 0C68  
                    l2277 0A55                      l2437 0FE4                      l2429 0FC9  
                    l2295 0ABE                      l2287 0AAD                      l1903 0CE9  
                    l1831 0AD2                      l1823 0601                      l1815 05EF  
                    l1807 05BF                      l1751 04D0                      l1743 04BD  
                    l1735 0494                      l1727 047C                      l1719 0449  
                    l1671 03CF                      l1663 03BF                      l1647 039B  
                    l1655 03AB                      l1639 038B                      l2199 07B0  
                    l1911 0D01                      l2367 0C7F                      l2359 0C3E  
                    l2279 0A5B                      l2439 0FE6                      l2391 0EF1  
                    l2383 0EE3                      l2289 0AAE                      l1905 0CF2  
                    l1841 0AF3                      l1833 0AD4                      l1825 0603  
                    l1817 05F7                      l1809 05C3                      l1761 04FB  
                    l1753 04D4                      l1745 04C1                      l1737 0499  
                    l1729 047D                      l1681 03ED                      l1673 03D4  
                    l1665 03C5                      l1657 03B3                      l1649 03A0  
                    l1921 0D13                      l1913 0D04                      l2369 0C96  
                    l2393 0EF6                      l2385 0EE7                      l1851 0A70  
                    l1907 0CF8                      l1835 0ADB                      l1827 060E  
                    l1819 05FC                      l1771 0569                      l1763 0539  
                    l1755 04D5                      l1747 04C5                      l1691 0401  
                    l1683 03F1                      l1675 03DC                      l1667 03C9  
                    l1659 03B8                      l1931 0D27                      l1923 0D18  
                    l1915 0D08                      l2395 0F07                      l2387 0EEB  
                    l1853 0A76                      l1861 0A2E                      l1845 09D6  
                    l1837 0ADF                      l1829 0612                      l1781 0584  
                    l1773 056E                      l1765 053F                      l1757 04DE  
                    l1749 04CE                      l1693 0405                      l1685 03F5  
                    l1677 03DD                      l1669 03CA                      l1941 0D4D  
                    l1933 0D2E                      l1925 0D1C                      l1917 0D0D  
                    l2397 0F0A                      l2389 0EEC                      l1855 0A79  
                    l1863 0A34                      l1871 09E4                      l1839 0AEE  
                    l1783 0589                      l1791 0595                      l1767 0544  
                    l1759 04E3                      l1695 0409                      l1687 03F9  
                    l1679 03DF                      l1951 0D65                      l1943 0D4E  
                    l1935 0D32                      l1927 0D1E                      l1919 0D0F  
                    l2399 0F15                      l1857 0A82                      l1849 0A6F  
                    l2497 0AC6                      l1865 0A37                      l1785 058C  
                    l1777 0577                      l1769 0553                      l1793 0599  
                    l1697 040D                      l1689 03FD                      l1945 0D55  
                    l1937 0D36                      l1929 0D24                      l1961 0BEC  
                    l1881 0A4B                      l1873 0A40                      l1867 0A3B  
                    l1859 0A2B                      l1891 0CAE                      l1795 059A  
                    l1787 058E                      l1779 0580                      l1699 0411  
                    l1939 0D47                      l1947 0D5B                      l1971 0C00  
                    l1963 0BEE                      l1955 0BE0                      l1883 0A52  
                    l1875 0A41                      l1893 0CBB                      l1869 09DE  
                    l1797 059E                      l1789 0593                      l1949 0D60  
                    l1981 0C1F                      l1973 0C07                      l1965 0BF2  
                    l1957 0BE3                      l1877 0A45                      l1895 0CBF  
                    l1887 0C99                      l1799 05A4                      l1983 0C26  
                    l1975 0C0B                      l1967 0BF7                      l1959 0BE7  
                    l1879 0A49                      l1897 0CC8                      l1889 0CAB  
                    l1993 0DDD                      l1977 0C0F                      l1969 0BFD  
                    l1985 0C2C                      l1899 0CDA                      l1995 0DEA  
                    l1987 0C31                      l1979 0C19                      l1989 0C36  
                    l1999 0DF3                      ?_isr 0070                      STR_1 0810  
                    STR_2 0820                      STR_3 0820                      STR_4 0820  
                    STR_5 0820                      u2010 0ECD                      u2011 0EC9  
                    u2100 03C9                      u2005 0EC1                      u2101 03C8  
                    u2110 03CF                      u2111 03CE                      u2040 0EDF  
                    u2024 0ED0                      u3000 0082                      u2120 03D4  
                    u2041 0EDB                      u3001 0081                      u2121 03D3  
                    u3010 0087                      u2210 0490                      u2130 03ED  
                    u2035 0ED3                      u3011 0086                      u2211 048F  
                    u2131 03EC                      u2220 0494                      u2140 03F1  
                    u2060 0395                      u3101 01D5                      u3021 00D8  
                    u2301 0512                      u2221 0493                      u2205 047F  
                    u2141 03F0                      u2061 0394                      u2054 0EE2  
                    u3102 01DC                      u3022 00DF                      u2310 0526  
                    u2302 0513                      u2230 0499                      u2150 0449  
                    u2070 039B                      u3111 0202                      u3103 01E3  
                    u3031 00F4                      u3023 00E6                      u2311 0527  
                    u2303 0518                      u2231 0498                      u2151 0448  
                    u2071 039A                      u3112 0209                      u3032 00FB  
                    u2400 059E                      u2320 0544                      u2312 052C  
                    u2304 0519                      u2160 0454                      u2080 03A0  
                    u3121 022F                      u3113 0210                      u3041 0120  
                    u3033 0102                      u2401 059D                      u2321 0543  
                    u2313 052D                      u2305 051E                      u2241 04AF  
                    u2161 0452                      u2081 039F                      u3210 02D3  
                    u3130 0259                      u3122 0236                      u3042 0127  
                    u2410 05A4                      u2330 0569                      u2306 051F  
                    u2250 04C1                      u2242 04B6                      u2170 0455  
                    u2090 03BE                      u3211 02D2                      u3123 023D  
                    u3051 013C                      u3043 012E                      u2411 05A3  
                    u2331 0568                      u2251 04C0                      u2243 04BD  
                    u2155 0445                      u2091 03BD                      u3300 036F  
                    u3220 02D8                      u3052 0143                      u2500 0601  
                    u2420 05AB                      u2340 056E                      u2260 04C5  
                    u2180 0469                      u3301 036E                      u3221 02D7  
                    u3205 02C2                      u3141 0265                      u3053 014A  
                    u2501 0600                      u2421 05AA                      u2341 056D  
                    u2261 04C4                      u2181 0468                      u3230 02EC  
                    u3150 0281                      u3142 026C                      u2510 0612  
                    u2430 05B1                      u2270 04D4                      u2190 047C  
                    u3310 0748                      u3231 02EB                      u3143 0273  
                    u3135 0254                      u3071 0172                      u2511 0611  
                    u2431 05B0                      u2271 04D3                      u2191 047B  
                    u3311 0747                      u2600 0CBF                      u2520 0ADF  
                    u3240 02F3                      u3072 0179                      u2440 05C3  
                    u2360 0584                      u3400 07C5                      u3320 074C  
                    u2601 0CBE                      u2521 0ADE                      u3241 02F2  
                    u3161 028D                      u3081 019F                      u3073 0180  
                    u3065 014C                      u2441 05C2                      u2361 0583  
                    u3401 07C4                      u3321 074B                      u3250 02F9  
                    u3162 0294                      u3082 01A6                      u2450 05D2  
                    u2370 0589                      u2290 04FB                      u3410 07C9  
                    u3330 076C                      u3251 02F8                      u3163 029B  
                    u3155 027C                      u3083 01AD                      u2371 0588  
                    u2355 0579                      u2291 04FA                      u3411 07C8  
                    u3331 076B                      u3500 0B2B                      u2620 0CDA  
                    u2540 0AF3                      u3260 030B                      u2460 05E1  
                    u2380 0593                      u3420 07DE                      u2621 0CD9  
                    u2541 0AF2                      u3261 030A                      u2461 05E0  
                    u2381 0592                      u2293 04F7                      u2285 04D7  
                    u1830 0E61                      u3510 0B3D                      u2550 09E4  
                    u3270 031A                      u3190 02BF                      u2470 05EA  
                    u2390 0599                      u3430 07EE                      u3350 078D  
                    u2710 0D47                      u1831 0E5D                      u3511 0B3C  
                    u2615 0CC1                      u2551 09E3                      u2535 0AE6  
                    u3191 02BE                      u3175 029D                      u3095 01AF  
                    u2471 05E9                      u2455 05CD                      u2391 0598  
                    u3431 07ED                      u3351 078C                      u2711 0D46  
                    u1920 0E97                      u1904 0E88                      u2640 0CF8  
                    u3520 0B9A                      u3280 0337                      u2480 05EF  
                    u3440 07F2                      u2800 0C19                      u2560 0A45  
                    u3600 0FE4                      u1921 0E93                      u2641 0CF7  
                    u2625 0CD6                      u3281 0336                      u3185 02B4  
                    u2481 05EE                      u3441 07F1                      u3425 07D9  
                    u3345 077F                      u2705 0D37                      u2801 0C18  
                    u2561 0A44                      u3601 0FE3                      u3450 0D71  
                    u3530 0BC1                      u3290 0351                      u2490 05FC  
                    u3370 07AF                      u2730 0D5B                      u2650 0D08  
                    u2570 0A52                      u1915 0E8B                      u2635 0CEA  
                    u3451 0D70                      u3531 0BC0                      u3291 0350  
                    u3275 0315                      u2491 05FB                      u3371 07AE  
                    u2731 0D5A                      u2715 0D43                      u2651 0D07  
                    u2571 0A51                      u1860 0E73                      u1844 0E64  
                    u2580 0CAB                      u3460 0D7F                      u3540 0BCD  
                    u2900 0E37                      u2740 0D60                      u2660 0D13  
                    u2820 0C2C                      u1861 0E6F                      u2581 0CAA  
                    u3285 0333                      u2901 0E36                      u3365 07A1  
                    u2741 0D5F                      u2725 0D4F                      u2661 0D12  
                    u2821 0C2B                      u2805 0C15                      u1950 0EA9  
                    u1934 0E9A                      u3470 0DAE                      u3550 0BDF  
                    u3390 07BF                      u2670 0D24                      u2830 0C31  
                    u2750 0BE7                      u1951 0EA5                      u1855 0E67  
                    u3551 0BDE                      u3535 0BBD                      u3295 034D  
                    u3391 07BE                      u2671 0D23                      u2831 0C30  
                    u2815 0C20                      u2751 0BE6                      u3560 0A01  
                    u2920 0E48                      u2840 0DEA                      u2760 0BF2  
                    u3480 0A5B                      u1945 0E9D                      u3465 0D7A  
                    u3561 0A00                      u2921 0E47                      u2841 0DE9  
                    u3385 07B4                      u2761 0BF1                      u3481 0A5A  
                    u1890 0E85                      u1874 0E76                      u3490 0B07  
                    u2930 0E4D                      u2850 0E01                      u2690 0D36  
                    u2770 0BFD                      u1891 0E81                      u2595 0CB0  
                    u3475 0DA9                      u2931 0E4C                      u2915 0E3A  
                    u2691 0D35                      u2771 0BFC                      u1980 0EBB  
                    u1964 0EAC                      u2940 0034                      u2860 0E17  
                    u3580 0FC9                      u1981 0EB7                      u1885 0E79  
                    u2941 0033                      u2861 0E16                      u2685 0D28  
                    u3581 0FC8                      u2950 003A                      u2870 0E1E  
                    u2790 0C0F                      u3590 0FD9                      u1975 0EAF  
                    u2951 0039                      u2871 0E1D                      u2855 0DFC  
                    u2791 0C0E                      u3591 0FD8                      u2960 003F  
                    u3657 0A39                      u2961 003E                      u2785 0C01  
                    u1994 0EBE                      u2970 0060                      u2890 0E30  
             main@entrada 0059                      u3667 0B4A                      u2971 005F  
                    u2891 0E2F                      u2980 0066                      u3677 0B5B  
                    u2981 0065                      u2885 0E20                      u2990 006B  
                    i1l55 09EE                      u3687 0B6C                      u2991 006A  
                    u3697 0A7D                      i1l82 0A29                      _main 0EE3  
                    btemp 007E                      start 000E           LcdSetCursor@row 0024  
         __end_of_LcdInit 0B89           __end_of_LcdPort 0EE3         ___bmul@multiplier 0078  
    __end_of_LcdSetCursor 0ACF                     ??_isr 0072       analogToString@value 0048  
     analogToString@valor 004F              ?_intToString 0070             ___fltol@sign1 0025  
            main@contador 0058           __end_of___fladd 0614                     ?_main 0070  
         __end_of___awdiv 0D6A           __end_of___awmod 0C3B           __end_of___flmul 0384  
         __end_of___flsub 0AAA           __end_of___fltol 0E59                     _ANSEL 0188  
         __end_of___lldiv 0D01           ___awdiv@divisor 0075           ___awdiv@counter 0021  
                   _RCREG 001A                     _SPBRG 0099                     _TRISD 0088  
                   _TRISE 0089                     _TXREG 0019          __end_of_UARTInit 0DDD  
         __end_of_initADC 0A17           __end_of_readADC 0A6C                     pclath 000A  
                   status 0003                     wtemp0 007E      __end_of_LcdWriteChar 0A3F  
         __initialization 0011              __end_of_main 1000                    ??_main 0053  
    analogToString@entero 004E      analogToString@string 0049     __end_of_UARTDataReady 09DD  
                  _ADRESH 001E          ___awdiv@dividend 0077                    _ANSELH 0189  
                  i1l2443 09E9                    i1l2375 0A17                    i1l2377 0A1D  
                  i1l2379 0A28                    u357_20 0A1D                    u357_21 0A1C  
               ??_LcdInit 0021                 ??_LcdPort 0075          __end_of___xxtofl 07FC  
                  _LcdCmd 0A6C            _analogToString 0614                    ___bmul 0A3F  
               ??___fladd 0028                 ??___awdiv 0020                 ??___awmod 0020  
               ??___flmul 0032                 ??___flsub 0079                 ??___fltol 0020  
               ??___lldiv 0075                    _isrADC 0A17   __size_of_UARTSendString 0057  
        ___awdiv@quotient 0023           ___awmod@divisor 0075           ___awmod@counter 0021  
               ??_initADC 0075                 ??_readADC 0075        __size_of__Umul8_16 0029  
                  saved_w 007E              ___xxtofl@arg 0026              ___xxtofl@exp 0025  
            ___xxtofl@val 0075   __end_of__initialization 001F   __size_of_LcdWriteString 0046  
  __end_of_analogToString 0740                ___fltol@f1 0075     __size_of_LcdSetCursor 0025  
     ___bmul@multiplicand 0075          intToString@value 002D          intToString@valor 0028  
       LcdWriteChar@value 0078            __pcstackCOMMON 0070                 ?_UARTInit 002D  
    __size_of_intToString 005E  UARTSendString@max_length 0078     __size_of_LcdWriteChar 0015  
            _LcdSetCursor 0AAA                __pbssBANK0 005B                   ?_LcdCmd 0070  
         ?_analogToString 0070         __end_of__Umul8_16 0AF8                __pmaintext 0EE3  
                 ?___bmul 0075                ??_UARTInit 0032                __pintentry 0004  
                 ?_isrADC 0070              _LcdWriteChar 0A2A                 ?___xxtofl 0075  
           ?_UARTReadChar 0070                __stringtab 0800             ?_UARTSendChar 0070  
                 _LcdInit 0B3E                   _LcdPort 0E59                 _ADC_VALUE 005B  
         __size_of_LcdCmd 001A           __size_of___bmul 0015                   ___fladd 0384  
                 ___awdiv 0D01                   ___awmod 0BE0                   ___flmul 0023  
                 ___flsub 0A86                   ___fltol 0DDD                   ___lldiv 0C99  
          _UARTSendString 0B89           __size_of_isrADC 0013                   __ptext1 0A54  
                 __ptext2 0C3B                   __ptext3 0A3F                   __ptext4 0BE0  
                 __ptext5 0D01                   __ptext6 0A05                   __ptext7 0614  
                 __ptext8 0740                   __ptext9 0DDD                   _initADC 0A05  
                 _readADC 0A54              __size_of_isr 000E                ??___xxtofl 0020  
        ___awmod@dividend 0077            ??_UARTReadChar 0076                   main@val 005A  
    end_of_initialization 001F            ??_UARTSendChar 0075            _LcdWriteString 0AF8  
         ___lldiv@divisor 0020           ___lldiv@counter 002C                 _RCSTAbits 0018  
  __end_of_UARTSendString 0BE0               ___fladd@grs 0078             ___xxtofl@sign 0024  
               _TRISCbits 0087        LcdSetCursor@column 0021        main@contadorString 0055  
  __end_of_LcdWriteString 0B3E               ___flmul@grs 0038                 _TXSTAbits 0098  
       intToString@entero 002C            __end_of_LcdCmd 0A86    __size_of_UARTDataReady 0007  
         ?_UARTSendString 0076            __end_of___bmul 0A54         __size_of_UARTInit 0073  
          __end_of_isrADC 0A2A                readADC@pin 0076       start_initialization 0011  
             __end_of_isr 09F7           ?_LcdWriteString 0020          ??_analogToString 0044  
                ??_LcdCmd 0077                  ??___bmul 0076      __end_of_UARTReadChar 0A05  
               __Umul8_16 0ACF                  ??_isrADC 0070             ??_intToString 0025  
    __end_of_UARTSendChar 09E9                 ___fladd@a 0024                 ___fladd@b 0020  
               ___flmul@a 002E                 ___flmul@b 002A                 ___flsub@a 0030  
               ___flsub@b 0034                 ___latbits 0002             __pcstackBANK0 0020  
           _UARTDataReady 09D6         __size_of___xxtofl 00BC                  ?_LcdInit 0070  
                ?_LcdPort 0070             UARTSendChar@c 0075                  ?___fladd 0020  
                ?___awdiv 0075                  ?___awmod 0075                  ?___flmul 002A  
                ?___flsub 0030                  ?___fltol 0075                  ?___lldiv 0020  
              ?__Umul8_16 0075                 __pstrings 0800                  ?_initADC 0070  
                ?_readADC 0070       __end_of_intToString 0C99            ?_UARTDataReady 0070  
       interrupt_function 0004                  _PIE1bits 008C           UARTSendString@i 0023  
                _PIR1bits 000C                  _UARTInit 0D6A                _ADCON0bits 001F  
             __stringbase 080F                _ADCON1bits 009F          __size_of_LcdInit 004B  
        ??_UARTSendString 0020          __size_of_LcdPort 008A     __size_of_UARTReadChar 000E  
            LcdPort@value 0076     __size_of_UARTSendChar 000C              UARTInit@BRGH 0031  
             LcdCmd@value 0020               ??__Umul8_16 0077          __size_of___fladd 0290  
        __size_of___awdiv 0069          __size_of___awmod 005B          __size_of___flmul 0361  
        __size_of___flsub 0024          __size_of___fltol 007C          __size_of___lldiv 0068  
             _intToString 0C3B        __end_of__stringtab 0810           ??_UARTDataReady 0075  
        ??_LcdWriteString 0022          __size_of_initADC 0012          __size_of_readADC 0018  
                ___xxtofl 0740                  __ptext10 0A86                  __ptext11 0384  
                __ptext20 0AF8                  __ptext12 0023                  __ptext21 0A2A  
                __ptext13 0ACF                  __ptext22 0AAA                  __ptext14 0B89  
                __ptext23 0B3E                  __ptext15 09DD                  __ptext24 0A6C  
                __ptext16 09F7                  __ptext25 0E59                  __ptext17 09D6  
                __ptext26 09E9                  __ptext18 0D6A                  __ptext27 0A17  
                __ptext19 0C99              _UARTReadChar 09F7             ?_LcdSetCursor 0021  
            _UARTSendChar 09DD             __size_of_main 011D           LcdWriteString@i 0025  
                main@adc1 0056                  main@adc2 0057                  main@val2 0054  
           ?_LcdWriteChar 0070                _INTCONbits 000B            ??_LcdSetCursor 0022  
       UARTSendString@str 0076                  intlevel1 0000          ___lldiv@dividend 0024  
               stringcode 080A            ??_LcdWriteChar 0077    __Umul8_16@multiplicand 0075  
        ___lldiv@quotient 0028                  stringdir 080A                  stringtab 0800  
           ___fladd@signs 0075       LcdWriteString@value 0020              ___fladd@aexp 0076  
            ___fladd@bexp 0077      __Umul8_16@multiplier 0024         __Umul8_16@product 0020  
