

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 14 17:03:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  0000                     	;# 
   363  0001                     	;# 
   364  0002                     	;# 
   365  0003                     	;# 
   366  0004                     	;# 
   367  0005                     	;# 
   368  0006                     	;# 
   369  0007                     	;# 
   370  0008                     	;# 
   371  0009                     	;# 
   372  000A                     	;# 
   373  000B                     	;# 
   374  000C                     	;# 
   375  000D                     	;# 
   376  000E                     	;# 
   377  000E                     	;# 
   378  000F                     	;# 
   379  0010                     	;# 
   380  0011                     	;# 
   381  0012                     	;# 
   382  0013                     	;# 
   383  0014                     	;# 
   384  0015                     	;# 
   385  0015                     	;# 
   386  0016                     	;# 
   387  0017                     	;# 
   388  0018                     	;# 
   389  0019                     	;# 
   390  001A                     	;# 
   391  001B                     	;# 
   392  001B                     	;# 
   393  001C                     	;# 
   394  001D                     	;# 
   395  001E                     	;# 
   396  001F                     	;# 
   397  0081                     	;# 
   398  0085                     	;# 
   399  0086                     	;# 
   400  0087                     	;# 
   401  0088                     	;# 
   402  0089                     	;# 
   403  008C                     	;# 
   404  008D                     	;# 
   405  008E                     	;# 
   406  008F                     	;# 
   407  0090                     	;# 
   408  0091                     	;# 
   409  0092                     	;# 
   410  0093                     	;# 
   411  0093                     	;# 
   412  0093                     	;# 
   413  0094                     	;# 
   414  0095                     	;# 
   415  0096                     	;# 
   416  0097                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009A                     	;# 
   420  009B                     	;# 
   421  009C                     	;# 
   422  009D                     	;# 
   423  009E                     	;# 
   424  009F                     	;# 
   425  0105                     	;# 
   426  0107                     	;# 
   427  0108                     	;# 
   428  0109                     	;# 
   429  010C                     	;# 
   430  010C                     	;# 
   431  010D                     	;# 
   432  010E                     	;# 
   433  010F                     	;# 
   434  0185                     	;# 
   435  0187                     	;# 
   436  0188                     	;# 
   437  0189                     	;# 
   438  018C                     	;# 
   439  018D                     	;# 
   440  001A                     _RCREG	set	26
   441  0019                     _TXREG	set	25
   442  0018                     _RCSTAbits	set	24
   443  001E                     _ADRESH	set	30
   444  000C                     _PIR1bits	set	12
   445  000B                     _INTCONbits	set	11
   446  001F                     _ADCON0bits	set	31
   447  0048                     _RE0	set	72
   448  004A                     _RE2	set	74
   449  0047                     _RD7	set	71
   450  0046                     _RD6	set	70
   451  0045                     _RD5	set	69
   452  0044                     _RD4	set	68
   453  0043                     _RD3	set	67
   454  0042                     _RD2	set	66
   455  0041                     _RD1	set	65
   456  0040                     _RD0	set	64
   457  0087                     _TRISCbits	set	135
   458  0098                     _TXSTAbits	set	152
   459  0099                     _SPBRG	set	153
   460  009F                     _ADCON1bits	set	159
   461  008C                     _PIE1bits	set	140
   462  0089                     _TRISE	set	137
   463  0088                     _TRISD	set	136
   464  0189                     _ANSELH	set	393
   465  0188                     _ANSEL	set	392
   466                           
   467                           	psect	cinit
   468  07EE                     start_initialization:	
   469                           ; #config settings
   470                           
   471  07EE                     __initialization:
   472                           
   473                           ; Clear objects allocated to BANK0
   474  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   475  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   476  07F0  01A0               	clrf	__pbssBANK0& (0+127)
   477  07F1  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   478  07F2  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   479  07F3  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   480  07F4  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   481  07F5  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   482  07F6  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   483  07F7  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   484  07F8  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   485  07F9  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   486  07FA  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   487  07FB  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   488  07FC                     end_of_initialization:	
   489                           ;End of C runtime variable initialization code
   490                           
   491  07FC                     __end_of__initialization:
   492  07FC  0183               	clrf	3
   493  07FD  120A  118A  2EDC   	ljmp	_main	;jump to C main() function
   494                           
   495                           	psect	bssBANK0
   496  0020                     __pbssBANK0:
   497  0020                     _ADC_VALUE:
   498  0020                     	ds	12
   499                           
   500                           	psect	cstackCOMMON
   501  0070                     __pcstackCOMMON:
   502  0070                     ?_LcdInit:
   503  0070                     ?_LcdWriteChar:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_LcdPort:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ??_LcdPort:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_LcdCmd:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_main:	
   516                           ; 1 bytes @ 0x0
   517                           
   518                           
   519                           ; 2 bytes @ 0x0
   520  0070                     	ds	1
   521  0071                     LcdPort@value:
   522                           
   523                           ; 1 bytes @ 0x1
   524  0071                     	ds	1
   525  0072                     ??_LcdWriteChar:
   526  0072                     ??_LcdCmd:	
   527                           ; 1 bytes @ 0x2
   528                           
   529                           
   530                           ; 1 bytes @ 0x2
   531  0072                     	ds	1
   532  0073                     LcdWriteChar@value:
   533                           
   534                           ; 1 bytes @ 0x3
   535  0073                     	ds	1
   536  0074                     LcdCmd@value:
   537                           
   538                           ; 1 bytes @ 0x4
   539  0074                     	ds	1
   540  0075                     ??_LcdInit:
   541  0075                     ?_LcdSetCursor:	
   542                           ; 1 bytes @ 0x5
   543                           
   544  0075                     LcdSetCursor@column:	
   545                           ; 1 bytes @ 0x5
   546                           
   547                           
   548                           ; 1 bytes @ 0x5
   549  0075                     	ds	1
   550  0076                     ??_LcdSetCursor:
   551                           
   552                           ; 1 bytes @ 0x6
   553  0076                     	ds	2
   554  0078                     LcdSetCursor@row:
   555                           
   556                           ; 1 bytes @ 0x8
   557  0078                     	ds	1
   558  0079                     ??_main:
   559                           
   560                           	psect	maintext
   561  06DC                     __pmaintext:	
   562                           ; 1 bytes @ 0x9
   563 ;;
   564 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   565 ;;
   566 ;; *************** function _main *****************
   567 ;; Defined at:
   568 ;;		line 37 in file "main.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  contador        1    0        unsigned char 
   573 ;; Return value:  Size  Location     Type
   574 ;;                  2   18[None  ] int 
   575 ;; Registers used:
   576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   577 ;; Tracked objects:
   578 ;;		On entry : B00/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   582 ;;      Params:         0       0       0       0       0
   583 ;;      Locals:         1       0       0       0       0
   584 ;;      Temps:          0       0       0       0       0
   585 ;;      Totals:         1       0       0       0       0
   586 ;;Total ram usage:        1 bytes
   587 ;; Hardware stack levels required when called:    3
   588 ;; This function calls:
   589 ;;		_LcdInit
   590 ;;		_LcdSetCursor
   591 ;;		_LcdWriteChar
   592 ;; This function is called by:
   593 ;;		Startup code after reset
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           
   598                           ;psect for function _main
   599  06DC                     _main:
   600  06DC                     l966:	
   601                           ;incstack = 0
   602                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   603                           
   604                           
   605                           ;main.c: 38:   TRISD = 0;
   606  06DC  1683               	bsf	3,5	;RP0=1, select bank1
   607  06DD  1303               	bcf	3,6	;RP1=0, select bank1
   608  06DE  0188               	clrf	8	;volatile
   609                           
   610                           ;main.c: 39:   TRISE = 0;
   611  06DF  0189               	clrf	9	;volatile
   612  06E0                     l968:
   613                           
   614                           ;main.c: 40:   ANSEL = 3;
   615  06E0  3003               	movlw	3
   616  06E1  1683               	bsf	3,5	;RP0=1, select bank3
   617  06E2  1703               	bsf	3,6	;RP1=1, select bank3
   618  06E3  0088               	movwf	8	;volatile
   619  06E4                     l970:
   620                           
   621                           ;main.c: 41:   ANSELH = 0;
   622  06E4  0189               	clrf	9	;volatile
   623  06E5                     l972:
   624                           
   625                           ;main.c: 42:   LcdInit();
   626  06E5  120A  118A  271F  120A  118A  	fcall	_LcdInit
   627  06EA                     l974:
   628  06EA                     l976:
   629                           
   630                           ;main.c: 92:            LcdSetCursor(1,1);
   631  06EA  01F5               	clrf	LcdSetCursor@column
   632  06EB  0AF5               	incf	LcdSetCursor@column,f
   633  06EC  3001               	movlw	1
   634  06ED  120A  118A  26FC  120A  118A  	fcall	_LcdSetCursor
   635  06F2                     l978:
   636                           
   637                           ;main.c: 93:         LcdWriteChar('a');
   638  06F2  3061               	movlw	97
   639  06F3  120A  118A  26AD  120A  118A  	fcall	_LcdWriteChar
   640  06F8  2EEA               	goto	l976
   641  06F9  120A  118A  2800   	ljmp	start
   642  06FC                     __end_of_main:
   643                           
   644                           	psect	text1
   645  06AD                     __ptext1:	
   646 ;; *************** function _LcdWriteChar *****************
   647 ;; Defined at:
   648 ;;		line 56 in file "LCD8bits.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  value           1    wreg     unsigned char 
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  value           1    3[COMMON] unsigned char 
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, status,2, status,0, pclath, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         0       0       0       0       0
   663 ;;      Locals:         1       0       0       0       0
   664 ;;      Temps:          1       0       0       0       0
   665 ;;      Totals:         2       0       0       0       0
   666 ;;Total ram usage:        2 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; Hardware stack levels required when called:    1
   669 ;; This function calls:
   670 ;;		_LcdPort
   671 ;; This function is called by:
   672 ;;		_main
   673 ;;		_LcdWriteString
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           
   678                           ;psect for function _LcdWriteChar
   679  06AD                     _LcdWriteChar:
   680                           
   681                           ;incstack = 0
   682                           ; Regs used in _LcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
   683                           ;LcdWriteChar@value stored from wreg
   684  06AD  00F3               	movwf	LcdWriteChar@value
   685  06AE                     l790:
   686                           
   687                           ;LCD8bits.c: 57:     RE2 = 1;
   688  06AE  1283               	bcf	3,5	;RP0=0, select bank0
   689  06AF  1303               	bcf	3,6	;RP1=0, select bank0
   690  06B0  1509               	bsf	9,2	;volatile
   691  06B1                     l792:
   692                           
   693                           ;LCD8bits.c: 58:     LcdPort(value);
   694  06B1  0873               	movf	LcdWriteChar@value,w
   695  06B2  120A  118A  2764  120A  118A  	fcall	_LcdPort
   696  06B7                     l794:
   697                           
   698                           ;LCD8bits.c: 59:     RE0 = 1;
   699  06B7  1283               	bcf	3,5	;RP0=0, select bank0
   700  06B8  1303               	bcf	3,6	;RP1=0, select bank0
   701  06B9  1409               	bsf	9,0	;volatile
   702  06BA                     l796:
   703                           
   704                           ;LCD8bits.c: 60:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   705  06BA  300D               	movlw	13
   706  06BB  00F2               	movwf	??_LcdWriteChar
   707  06BC                     u397:
   708  06BC  0BF2               	decfsz	??_LcdWriteChar,f
   709  06BD  2EBC               	goto	u397
   710  06BE                     l798:
   711                           
   712                           ;LCD8bits.c: 61:     RE0 = 0;
   713  06BE  1283               	bcf	3,5	;RP0=0, select bank0
   714  06BF  1303               	bcf	3,6	;RP1=0, select bank0
   715  06C0  1009               	bcf	9,0	;volatile
   716  06C1                     l93:
   717  06C1  0008               	return
   718  06C2                     __end_of_LcdWriteChar:
   719                           
   720                           	psect	text2
   721  06FC                     __ptext2:	
   722 ;; *************** function _LcdSetCursor *****************
   723 ;; Defined at:
   724 ;;		line 29 in file "LCD8bits.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  row             1    wreg     unsigned char 
   727 ;;  column          1    5[COMMON] unsigned char 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  row             1    8[COMMON] unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         1       0       0       0       0
   740 ;;      Locals:         1       0       0       0       0
   741 ;;      Temps:          2       0       0       0       0
   742 ;;      Totals:         4       0       0       0       0
   743 ;;Total ram usage:        4 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    2
   746 ;; This function calls:
   747 ;;		_LcdCmd
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _LcdSetCursor
   755  06FC                     _LcdSetCursor:
   756                           
   757                           ;incstack = 0
   758                           ; Regs used in _LcdSetCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   759                           ;LcdSetCursor@row stored from wreg
   760  06FC  00F8               	movwf	LcdSetCursor@row
   761  06FD                     l952:
   762                           
   763                           ;LCD8bits.c: 30:     switch(row){
   764  06FD  2F0E               	goto	l960
   765  06FE                     l954:
   766                           
   767                           ;LCD8bits.c: 32:             LcdCmd(0x80 + column - 1);
   768  06FE  0875               	movf	LcdSetCursor@column,w
   769  06FF  3E7F               	addlw	127
   770  0700  120A  118A  26C2  120A  118A  	fcall	_LcdCmd
   771                           
   772                           ;LCD8bits.c: 33:             break;
   773  0705  2F1E               	goto	l87
   774  0706                     l956:
   775                           
   776                           ;LCD8bits.c: 35:             LcdCmd(0xC0 + column - 1);
   777  0706  0875               	movf	LcdSetCursor@column,w
   778  0707  3EBF               	addlw	191
   779  0708  120A  118A  26C2  120A  118A  	fcall	_LcdCmd
   780                           
   781                           ;LCD8bits.c: 36:             break;
   782  070D  2F1E               	goto	l87
   783  070E                     l960:
   784  070E  0878               	movf	LcdSetCursor@row,w
   785  070F  00F6               	movwf	??_LcdSetCursor
   786  0710  01F7               	clrf	??_LcdSetCursor+1
   787                           
   788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   789                           ; Switch size 1, requested type "simple"
   790                           ; Number of cases is 1, Range of values is 0 to 0
   791                           ; switch strategies available:
   792                           ; Name         Instructions Cycles
   793                           ; simple_byte            4     3 (average)
   794                           ; direct_byte           11     8 (fixed)
   795                           ; jumptable            260     6 (fixed)
   796                           ;	Chosen strategy is simple_byte
   797  0711  0877               	movf	??_LcdSetCursor+1,w
   798  0712  3A00               	xorlw	0	; case 0
   799  0713  1903               	skipnz
   800  0714  2F16               	goto	l1008
   801  0715  2F1E               	goto	l87
   802  0716                     l1008:
   803                           
   804                           ; Switch size 1, requested type "simple"
   805                           ; Number of cases is 2, Range of values is 1 to 2
   806                           ; switch strategies available:
   807                           ; Name         Instructions Cycles
   808                           ; simple_byte            7     4 (average)
   809                           ; direct_byte           17    11 (fixed)
   810                           ; jumptable            263     9 (fixed)
   811                           ;	Chosen strategy is simple_byte
   812  0716  0876               	movf	??_LcdSetCursor,w
   813  0717  3A01               	xorlw	1	; case 1
   814  0718  1903               	skipnz
   815  0719  2EFE               	goto	l954
   816  071A  3A03               	xorlw	3	; case 2
   817  071B  1903               	skipnz
   818  071C  2F06               	goto	l956
   819  071D  2F1E               	goto	l87
   820  071E                     l87:
   821  071E  0008               	return
   822  071F                     __end_of_LcdSetCursor:
   823                           
   824                           	psect	text3
   825  071F                     __ptext3:	
   826 ;; *************** function _LcdInit *****************
   827 ;; Defined at:
   828 ;;		line 41 in file "LCD8bits.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, status,2, status,0, pclath, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         0       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0
   844 ;;      Temps:          2       0       0       0       0
   845 ;;      Totals:         2       0       0       0       0
   846 ;;Total ram usage:        2 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    2
   849 ;; This function calls:
   850 ;;		_LcdCmd
   851 ;;		_LcdPort
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           
   858                           ;psect for function _LcdInit
   859  071F                     _LcdInit:
   860  071F                     l766:	
   861                           ;incstack = 0
   862                           ; Regs used in _LcdInit: [wreg+status,2+status,0+pclath+cstack]
   863                           
   864                           
   865                           ;LCD8bits.c: 42:     LcdPort(0x00);
   866  071F  3000               	movlw	0
   867  0720  120A  118A  2764  120A  118A  	fcall	_LcdPort
   868  0725                     l768:
   869                           
   870                           ;LCD8bits.c: 43:     _delay((unsigned long)((20)*(4000000/4000.0)));
   871  0725  301A               	movlw	26
   872  0726  00F6               	movwf	??_LcdInit+1
   873  0727  30F8               	movlw	248
   874  0728  00F5               	movwf	??_LcdInit
   875  0729                     u407:
   876  0729  0BF5               	decfsz	??_LcdInit,f
   877  072A  2F29               	goto	u407
   878  072B  0BF6               	decfsz	??_LcdInit+1,f
   879  072C  2F29               	goto	u407
   880  072D  0000               	nop
   881  072E                     l770:
   882                           
   883                           ;LCD8bits.c: 44:     LcdCmd(0x30);
   884  072E  3030               	movlw	48
   885  072F  120A  118A  26C2  120A  118A  	fcall	_LcdCmd
   886                           
   887                           ;LCD8bits.c: 45:     _delay((unsigned long)((5)*(4000000/4000.0)));
   888  0734  3007               	movlw	7
   889  0735  00F6               	movwf	??_LcdInit+1
   890  0736  307D               	movlw	125
   891  0737  00F5               	movwf	??_LcdInit
   892  0738                     u417:
   893  0738  0BF5               	decfsz	??_LcdInit,f
   894  0739  2F38               	goto	u417
   895  073A  0BF6               	decfsz	??_LcdInit+1,f
   896  073B  2F38               	goto	u417
   897  073C                     l772:
   898                           
   899                           ;LCD8bits.c: 46:     LcdCmd(0x30);
   900  073C  3030               	movlw	48
   901  073D  120A  118A  26C2  120A  118A  	fcall	_LcdCmd
   902  0742                     l774:
   903                           
   904                           ;LCD8bits.c: 47:     _delay((unsigned long)((11)*(4000000/4000.0)));
   905  0742  300F               	movlw	15
   906  0743  00F6               	movwf	??_LcdInit+1
   907  0744  3047               	movlw	71
   908  0745  00F5               	movwf	??_LcdInit
   909  0746                     u427:
   910  0746  0BF5               	decfsz	??_LcdInit,f
   911  0747  2F46               	goto	u427
   912  0748  0BF6               	decfsz	??_LcdInit+1,f
   913  0749  2F46               	goto	u427
   914  074A  2F4B               	nop2
   915                           
   916                           ;LCD8bits.c: 48:     LcdCmd(0x30);
   917  074B  3030               	movlw	48
   918  074C  120A  118A  26C2  120A  118A  	fcall	_LcdCmd
   919                           
   920                           ;LCD8bits.c: 50:     LcdCmd(0x38);
   921  0751  3038               	movlw	56
   922  0752  120A  118A  26C2  120A  118A  	fcall	_LcdCmd
   923                           
   924                           ;LCD8bits.c: 51:     LcdCmd(0x0C);
   925  0757  300C               	movlw	12
   926  0758  120A  118A  26C2  120A  118A  	fcall	_LcdCmd
   927                           
   928                           ;LCD8bits.c: 52:     LcdCmd(0x6);
   929  075D  3006               	movlw	6
   930  075E  120A  118A  26C2  120A  118A  	fcall	_LcdCmd
   931  0763                     l90:
   932  0763  0008               	return
   933  0764                     __end_of_LcdInit:
   934                           
   935                           	psect	text4
   936  06C2                     __ptext4:	
   937 ;; *************** function _LcdCmd *****************
   938 ;; Defined at:
   939 ;;		line 16 in file "LCD8bits.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  value           1    wreg     unsigned char 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  value           1    4[COMMON] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0, pclath, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       0       0       0       0
   954 ;;      Locals:         1       0       0       0       0
   955 ;;      Temps:          2       0       0       0       0
   956 ;;      Totals:         3       0       0       0       0
   957 ;;Total ram usage:        3 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    1
   960 ;; This function calls:
   961 ;;		_LcdPort
   962 ;; This function is called by:
   963 ;;		_LcdSetCursor
   964 ;;		_LcdInit
   965 ;;		_LcdClear
   966 ;;		_LcdShiftRight
   967 ;;		_LcdShiftLeft
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           
   972                           ;psect for function _LcdCmd
   973  06C2                     _LcdCmd:
   974                           
   975                           ;incstack = 0
   976                           ; Regs used in _LcdCmd: [wreg+status,2+status,0+pclath+cstack]
   977                           ;LcdCmd@value stored from wreg
   978  06C2  00F4               	movwf	LcdCmd@value
   979  06C3                     l752:
   980                           
   981                           ;LCD8bits.c: 17:     RE2 = 0;
   982  06C3  1283               	bcf	3,5	;RP0=0, select bank0
   983  06C4  1303               	bcf	3,6	;RP1=0, select bank0
   984  06C5  1109               	bcf	9,2	;volatile
   985  06C6                     l754:
   986                           
   987                           ;LCD8bits.c: 18:     LcdPort(value);
   988  06C6  0874               	movf	LcdCmd@value,w
   989  06C7  120A  118A  2764  120A  118A  	fcall	_LcdPort
   990  06CC                     l756:
   991                           
   992                           ;LCD8bits.c: 19:     RE0 = 1;
   993  06CC  1283               	bcf	3,5	;RP0=0, select bank0
   994  06CD  1303               	bcf	3,6	;RP1=0, select bank0
   995  06CE  1409               	bsf	9,0	;volatile
   996  06CF                     l758:
   997                           
   998                           ;LCD8bits.c: 20:     _delay((unsigned long)((4)*(4000000/4000.0)));
   999  06CF  3006               	movlw	6
  1000  06D0  00F3               	movwf	??_LcdCmd+1
  1001  06D1  3030               	movlw	48
  1002  06D2  00F2               	movwf	??_LcdCmd
  1003  06D3                     u437:
  1004  06D3  0BF2               	decfsz	??_LcdCmd,f
  1005  06D4  2ED3               	goto	u437
  1006  06D5  0BF3               	decfsz	??_LcdCmd+1,f
  1007  06D6  2ED3               	goto	u437
  1008  06D7  0000               	nop
  1009  06D8                     l760:
  1010                           
  1011                           ;LCD8bits.c: 21:     RE0 = 0;
  1012  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  1013  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  1014  06DA  1009               	bcf	9,0	;volatile
  1015  06DB                     l77:
  1016  06DB  0008               	return
  1017  06DC                     __end_of_LcdCmd:
  1018                           
  1019                           	psect	text5
  1020  0764                     __ptext5:	
  1021 ;; *************** function _LcdPort *****************
  1022 ;; Defined at:
  1023 ;;		line 3 in file "LCD8bits.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  value           1    wreg     unsigned char 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  value           1    1[COMMON] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       0       0       0       0
  1038 ;;      Locals:         1       0       0       0       0
  1039 ;;      Temps:          1       0       0       0       0
  1040 ;;      Totals:         2       0       0       0       0
  1041 ;;Total ram usage:        2 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_LcdCmd
  1047 ;;		_LcdInit
  1048 ;;		_LcdWriteChar
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           
  1053                           ;psect for function _LcdPort
  1054  0764                     _LcdPort:
  1055                           
  1056                           ;incstack = 0
  1057                           ; Regs used in _LcdPort: [wreg+status,2+status,0]
  1058                           ;LcdPort@value stored from wreg
  1059  0764  00F1               	movwf	LcdPort@value
  1060  0765                     l748:
  1061                           
  1062                           ;LCD8bits.c: 6:     RD0 = value &1;
  1063  0765  1871               	btfsc	LcdPort@value,0
  1064  0766  2F68               	goto	u11
  1065  0767  2F6C               	goto	u10
  1066  0768                     u11:
  1067  0768  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0769  1303               	bcf	3,6	;RP1=0, select bank0
  1069  076A  1408               	bsf	8,0	;volatile
  1070  076B  2F6F               	goto	u24
  1071  076C                     u10:
  1072  076C  1283               	bcf	3,5	;RP0=0, select bank0
  1073  076D  1303               	bcf	3,6	;RP1=0, select bank0
  1074  076E  1008               	bcf	8,0	;volatile
  1075  076F                     u24:
  1076  076F                     l750:
  1077                           
  1078                           ;LCD8bits.c: 7:     RD1 = (value & 2) >> 1;
  1079  076F  0871               	movf	LcdPort@value,w
  1080  0770  00F0               	movwf	??_LcdPort
  1081  0771  3001               	movlw	1
  1082  0772                     u35:
  1083  0772  1003               	clrc
  1084  0773  0CF0               	rrf	??_LcdPort,f
  1085  0774  3EFF               	addlw	-1
  1086  0775  1D03               	skipz
  1087  0776  2F72               	goto	u35
  1088  0777  1870               	btfsc	??_LcdPort,0
  1089  0778  2F7A               	goto	u41
  1090  0779  2F7E               	goto	u40
  1091  077A                     u41:
  1092  077A  1283               	bcf	3,5	;RP0=0, select bank0
  1093  077B  1303               	bcf	3,6	;RP1=0, select bank0
  1094  077C  1488               	bsf	8,1	;volatile
  1095  077D  2F81               	goto	u54
  1096  077E                     u40:
  1097  077E  1283               	bcf	3,5	;RP0=0, select bank0
  1098  077F  1303               	bcf	3,6	;RP1=0, select bank0
  1099  0780  1088               	bcf	8,1	;volatile
  1100  0781                     u54:
  1101                           
  1102                           ;LCD8bits.c: 8:     RD2 = (value & 4) >> 2;
  1103  0781  0871               	movf	LcdPort@value,w
  1104  0782  00F0               	movwf	??_LcdPort
  1105  0783  3002               	movlw	2
  1106  0784                     u65:
  1107  0784  1003               	clrc
  1108  0785  0CF0               	rrf	??_LcdPort,f
  1109  0786  3EFF               	addlw	-1
  1110  0787  1D03               	skipz
  1111  0788  2F84               	goto	u65
  1112  0789  1870               	btfsc	??_LcdPort,0
  1113  078A  2F8C               	goto	u71
  1114  078B  2F90               	goto	u70
  1115  078C                     u71:
  1116  078C  1283               	bcf	3,5	;RP0=0, select bank0
  1117  078D  1303               	bcf	3,6	;RP1=0, select bank0
  1118  078E  1508               	bsf	8,2	;volatile
  1119  078F  2F93               	goto	u84
  1120  0790                     u70:
  1121  0790  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0791  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0792  1108               	bcf	8,2	;volatile
  1124  0793                     u84:
  1125                           
  1126                           ;LCD8bits.c: 9:     RD3 = (value &8) >> 3;
  1127  0793  0871               	movf	LcdPort@value,w
  1128  0794  00F0               	movwf	??_LcdPort
  1129  0795  3003               	movlw	3
  1130  0796                     u95:
  1131  0796  1003               	clrc
  1132  0797  0CF0               	rrf	??_LcdPort,f
  1133  0798  3EFF               	addlw	-1
  1134  0799  1D03               	skipz
  1135  079A  2F96               	goto	u95
  1136  079B  1870               	btfsc	??_LcdPort,0
  1137  079C  2F9E               	goto	u101
  1138  079D  2FA2               	goto	u100
  1139  079E                     u101:
  1140  079E  1283               	bcf	3,5	;RP0=0, select bank0
  1141  079F  1303               	bcf	3,6	;RP1=0, select bank0
  1142  07A0  1588               	bsf	8,3	;volatile
  1143  07A1  2FA5               	goto	u114
  1144  07A2                     u100:
  1145  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  1146  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  1147  07A4  1188               	bcf	8,3	;volatile
  1148  07A5                     u114:
  1149                           
  1150                           ;LCD8bits.c: 10:     RD4 = (value & 16)>>4;
  1151  07A5  0871               	movf	LcdPort@value,w
  1152  07A6  00F0               	movwf	??_LcdPort
  1153  07A7  3004               	movlw	4
  1154  07A8                     u125:
  1155  07A8  1003               	clrc
  1156  07A9  0CF0               	rrf	??_LcdPort,f
  1157  07AA  3EFF               	addlw	-1
  1158  07AB  1D03               	skipz
  1159  07AC  2FA8               	goto	u125
  1160  07AD  1870               	btfsc	??_LcdPort,0
  1161  07AE  2FB0               	goto	u131
  1162  07AF  2FB4               	goto	u130
  1163  07B0                     u131:
  1164  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1165  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1166  07B2  1608               	bsf	8,4	;volatile
  1167  07B3  2FB7               	goto	u144
  1168  07B4                     u130:
  1169  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1170  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1171  07B6  1208               	bcf	8,4	;volatile
  1172  07B7                     u144:
  1173                           
  1174                           ;LCD8bits.c: 11:     RD5 = (value & 32) >> 5 ;
  1175  07B7  0871               	movf	LcdPort@value,w
  1176  07B8  00F0               	movwf	??_LcdPort
  1177  07B9  3005               	movlw	5
  1178  07BA                     u155:
  1179  07BA  1003               	clrc
  1180  07BB  0CF0               	rrf	??_LcdPort,f
  1181  07BC  3EFF               	addlw	-1
  1182  07BD  1D03               	skipz
  1183  07BE  2FBA               	goto	u155
  1184  07BF  1870               	btfsc	??_LcdPort,0
  1185  07C0  2FC2               	goto	u161
  1186  07C1  2FC6               	goto	u160
  1187  07C2                     u161:
  1188  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1189  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1190  07C4  1688               	bsf	8,5	;volatile
  1191  07C5  2FC9               	goto	u174
  1192  07C6                     u160:
  1193  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1194  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1195  07C8  1288               	bcf	8,5	;volatile
  1196  07C9                     u174:
  1197                           
  1198                           ;LCD8bits.c: 12:     RD6 = (value & 64) >> 6;
  1199  07C9  0871               	movf	LcdPort@value,w
  1200  07CA  00F0               	movwf	??_LcdPort
  1201  07CB  3006               	movlw	6
  1202  07CC                     u185:
  1203  07CC  1003               	clrc
  1204  07CD  0CF0               	rrf	??_LcdPort,f
  1205  07CE  3EFF               	addlw	-1
  1206  07CF  1D03               	skipz
  1207  07D0  2FCC               	goto	u185
  1208  07D1  1870               	btfsc	??_LcdPort,0
  1209  07D2  2FD4               	goto	u191
  1210  07D3  2FD8               	goto	u190
  1211  07D4                     u191:
  1212  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1213  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1214  07D6  1708               	bsf	8,6	;volatile
  1215  07D7  2FDB               	goto	u204
  1216  07D8                     u190:
  1217  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  1218  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  1219  07DA  1308               	bcf	8,6	;volatile
  1220  07DB                     u204:
  1221                           
  1222                           ;LCD8bits.c: 13:     RD7 = (value & 128) >> 7;
  1223  07DB  0871               	movf	LcdPort@value,w
  1224  07DC  00F0               	movwf	??_LcdPort
  1225  07DD  3007               	movlw	7
  1226  07DE                     u215:
  1227  07DE  1003               	clrc
  1228  07DF  0CF0               	rrf	??_LcdPort,f
  1229  07E0  3EFF               	addlw	-1
  1230  07E1  1D03               	skipz
  1231  07E2  2FDE               	goto	u215
  1232  07E3  1870               	btfsc	??_LcdPort,0
  1233  07E4  2FE6               	goto	u221
  1234  07E5  2FEA               	goto	u220
  1235  07E6                     u221:
  1236  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1237  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1238  07E8  1788               	bsf	8,7	;volatile
  1239  07E9  2FED               	goto	u234
  1240  07EA                     u220:
  1241  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  1242  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  1243  07EC  1388               	bcf	8,7	;volatile
  1244  07ED                     u234:
  1245  07ED                     l74:
  1246  07ED  0008               	return
  1247  07EE                     __end_of_LcdPort:
  1248  007E                     btemp	set	126	;btemp
  1249  007E                     wtemp0	set	126
  1250                           
  1251                           	psect	config
  1252                           
  1253                           ;Config register CONFIG1 @ 0x2007
  1254                           ;	Oscillator Selection bits
  1255                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1256                           ;	Watchdog Timer Enable bit
  1257                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1258                           ;	Power-up Timer Enable bit
  1259                           ;	PWRTE = OFF, PWRT disabled
  1260                           ;	RE3/MCLR pin function select bit
  1261                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1262                           ;	Code Protection bit
  1263                           ;	CP = OFF, Program memory code protection is disabled
  1264                           ;	Data Code Protection bit
  1265                           ;	CPD = OFF, Data memory code protection is disabled
  1266                           ;	Brown Out Reset Selection bits
  1267                           ;	BOREN = OFF, BOR disabled
  1268                           ;	Internal External Switchover bit
  1269                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1270                           ;	Fail-Safe Clock Monitor Enabled bit
  1271                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1272                           ;	Low Voltage Programming Enable bit
  1273                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1274                           ;	In-Circuit Debugger Mode bit
  1275                           ;	DEBUG = 0x1, unprogrammed default
  1276  2007                     	org	8199
  1277  2007  20D4               	dw	8404
  1278                           
  1279                           ;Config register CONFIG2 @ 0x2008
  1280                           ;	Brown-out Reset Selection bit
  1281                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1282                           ;	Flash Program Memory Self Write Enable bits
  1283                           ;	WRT = OFF, Write protection off
  1284  2008                     	org	8200
  1285  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__readADC	PTR unsigned char  size(1) Largest target is 12
		 -> ADC_VALUE(BANK0[12]), 


Critical Paths under _main in COMMON

    _main->_LcdSetCursor
    _LcdWriteChar->_LcdPort
    _LcdSetCursor->_LcdCmd
    _LcdInit->_LcdCmd
    _LcdCmd->_LcdPort

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     668
                                              9 COMMON     1     1      0
                            _LcdInit
                       _LcdSetCursor
                       _LcdWriteChar
 ---------------------------------------------------------------------------------
 (1) _LcdWriteChar                                         2     2      0     135
                                              2 COMMON     2     2      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (1) _LcdSetCursor                                         4     3      1     277
                                              5 COMMON     4     3      1
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              2     2      0     255
                                              5 COMMON     2     2      0
                             _LcdCmd
                            _LcdPort
 ---------------------------------------------------------------------------------
 (2) _LcdCmd                                               3     3      0     135
                                              2 COMMON     3     3      0
                            _LcdPort
 ---------------------------------------------------------------------------------
 (2) _LcdPort                                              2     2      0     120
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcdInit
     _LcdCmd
       _LcdPort
     _LcdPort
   _LcdSetCursor
     _LcdCmd
       _LcdPort
   _LcdWriteChar
     _LcdPort

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 14 17:03:04 2021

                     l74 07ED                       l90 0763                       l77 06DB  
                     l93 06C1                       l87 071E                       u10 076C  
                     u11 0768                       u40 077E                       u24 076F  
                     u41 077A                       u35 0772                       u70 0790  
                     u54 0781                       u71 078C                       u65 0784  
                     u84 0793                       u95 0796                      l750 076F  
                    l760 06D8                      l752 06C3                      l754 06C6  
                    l770 072E                      l748 0765                      l756 06CC  
                    l772 073C                      l758 06CF                      l774 0742  
                    l766 071F                      l790 06AE                      l768 0725  
                    l960 070E                      l952 06FD                      l792 06B1  
                    l954 06FE                      l794 06B7                      l970 06E4  
                    l956 0706                      l796 06BA                      l972 06E5  
                    l798 06BE                      l974 06EA                      l966 06DC  
                    l976 06EA                      l968 06E0                      l978 06F2  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    _RE0 0048                      _RD3 0043                      u100 07A2  
                    _RD4 0044                      _RE2 004A                      u101 079E  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u130 07B4                      u114 07A5                      u131 07B0  
                    u220 07EA                      u204 07DB                      u221 07E6  
                    u125 07A8                      u215 07DE                      u160 07C6  
                    u144 07B7                      u161 07C2                      u234 07ED  
                    u155 07BA                      u190 07D8                      u174 07C9  
                    u191 07D4                      u407 0729                      u185 07CC  
                    u417 0738                      u427 0746                      u437 06D3  
                    u397 06BC                     l1008 0716                     _main 06DC  
                   btemp 007E                     start 0000          LcdSetCursor@row 0078  
        __end_of_LcdInit 0764          __end_of_LcdPort 07EE     __end_of_LcdSetCursor 071F  
                  ?_main 0070                    _ANSEL 0188                    _RCREG 001A  
                  _SPBRG 0099                    _TRISD 0088                    _TRISE 0089  
                  _TXREG 0019                    status 0003                    wtemp0 007E  
   __end_of_LcdWriteChar 06C2          __initialization 07EE             __end_of_main 06FC  
                 ??_main 0079                   _ADRESH 001E                   _ANSELH 0189  
              ??_LcdInit 0075                ??_LcdPort 0070                   _LcdCmd 06C2  
__end_of__initialization 07FC    __size_of_LcdSetCursor 0023        LcdWriteChar@value 0073  
         __pcstackCOMMON 0070    __size_of_LcdWriteChar 0015             _LcdSetCursor 06FC  
             __pbssBANK0 0020                  ?_LcdCmd 0070               __pmaintext 06DC  
           _LcdWriteChar 06AD                  _LcdInit 071F                  _LcdPort 0764  
              _ADC_VALUE 0020          __size_of_LcdCmd 001A                  __ptext1 06AD  
                __ptext2 06FC                  __ptext3 071F                  __ptext4 06C2  
                __ptext5 0764     end_of_initialization 07FC                _RCSTAbits 0018  
              _TRISCbits 0087       LcdSetCursor@column 0075                _TXSTAbits 0098  
         __end_of_LcdCmd 06DC      start_initialization 07EE                 ??_LcdCmd 0072  
              ___latbits 0002                 ?_LcdInit 0070                 ?_LcdPort 0070  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of_LcdInit 0045         __size_of_LcdPort 008A  
           LcdPort@value 0071              LcdCmd@value 0074            ?_LcdSetCursor 0075  
          __size_of_main 0020            ?_LcdWriteChar 0070               _INTCONbits 000B  
         ??_LcdSetCursor 0076           ??_LcdWriteChar 0072  
