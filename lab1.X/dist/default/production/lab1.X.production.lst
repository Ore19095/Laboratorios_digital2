

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jan 26 09:48:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.20
    12                           ; Generated 12/02/2020 GMT
    13                           ; 
    14                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  008F                     	;# 
   168  0090                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0095                     	;# 
   176  0096                     	;# 
   177  0097                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009A                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  0105                     	;# 
   187  0107                     	;# 
   188  0108                     	;# 
   189  0109                     	;# 
   190  010C                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  0185                     	;# 
   196  0187                     	;# 
   197  0188                     	;# 
   198  0189                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  0008                     _PORTDbits	set	8
   202  0006                     _PORTB	set	6
   203  0008                     _PORTD	set	8
   204  0007                     _PORTC	set	7
   205  0005                     _PORTA	set	5
   206  0081                     _OPTION_REGbits	set	129
   207  0088                     _TRISD	set	136
   208  0087                     _TRISC	set	135
   209  0086                     _TRISB	set	134
   210  0085                     _TRISA	set	133
   211  0189                     _ANSELH	set	393
   212  0188                     _ANSEL	set	392
   213                           
   214                           	psect	cinit
   215  07FC                     start_initialization:	
   216                           ; #config settings
   217                           
   218  07FC                     __initialization:
   219  07FC                     end_of_initialization:	
   220                           ;End of C runtime variable initialization code
   221                           
   222  07FC                     __end_of__initialization:
   223  07FC  0183               	clrf	3
   224  07FD  120A  118A  2F74   	ljmp	_main	;jump to C main() function
   225                           
   226                           	psect	cstackCOMMON
   227  0070                     __pcstackCOMMON:
   228  0070                     ?_semaforo:
   229  0070                     ??_semaforo:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?_main:	
   233                           ; 1 bytes @ 0x0
   234                           
   235                           
   236                           ; 1 bytes @ 0x0
   237  0070                     	ds	3
   238  0073                     ??_main:
   239                           
   240                           ; 1 bytes @ 0x3
   241  0073                     	ds	3
   242  0076                     main@inicio:
   243                           
   244                           ; 1 bytes @ 0x6
   245  0076                     	ds	1
   246  0077                     main@puertobAnterior:
   247                           
   248                           ; 1 bytes @ 0x7
   249  0077                     	ds	1
   250  0078                     main@puertobActual:
   251                           
   252                           ; 1 bytes @ 0x8
   253  0078                     	ds	1
   254                           
   255                           	psect	maintext
   256  0774                     __pmaintext:	
   257 ;;
   258 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   259 ;;
   260 ;; *************** function _main *****************
   261 ;; Defined at:
   262 ;;		line 40 in file "main.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;  puertobActua    1    8[COMMON] unsigned char 
   267 ;;  puertobAnter    1    7[COMMON] unsigned char 
   268 ;;  inicio          1    6[COMMON] unsigned char 
   269 ;;  contadorJ2      1    0        unsigned char 
   270 ;;  contadorJ1      1    0        unsigned char 
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, status,2, status,0, pclath, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : B00/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   280 ;;      Params:         0       0       0       0       0
   281 ;;      Locals:         5       0       0       0       0
   282 ;;      Temps:          1       0       0       0       0
   283 ;;      Totals:         6       0       0       0       0
   284 ;;Total ram usage:        6 bytes
   285 ;; Hardware stack levels required when called:    1
   286 ;; This function calls:
   287 ;;		_semaforo
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           
   294                           ;psect for function _main
   295  0774                     _main:
   296  0774                     l657:	
   297                           ;incstack = 0
   298                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   299                           
   300                           
   301                           ;main.c: 42: ANSEL = 0;
   302  0774  1683               	bsf	3,5	;RP0=1, select bank3
   303  0775  1703               	bsf	3,6	;RP1=1, select bank3
   304  0776  0188               	clrf	8	;volatile
   305                           
   306                           ;main.c: 43: ANSELH = 0;
   307  0777  0189               	clrf	9	;volatile
   308                           
   309                           ;main.c: 44: TRISA = 0;
   310  0778  1683               	bsf	3,5	;RP0=1, select bank1
   311  0779  1303               	bcf	3,6	;RP1=0, select bank1
   312  077A  0185               	clrf	5	;volatile
   313  077B                     l659:
   314                           
   315                           ;main.c: 45: TRISB = 255;
   316  077B  30FF               	movlw	255
   317  077C  0086               	movwf	6	;volatile
   318  077D                     l661:
   319                           
   320                           ;main.c: 46: TRISC = 0;
   321  077D  0187               	clrf	7	;volatile
   322  077E                     l663:
   323                           
   324                           ;main.c: 47: TRISD = 0;
   325  077E  0188               	clrf	8	;volatile
   326  077F                     l665:
   327                           
   328                           ;main.c: 48: PORTA = 0;
   329  077F  1283               	bcf	3,5	;RP0=0, select bank0
   330  0780  1303               	bcf	3,6	;RP1=0, select bank0
   331  0781  0185               	clrf	5	;volatile
   332  0782                     l667:
   333                           
   334                           ;main.c: 49: PORTC = 0;
   335  0782  0187               	clrf	7	;volatile
   336  0783                     l669:
   337                           
   338                           ;main.c: 50: PORTD = 0;
   339  0783  0188               	clrf	8	;volatile
   340  0784                     l671:
   341                           
   342                           ;main.c: 52: OPTION_REGbits.nRBPU = 0;
   343  0784  1683               	bsf	3,5	;RP0=1, select bank1
   344  0785  1303               	bcf	3,6	;RP1=0, select bank1
   345  0786  1381               	bcf	1,7	;volatile
   346  0787                     l673:
   347                           
   348                           ;main.c: 53: char inicio = 0;
   349  0787  01F6               	clrf	main@inicio
   350  0788                     l675:
   351  0788                     l677:
   352  0788                     l679:
   353  0788                     l681:
   354                           
   355                           ;main.c: 56: char puertobActual = 1;
   356  0788  01F8               	clrf	main@puertobActual
   357  0789  0AF8               	incf	main@puertobActual,f
   358  078A                     l683:
   359                           
   360                           ;main.c: 58: puertobAnterior = puertobActual;
   361  078A  0878               	movf	main@puertobActual,w
   362  078B  00F3               	movwf	??_main
   363  078C  0873               	movf	??_main,w
   364  078D  00F7               	movwf	main@puertobAnterior
   365  078E                     l685:
   366                           
   367                           ;main.c: 59: _delay((unsigned long)((100)*(4000000/4000000.0)));
   368  078E  3021               	movlw	33
   369  078F  00F3               	movwf	??_main
   370  0790                     u127:
   371  0790  0BF3               	decfsz	??_main,f
   372  0791  2F90               	goto	u127
   373  0792                     l687:
   374                           
   375                           ;main.c: 60: puertobActual = PORTB;
   376  0792  1283               	bcf	3,5	;RP0=0, select bank0
   377  0793  1303               	bcf	3,6	;RP1=0, select bank0
   378  0794  0806               	movf	6,w	;volatile
   379  0795  00F3               	movwf	??_main
   380  0796  0873               	movf	??_main,w
   381  0797  00F8               	movwf	main@puertobActual
   382  0798                     l689:
   383                           
   384                           ;main.c: 61: if ((puertobAnterior & 1) == 0) {
   385  0798  1877               	btfsc	main@puertobAnterior,0
   386  0799  2F9B               	goto	u11
   387  079A  2F9C               	goto	u10
   388  079B                     u11:
   389  079B  2F8A               	goto	l683
   390  079C                     u10:
   391  079C                     l691:
   392                           
   393                           ;main.c: 62: if ((puertobActual & 1) == 1) {
   394  079C  1C78               	btfss	main@puertobActual,0
   395  079D  2F9F               	goto	u21
   396  079E  2FA0               	goto	u20
   397  079F                     u21:
   398  079F  2FF3               	goto	l36
   399  07A0                     u20:
   400  07A0                     l693:
   401                           
   402                           ;main.c: 63: inicio = 1;
   403  07A0  01F6               	clrf	main@inicio
   404  07A1  0AF6               	incf	main@inicio,f
   405  07A2                     l695:
   406                           
   407                           ;main.c: 64: semaforo();
   408  07A2  120A  118A  274B  120A  118A  	fcall	_semaforo
   409  07A7                     l697:
   410                           
   411                           ;main.c: 65: PORTA = 1;
   412  07A7  3001               	movlw	1
   413  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   414  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   415  07AA  0085               	movwf	5	;volatile
   416  07AB                     l699:
   417                           
   418                           ;main.c: 66: PORTC = 1;
   419  07AB  3001               	movlw	1
   420  07AC  0087               	movwf	7	;volatile
   421  07AD  2FF3               	goto	l36
   422  07AE                     l701:
   423                           
   424                           ;main.c: 69: puertobAnterior = puertobActual;
   425  07AE  0878               	movf	main@puertobActual,w
   426  07AF  00F3               	movwf	??_main
   427  07B0  0873               	movf	??_main,w
   428  07B1  00F7               	movwf	main@puertobAnterior
   429                           
   430                           ;main.c: 70: _delay((unsigned long)((100)*(4000000/4000000.0)));
   431  07B2  3021               	movlw	33
   432  07B3  00F3               	movwf	??_main
   433  07B4                     u137:
   434  07B4  0BF3               	decfsz	??_main,f
   435  07B5  2FB4               	goto	u137
   436                           
   437                           ;main.c: 71: puertobActual = PORTB;
   438  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   439  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   440  07B8  0806               	movf	6,w	;volatile
   441  07B9  00F3               	movwf	??_main
   442  07BA  0873               	movf	??_main,w
   443  07BB  00F8               	movwf	main@puertobActual
   444  07BC                     l703:
   445                           
   446                           ;main.c: 72: if ((puertobAnterior & 2) == 0 && (puertobActual & 2) == 2)
   447  07BC  18F7               	btfsc	main@puertobAnterior,1
   448  07BD  2FBF               	goto	u31
   449  07BE  2FC0               	goto	u30
   450  07BF                     u31:
   451  07BF  2FC8               	goto	l709
   452  07C0                     u30:
   453  07C0                     l705:
   454  07C0  1CF8               	btfss	main@puertobActual,1
   455  07C1  2FC3               	goto	u41
   456  07C2  2FC4               	goto	u40
   457  07C3                     u41:
   458  07C3  2FC8               	goto	l709
   459  07C4                     u40:
   460  07C4                     l707:
   461                           
   462                           ;main.c: 73: PORTA = PORTA << 1;
   463  07C4  0805               	movf	5,w	;volatile
   464  07C5  00F3               	movwf	??_main
   465  07C6  0773               	addwf	??_main,w
   466  07C7  0085               	movwf	5	;volatile
   467  07C8                     l709:
   468                           
   469                           ;main.c: 75: if( (puertobAnterior & 4) == 0 && (puertobActual & 4) == 4)
   470  07C8  1977               	btfsc	main@puertobAnterior,2
   471  07C9  2FCB               	goto	u51
   472  07CA  2FCC               	goto	u50
   473  07CB                     u51:
   474  07CB  2FD4               	goto	l39
   475  07CC                     u50:
   476  07CC                     l711:
   477  07CC  1D78               	btfss	main@puertobActual,2
   478  07CD  2FCF               	goto	u61
   479  07CE  2FD0               	goto	u60
   480  07CF                     u61:
   481  07CF  2FD4               	goto	l39
   482  07D0                     u60:
   483  07D0                     l713:
   484                           
   485                           ;main.c: 76: PORTC = PORTC << 1 ;
   486  07D0  0807               	movf	7,w	;volatile
   487  07D1  00F3               	movwf	??_main
   488  07D2  0773               	addwf	??_main,w
   489  07D3  0087               	movwf	7	;volatile
   490  07D4                     l39:
   491                           
   492                           ;main.c: 79: if ( PORTA == 0 || PORTC == 0 ){
   493  07D4  0805               	movf	5,w	;volatile
   494  07D5  1903               	btfsc	3,2
   495  07D6  2FD8               	goto	u71
   496  07D7  2FD9               	goto	u70
   497  07D8                     u71:
   498  07D8  2FDE               	goto	l717
   499  07D9                     u70:
   500  07D9                     l715:
   501  07D9  0807               	movf	7,w	;volatile
   502  07DA  1D03               	btfss	3,2
   503  07DB  2FDD               	goto	u81
   504  07DC  2FDE               	goto	u80
   505  07DD                     u81:
   506  07DD  2FF3               	goto	l36
   507  07DE                     u80:
   508  07DE                     l717:
   509                           
   510                           ;main.c: 82: inicio = 0;
   511  07DE  01F6               	clrf	main@inicio
   512  07DF                     l719:
   513                           
   514                           ;main.c: 89: if ( PORTA < PORTC ) PORTDbits.RD3 = 1;
   515  07DF  0807               	movf	7,w	;volatile
   516  07E0  0205               	subwf	5,w	;volatile
   517  07E1  1803               	skipnc
   518  07E2  2FE4               	goto	u91
   519  07E3  2FE5               	goto	u90
   520  07E4                     u91:
   521  07E4  2FE7               	goto	l723
   522  07E5                     u90:
   523  07E5                     l721:
   524  07E5  1588               	bsf	8,3	;volatile
   525  07E6  2FF3               	goto	l36
   526  07E7                     l723:
   527                           
   528                           ;main.c: 90: else if( PORTC < PORTA ) PORTDbits.RD4 = 1;
   529  07E7  0805               	movf	5,w	;volatile
   530  07E8  0207               	subwf	7,w	;volatile
   531  07E9  1803               	skipnc
   532  07EA  2FEC               	goto	u101
   533  07EB  2FED               	goto	u100
   534  07EC                     u101:
   535  07EC  2FEF               	goto	l727
   536  07ED                     u100:
   537  07ED                     l725:
   538  07ED  1608               	bsf	8,4	;volatile
   539  07EE  2FF3               	goto	l36
   540  07EF                     l727:
   541                           
   542                           ;main.c: 91: else PORTD |= 24;
   543  07EF  3018               	movlw	24
   544  07F0  00F3               	movwf	??_main
   545  07F1  0873               	movf	??_main,w
   546  07F2  0488               	iorwf	8,f	;volatile
   547  07F3                     l36:
   548  07F3  0876               	movf	main@inicio,w
   549  07F4  1D03               	btfss	3,2
   550  07F5  2FF7               	goto	u111
   551  07F6  2FF8               	goto	u110
   552  07F7                     u111:
   553  07F7  2FAE               	goto	l701
   554  07F8                     u110:
   555  07F8  2F8A               	goto	l683
   556  07F9  120A  118A  2800   	ljmp	start
   557  07FC                     __end_of_main:
   558                           
   559                           	psect	text1
   560  074B                     __ptext1:	
   561 ;; *************** function _semaforo *****************
   562 ;; Defined at:
   563 ;;		line 102 in file "main.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   577 ;;      Params:         0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0
   579 ;;      Temps:          3       0       0       0       0
   580 ;;      Totals:         3       0       0       0       0
   581 ;;Total ram usage:        3 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; This function calls:
   584 ;;		Nothing
   585 ;; This function is called by:
   586 ;;		_main
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           
   591                           ;psect for function _semaforo
   592  074B                     _semaforo:
   593  074B                     l645:	
   594                           ;incstack = 0
   595                           ; Regs used in _semaforo: [wreg+status,2]
   596                           
   597                           
   598                           ;main.c: 103: PORTA = PORTC = 0;
   599  074B  1283               	bcf	3,5	;RP0=0, select bank0
   600  074C  1303               	bcf	3,6	;RP1=0, select bank0
   601  074D  0187               	clrf	7	;volatile
   602  074E  0185               	clrf	5	;volatile
   603  074F                     l647:
   604                           
   605                           ;main.c: 104: PORTD = 1;
   606  074F  3001               	movlw	1
   607  0750  0088               	movwf	8	;volatile
   608  0751                     l649:
   609                           
   610                           ;main.c: 105: _delay((unsigned long)((500)*(4000000/4000.0)));
   611  0751  3003               	movlw	3
   612  0752  00F2               	movwf	??_semaforo+2
   613  0753  308A               	movlw	138
   614  0754  00F1               	movwf	??_semaforo+1
   615  0755  3055               	movlw	85
   616  0756  00F0               	movwf	??_semaforo
   617  0757                     u147:
   618  0757  0BF0               	decfsz	??_semaforo,f
   619  0758  2F57               	goto	u147
   620  0759  0BF1               	decfsz	??_semaforo+1,f
   621  075A  2F57               	goto	u147
   622  075B  0BF2               	decfsz	??_semaforo+2,f
   623  075C  2F57               	goto	u147
   624  075D  2F5E               	nop2
   625  075E                     l651:
   626                           
   627                           ;main.c: 106: PORTD = 2;
   628  075E  3002               	movlw	2
   629  075F  1283               	bcf	3,5	;RP0=0, select bank0
   630  0760  1303               	bcf	3,6	;RP1=0, select bank0
   631  0761  0088               	movwf	8	;volatile
   632  0762                     l653:
   633                           
   634                           ;main.c: 107: _delay((unsigned long)((500)*(4000000/4000.0)));
   635  0762  3003               	movlw	3
   636  0763  00F2               	movwf	??_semaforo+2
   637  0764  308A               	movlw	138
   638  0765  00F1               	movwf	??_semaforo+1
   639  0766  3055               	movlw	85
   640  0767  00F0               	movwf	??_semaforo
   641  0768                     u157:
   642  0768  0BF0               	decfsz	??_semaforo,f
   643  0769  2F68               	goto	u157
   644  076A  0BF1               	decfsz	??_semaforo+1,f
   645  076B  2F68               	goto	u157
   646  076C  0BF2               	decfsz	??_semaforo+2,f
   647  076D  2F68               	goto	u157
   648  076E  2F6F               	nop2
   649  076F                     l655:
   650                           
   651                           ;main.c: 108: PORTD = 4;
   652  076F  3004               	movlw	4
   653  0770  1283               	bcf	3,5	;RP0=0, select bank0
   654  0771  1303               	bcf	3,6	;RP1=0, select bank0
   655  0772  0088               	movwf	8	;volatile
   656  0773                     l53:
   657  0773  0008               	return
   658  0774                     __end_of_semaforo:
   659  007E                     btemp	set	126	;btemp
   660  007E                     wtemp0	set	126
   661                           
   662                           	psect	config
   663                           
   664                           ;Config register CONFIG1 @ 0x2007
   665                           ;	Oscillator Selection bits
   666                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   667                           ;	Watchdog Timer Enable bit
   668                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   669                           ;	Power-up Timer Enable bit
   670                           ;	PWRTE = OFF, PWRT disabled
   671                           ;	RE3/MCLR pin function select bit
   672                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   673                           ;	Code Protection bit
   674                           ;	CP = OFF, Program memory code protection is disabled
   675                           ;	Data Code Protection bit
   676                           ;	CPD = OFF, Data memory code protection is disabled
   677                           ;	Brown Out Reset Selection bits
   678                           ;	BOREN = OFF, BOR disabled
   679                           ;	Internal External Switchover bit
   680                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   681                           ;	Fail-Safe Clock Monitor Enabled bit
   682                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   683                           ;	Low Voltage Programming Enable bit
   684                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   685                           ;	In-Circuit Debugger Mode bit
   686                           ;	DEBUG = 0x1, unprogrammed default
   687  2007                     	org	8199
   688  2007  20D4               	dw	8404
   689                           
   690                           ;Config register CONFIG2 @ 0x2008
   691                           ;	Brown-out Reset Selection bit
   692                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   693                           ;	Flash Program Memory Self Write Enable bits
   694                           ;	WRT = OFF, Write protection off
   695  2008                     	org	8200
   696  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     135
                                              3 COMMON     6     6      0
                           _semaforo
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _semaforo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jan 26 09:48:00 2021

                     l36 07F3                       l53 0773                       l39 07D4  
                     u10 079C                       u11 079B                       u20 07A0  
                     u21 079F                       u30 07C0                       u31 07BF  
                     u40 07C4                       u41 07C3                       u50 07CC  
                     u51 07CB                       u60 07D0                       u61 07CF  
                     u70 07D9                       u71 07D8                       u80 07DE  
                     u81 07DD                       u90 07E5                       u91 07E4  
                    l701 07AE                      l711 07CC                      l703 07BC  
                    l721 07E5                      l713 07D0                      l705 07C0  
                    l651 075E                      l723 07E7                      l715 07D9  
                    l707 07C4                      l653 0762                      l645 074B  
                    l725 07ED                      l717 07DE                      l709 07C8  
                    l661 077D                      l655 076F                      l647 074F  
                    l727 07EF                      l719 07DF                      l671 0784  
                    l663 077E                      l649 0751                      l681 0788  
                    l673 0787                      l665 077F                      l657 0774  
                    l691 079C                      l683 078A                      l675 0788  
                    l667 0782                      l659 077B                      l693 07A0  
                    l685 078E                      l677 0788                      l669 0783  
                    l695 07A2                      l687 0792                      l679 0788  
                    l697 07A7                      l689 0798                      l699 07AB  
                    u100 07ED                      u101 07EC                      u110 07F8  
                    u111 07F7                      u127 0790                      u137 07B4  
                    u147 0757                      u157 0768                     _main 0774  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0073                   _ANSELH 0189  
       __end_of_semaforo 0774  __end_of__initialization 07FC           __pcstackCOMMON 0070  
         _OPTION_REGbits 0081               __pmaintext 0774                ?_semaforo 0070  
                __ptext1 074B     end_of_initialization 07FC               ??_semaforo 0070  
              _PORTDbits 0008               main@inicio 0076      start_initialization 07FC  
              ___latbits 0002        __size_of_semaforo 0029        main@puertobActual 0078  
          __size_of_main 0088                 _semaforo 074B      main@puertobAnterior 0077  
