

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jan 22 12:24:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204                           
   205                           	psect	idataBANK0
   206  072C                     __pidataBANK0:
   207                           
   208                           ;initializer for _valores
   209  072C  3400               	retlw	0
   210  072D  3401               	retlw	1
   211  072E  3402               	retlw	2
   212  072F  3404               	retlw	4
   213  0730  3408               	retlw	8
   214  0731  3410               	retlw	16
   215  0732  3420               	retlw	32
   216  0733  3440               	retlw	64
   217  0734  3480               	retlw	128
   218  0006                     _PORTB	set	6
   219  0008                     _PORTD	set	8
   220  0007                     _PORTC	set	7
   221  0005                     _PORTA	set	5
   222  0081                     _OPTION_REGbits	set	129
   223  0088                     _TRISD	set	136
   224  0087                     _TRISC	set	135
   225  0086                     _TRISB	set	134
   226  0085                     _TRISA	set	133
   227  0189                     _ANSELH	set	393
   228  0188                     _ANSEL	set	392
   229                           
   230                           	psect	cinit
   231  07EE                     start_initialization:	
   232                           ; #config settings
   233                           
   234  07EE                     __initialization:
   235                           
   236                           ; Initialize objects allocated to BANK0
   237  07EE  1383               	bcf	3,7	;select IRP bank0
   238  07EF  3029               	movlw	low (__pdataBANK0+9)
   239  07F0  00FD               	movwf	btemp+-1
   240  07F1  3007               	movlw	high __pidataBANK0
   241  07F2  00FE               	movwf	btemp
   242  07F3  302C               	movlw	low __pidataBANK0
   243  07F4  00FF               	movwf	btemp+1
   244  07F5  3020               	movlw	low __pdataBANK0
   245  07F6  0084               	movwf	4
   246  07F7  120A  118A  2739  120A  118A  	fcall	init_ram0
   247  07FC                     end_of_initialization:	
   248                           ;End of C runtime variable initialization code
   249                           
   250  07FC                     __end_of__initialization:
   251  07FC  0183               	clrf	3
   252  07FD  120A  118A  2F6F   	ljmp	_main	;jump to C main() function
   253                           
   254                           	psect	dataBANK0
   255  0020                     __pdataBANK0:
   256  0020                     _valores:
   257  0020                     	ds	9
   258                           
   259                           	psect	inittext
   260  0735                     init_fetch0:	
   261                           ;	Called with low address in FSR and high address in W
   262                           
   263  0735  087E               	movf	btemp,w
   264  0736  008A               	movwf	10
   265  0737  087F               	movf	btemp+1,w
   266  0738  0082               	movwf	2
   267  0739                     init_ram0:	
   268                           ;Called with:
   269                           ;	high address of idata address in btemp 
   270                           ;	low address of idata address in btemp+1 
   271                           ;	low address of data in FSR
   272                           ;	high address + 1 of data in btemp-1
   273                           
   274  0739  120A  118A  2735  120A  118A  	fcall	init_fetch0
   275  073E  0080               	movwf	0
   276  073F  0A84               	incf	4,f
   277  0740  0804               	movf	4,w
   278  0741  067D               	xorwf	btemp+-1,w
   279  0742  1903               	btfsc	3,2
   280  0743  3400               	retlw	0
   281  0744  0AFF               	incf	btemp+1,f
   282  0745  1903               	btfsc	3,2
   283  0746  0AFE               	incf	btemp,f
   284  0747  2F39               	goto	init_ram0
   285                           
   286                           	psect	cstackCOMMON
   287  0070                     __pcstackCOMMON:
   288  0070                     ?_semaforo:
   289  0070                     ??_semaforo:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_main:	
   293                           ; 1 bytes @ 0x0
   294                           
   295                           
   296                           ; 1 bytes @ 0x0
   297  0070                     	ds	3
   298  0073                     ??_main:
   299                           
   300                           ; 1 bytes @ 0x3
   301  0073                     	ds	1
   302  0074                     main@inicio:
   303                           
   304                           ; 1 bytes @ 0x4
   305  0074                     	ds	1
   306  0075                     main@contadorJ1:
   307                           
   308                           ; 1 bytes @ 0x5
   309  0075                     	ds	1
   310  0076                     main@contadorJ2:
   311                           
   312                           ; 1 bytes @ 0x6
   313  0076                     	ds	1
   314  0077                     main@puertobAnterior:
   315                           
   316                           ; 1 bytes @ 0x7
   317  0077                     	ds	1
   318  0078                     main@puertobActual:
   319                           
   320                           ; 1 bytes @ 0x8
   321  0078                     	ds	1
   322                           
   323                           	psect	maintext
   324  076F                     __pmaintext:	
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 42 in file "main.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;  puertobActua    1    8[COMMON] unsigned char 
   335 ;;  puertobAnter    1    7[COMMON] unsigned char 
   336 ;;  contadorJ2      1    6[COMMON] unsigned char 
   337 ;;  contadorJ1      1    5[COMMON] unsigned char 
   338 ;;  inicio          1    4[COMMON] unsigned char 
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : B00/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   348 ;;      Params:         0       0       0       0       0
   349 ;;      Locals:         5       0       0       0       0
   350 ;;      Temps:          1       0       0       0       0
   351 ;;      Totals:         6       0       0       0       0
   352 ;;Total ram usage:        6 bytes
   353 ;; Hardware stack levels required when called:    1
   354 ;; This function calls:
   355 ;;		_semaforo
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           
   362                           ;psect for function _main
   363  076F                     _main:
   364  076F                     l709:	
   365                           ;incstack = 0
   366                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   367                           
   368                           
   369                           ;main.c: 44: ANSEL = 0;
   370  076F  1683               	bsf	3,5	;RP0=1, select bank3
   371  0770  1703               	bsf	3,6	;RP1=1, select bank3
   372  0771  0188               	clrf	8	;volatile
   373                           
   374                           ;main.c: 45: ANSELH = 0;
   375  0772  0189               	clrf	9	;volatile
   376                           
   377                           ;main.c: 46: TRISA = 0;
   378  0773  1683               	bsf	3,5	;RP0=1, select bank1
   379  0774  1303               	bcf	3,6	;RP1=0, select bank1
   380  0775  0185               	clrf	5	;volatile
   381  0776                     l711:
   382                           
   383                           ;main.c: 47: TRISB = 255;
   384  0776  30FF               	movlw	255
   385  0777  0086               	movwf	6	;volatile
   386  0778                     l713:
   387                           
   388                           ;main.c: 48: TRISC = 0;
   389  0778  0187               	clrf	7	;volatile
   390  0779                     l715:
   391                           
   392                           ;main.c: 49: TRISD = 0;
   393  0779  0188               	clrf	8	;volatile
   394  077A                     l717:
   395                           
   396                           ;main.c: 50: PORTA = 0;
   397  077A  1283               	bcf	3,5	;RP0=0, select bank0
   398  077B  1303               	bcf	3,6	;RP1=0, select bank0
   399  077C  0185               	clrf	5	;volatile
   400  077D                     l719:
   401                           
   402                           ;main.c: 51: PORTC = 0;
   403  077D  0187               	clrf	7	;volatile
   404  077E                     l721:
   405                           
   406                           ;main.c: 52: PORTD = 0;
   407  077E  0188               	clrf	8	;volatile
   408  077F                     l723:
   409                           
   410                           ;main.c: 54: OPTION_REGbits.nRBPU = 0;
   411  077F  1683               	bsf	3,5	;RP0=1, select bank1
   412  0780  1303               	bcf	3,6	;RP1=0, select bank1
   413  0781  1381               	bcf	1,7	;volatile
   414  0782                     l725:
   415                           
   416                           ;main.c: 55: char inicio = 0;
   417  0782  01F4               	clrf	main@inicio
   418  0783                     l727:
   419                           
   420                           ;main.c: 56: char contadorJ1 = 0, contadorJ2 = 0;
   421  0783  01F5               	clrf	main@contadorJ1
   422  0784                     l729:
   423  0784  01F6               	clrf	main@contadorJ2
   424  0785                     l731:
   425  0785                     l733:
   426                           
   427                           ;main.c: 58: unsigned char puertobActual = 1;
   428  0785  01F8               	clrf	main@puertobActual
   429  0786  0AF8               	incf	main@puertobActual,f
   430  0787                     l735:
   431                           
   432                           ;main.c: 60: puertobAnterior = puertobActual;
   433  0787  0878               	movf	main@puertobActual,w
   434  0788  00F3               	movwf	??_main
   435  0789  0873               	movf	??_main,w
   436  078A  00F7               	movwf	main@puertobAnterior
   437  078B                     l737:
   438                           
   439                           ;main.c: 61: _delay((unsigned long)((100)*(4000000/4000000.0)));
   440  078B  3021               	movlw	33
   441  078C  00F3               	movwf	??_main
   442  078D                     u197:
   443  078D  0BF3               	decfsz	??_main,f
   444  078E  2F8D               	goto	u197
   445  078F                     l739:
   446                           
   447                           ;main.c: 62: puertobActual = PORTB;
   448  078F  1283               	bcf	3,5	;RP0=0, select bank0
   449  0790  1303               	bcf	3,6	;RP1=0, select bank0
   450  0791  0806               	movf	6,w	;volatile
   451  0792  00F3               	movwf	??_main
   452  0793  0873               	movf	??_main,w
   453  0794  00F8               	movwf	main@puertobActual
   454  0795                     l741:
   455                           
   456                           ;main.c: 63: if ((puertobAnterior & 1) == 0) {
   457  0795  1877               	btfsc	main@puertobAnterior,0
   458  0796  2F98               	goto	u101
   459  0797  2F99               	goto	u100
   460  0798                     u101:
   461  0798  2F87               	goto	l735
   462  0799                     u100:
   463  0799                     l743:
   464                           
   465                           ;main.c: 64: if ((puertobActual & 1) == 1) {
   466  0799  1C78               	btfss	main@puertobActual,0
   467  079A  2F9C               	goto	u111
   468  079B  2F9D               	goto	u110
   469  079C                     u111:
   470  079C  2FE5               	goto	l771
   471  079D                     u110:
   472  079D                     l745:
   473                           
   474                           ;main.c: 65: inicio = 1;
   475  079D  01F4               	clrf	main@inicio
   476  079E  0AF4               	incf	main@inicio,f
   477  079F                     l747:
   478                           
   479                           ;main.c: 66: semaforo();
   480  079F  120A  118A  2748  120A  118A  	fcall	_semaforo
   481  07A4  2FE5               	goto	l771
   482  07A5                     l749:
   483                           
   484                           ;main.c: 69: puertobAnterior = puertobActual;
   485  07A5  0878               	movf	main@puertobActual,w
   486  07A6  00F3               	movwf	??_main
   487  07A7  0873               	movf	??_main,w
   488  07A8  00F7               	movwf	main@puertobAnterior
   489                           
   490                           ;main.c: 70: _delay((unsigned long)((100)*(4000000/4000000.0)));
   491  07A9  3021               	movlw	33
   492  07AA  00F3               	movwf	??_main
   493  07AB                     u207:
   494  07AB  0BF3               	decfsz	??_main,f
   495  07AC  2FAB               	goto	u207
   496                           
   497                           ;main.c: 71: puertobActual = PORTB;
   498  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   499  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   500  07AF  0806               	movf	6,w	;volatile
   501  07B0  00F3               	movwf	??_main
   502  07B1  0873               	movf	??_main,w
   503  07B2  00F8               	movwf	main@puertobActual
   504  07B3                     l751:
   505                           
   506                           ;main.c: 72: if ((puertobAnterior & 2) == 0 && (puertobActual & 2) == 2)
   507  07B3  18F7               	btfsc	main@puertobAnterior,1
   508  07B4  2FB6               	goto	u121
   509  07B5  2FB7               	goto	u120
   510  07B6                     u121:
   511  07B6  2FBF               	goto	l757
   512  07B7                     u120:
   513  07B7                     l753:
   514  07B7  1CF8               	btfss	main@puertobActual,1
   515  07B8  2FBA               	goto	u131
   516  07B9  2FBB               	goto	u130
   517  07BA                     u131:
   518  07BA  2FBF               	goto	l757
   519  07BB                     u130:
   520  07BB                     l755:
   521                           
   522                           ;main.c: 73: contadorJ1++;
   523  07BB  3001               	movlw	1
   524  07BC  00F3               	movwf	??_main
   525  07BD  0873               	movf	??_main,w
   526  07BE  07F5               	addwf	main@contadorJ1,f
   527  07BF                     l757:
   528                           
   529                           ;main.c: 75: if( (puertobAnterior & 4) == 0 && (puertobActual & 4) == 4)
   530  07BF  1977               	btfsc	main@puertobAnterior,2
   531  07C0  2FC2               	goto	u141
   532  07C1  2FC3               	goto	u140
   533  07C2                     u141:
   534  07C2  2FCB               	goto	l763
   535  07C3                     u140:
   536  07C3                     l759:
   537  07C3  1D78               	btfss	main@puertobActual,2
   538  07C4  2FC6               	goto	u151
   539  07C5  2FC7               	goto	u150
   540  07C6                     u151:
   541  07C6  2FCB               	goto	l763
   542  07C7                     u150:
   543  07C7                     l761:
   544                           
   545                           ;main.c: 76: contadorJ2++;
   546  07C7  3001               	movlw	1
   547  07C8  00F3               	movwf	??_main
   548  07C9  0873               	movf	??_main,w
   549  07CA  07F6               	addwf	main@contadorJ2,f
   550  07CB                     l763:
   551                           
   552                           ;main.c: 80: PORTA = valores [contadorJ1];
   553  07CB  0875               	movf	main@contadorJ1,w
   554  07CC  3E20               	addlw	(low (_valores| 0))& (0+255)
   555  07CD  0084               	movwf	4
   556  07CE  1383               	bcf	3,7	;select IRP bank0
   557  07CF  0800               	movf	0,w
   558  07D0  0085               	movwf	5	;volatile
   559  07D1                     l765:
   560                           
   561                           ;main.c: 81: PORTC = valores [contadorJ2];
   562  07D1  0876               	movf	main@contadorJ2,w
   563  07D2  3E20               	addlw	(low (_valores| 0))& (0+255)
   564  07D3  0084               	movwf	4
   565  07D4  0800               	movf	0,w
   566  07D5  0087               	movwf	7	;volatile
   567                           
   568                           ;main.c: 83: if ( PORTA == 128 || PORTC == 128 ){
   569  07D6  3080               	movlw	128
   570  07D7  0605               	xorwf	5,w	;volatile
   571  07D8  1903               	btfsc	3,2
   572  07D9  2FDB               	goto	u161
   573  07DA  2FDC               	goto	u160
   574  07DB                     u161:
   575  07DB  2FE2               	goto	l769
   576  07DC                     u160:
   577  07DC                     l767:
   578  07DC  3080               	movlw	128
   579  07DD  0607               	xorwf	7,w	;volatile
   580  07DE  1D03               	btfss	3,2
   581  07DF  2FE1               	goto	u171
   582  07E0  2FE2               	goto	u170
   583  07E1                     u171:
   584  07E1  2FE5               	goto	l771
   585  07E2                     u170:
   586  07E2                     l769:
   587                           
   588                           ;main.c: 84: inicio = 0;
   589  07E2  01F4               	clrf	main@inicio
   590                           
   591                           ;main.c: 85: contadorJ1 = 0;
   592  07E3  01F5               	clrf	main@contadorJ1
   593                           
   594                           ;main.c: 86: contadorJ2 = 0;
   595  07E4  01F6               	clrf	main@contadorJ2
   596  07E5                     l771:
   597  07E5  0874               	movf	main@inicio,w
   598  07E6  1D03               	btfss	3,2
   599  07E7  2FE9               	goto	u181
   600  07E8  2FEA               	goto	u180
   601  07E9                     u181:
   602  07E9  2FA5               	goto	l749
   603  07EA                     u180:
   604  07EA  2F87               	goto	l735
   605  07EB  120A  118A  2800   	ljmp	start
   606  07EE                     __end_of_main:
   607                           
   608                           	psect	text1
   609  0748                     __ptext1:	
   610 ;; *************** function _semaforo *****************
   611 ;; Defined at:
   612 ;;		line 100 in file "main.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          3       0       0       0       0
   629 ;;      Totals:         3       0       0       0       0
   630 ;;Total ram usage:        3 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           
   640                           ;psect for function _semaforo
   641  0748                     _semaforo:
   642  0748                     l707:	
   643                           ;incstack = 0
   644                           ; Regs used in _semaforo: [wreg]
   645                           
   646                           
   647                           ;main.c: 101: PORTD = 1;
   648  0748  3001               	movlw	1
   649  0749  1283               	bcf	3,5	;RP0=0, select bank0
   650  074A  1303               	bcf	3,6	;RP1=0, select bank0
   651  074B  0088               	movwf	8	;volatile
   652                           
   653                           ;main.c: 102: _delay((unsigned long)((500)*(4000000/4000.0)));
   654  074C  3003               	movlw	3
   655  074D  00F2               	movwf	??_semaforo+2
   656  074E  308A               	movlw	138
   657  074F  00F1               	movwf	??_semaforo+1
   658  0750  3055               	movlw	85
   659  0751  00F0               	movwf	??_semaforo
   660  0752                     u217:
   661  0752  0BF0               	decfsz	??_semaforo,f
   662  0753  2F52               	goto	u217
   663  0754  0BF1               	decfsz	??_semaforo+1,f
   664  0755  2F52               	goto	u217
   665  0756  0BF2               	decfsz	??_semaforo+2,f
   666  0757  2F52               	goto	u217
   667  0758  2F59               	nop2
   668                           
   669                           ;main.c: 103: PORTD = 2;
   670  0759  3002               	movlw	2
   671  075A  1283               	bcf	3,5	;RP0=0, select bank0
   672  075B  1303               	bcf	3,6	;RP1=0, select bank0
   673  075C  0088               	movwf	8	;volatile
   674                           
   675                           ;main.c: 104: _delay((unsigned long)((500)*(4000000/4000.0)));
   676  075D  3003               	movlw	3
   677  075E  00F2               	movwf	??_semaforo+2
   678  075F  308A               	movlw	138
   679  0760  00F1               	movwf	??_semaforo+1
   680  0761  3055               	movlw	85
   681  0762  00F0               	movwf	??_semaforo
   682  0763                     u227:
   683  0763  0BF0               	decfsz	??_semaforo,f
   684  0764  2F63               	goto	u227
   685  0765  0BF1               	decfsz	??_semaforo+1,f
   686  0766  2F63               	goto	u227
   687  0767  0BF2               	decfsz	??_semaforo+2,f
   688  0768  2F63               	goto	u227
   689  0769  2F6A               	nop2
   690                           
   691                           ;main.c: 105: PORTD = 4;
   692  076A  3004               	movlw	4
   693  076B  1283               	bcf	3,5	;RP0=0, select bank0
   694  076C  1303               	bcf	3,6	;RP1=0, select bank0
   695  076D  0088               	movwf	8	;volatile
   696  076E                     l49:
   697  076E  0008               	return
   698  076F                     __end_of_semaforo:
   699  007E                     btemp	set	126	;btemp
   700  007E                     wtemp0	set	126
   701                           
   702                           	psect	config
   703                           
   704                           ;Config register CONFIG1 @ 0x2007
   705                           ;	Oscillator Selection bits
   706                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   707                           ;	Watchdog Timer Enable bit
   708                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   709                           ;	Power-up Timer Enable bit
   710                           ;	PWRTE = OFF, PWRT disabled
   711                           ;	RE3/MCLR pin function select bit
   712                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   713                           ;	Code Protection bit
   714                           ;	CP = OFF, Program memory code protection is disabled
   715                           ;	Data Code Protection bit
   716                           ;	CPD = OFF, Data memory code protection is disabled
   717                           ;	Brown Out Reset Selection bits
   718                           ;	BOREN = OFF, BOR disabled
   719                           ;	Internal External Switchover bit
   720                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   721                           ;	Fail-Safe Clock Monitor Enabled bit
   722                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   723                           ;	Low Voltage Programming Enable bit
   724                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   725                           ;	In-Circuit Debugger Mode bit
   726                           ;	DEBUG = 0x1, unprogrammed default
   727  2007                     	org	8199
   728  2007  20D4               	dw	8404
   729                           
   730                           ;Config register CONFIG2 @ 0x2008
   731                           ;	Brown-out Reset Selection bit
   732                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   733                           ;	Flash Program Memory Self Write Enable bits
   734                           ;	WRT = OFF, Write protection off
   735  2008                     	org	8200
   736  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     257
                                              3 COMMON     6     6      0
                           _semaforo
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _semaforo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       9       5       11.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      12      12        0.0%
ABS                  0      0      12       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jan 22 12:24:39 2021

                      pc 0002                       l49 076E                       fsr 0004  
                    l711 0776                      l721 077E                      l713 0778  
                    l707 0748                      l731 0785                      l723 077F  
                    l715 0779                      l741 0795                      l733 0785  
                    l725 0782                      l717 077A                      l709 076F  
                    l751 07B3                      l743 0799                      l735 0787  
                    l727 0783                      l719 077D                      l761 07C7  
                    l753 07B7                      l745 079D                      l737 078B  
                    l729 0784                      l763 07CB                      l755 07BB  
                    l747 079F                      l771 07E5                      l739 078F  
                    l765 07D1                      l757 07BF                      l749 07A5  
                    l767 07DC                      l759 07C3                      l769 07E2  
                    u100 0799                      u101 0798                      u110 079D  
                    u111 079C                      u120 07B7                      u121 07B6  
                    u130 07BB                      u131 07BA                      u140 07C3  
                    u141 07C2                      u150 07C7                      u151 07C6  
                    u207 07AB                      u160 07DC                      u217 0752  
                    u161 07DB                      u170 07E2                      u227 0763  
                    u171 07E1                      u180 07EA                      u181 07E9  
                    u197 078D                      fsr0 0004                      indf 0000  
                   _main 076F                     btemp 007E                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0073                   _ANSELH 0189         __end_of_semaforo 076F  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 072C  
         _OPTION_REGbits 0081               __pmaintext 076F           main@contadorJ1 0075  
         main@contadorJ2 0076                ?_semaforo 0070                  __ptext1 0748  
                _valores 0020     end_of_initialization 07FC               ??_semaforo 0070  
             main@inicio 0074      start_initialization 07EE               init_fetch0 0735  
            __pdataBANK0 0020                ___latbits 0002        __size_of_semaforo 0027  
      main@puertobActual 0078            __size_of_main 007F                 _semaforo 0748  
               init_ram0 0739      main@puertobAnterior 0077  
