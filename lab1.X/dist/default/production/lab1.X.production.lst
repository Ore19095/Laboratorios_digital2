

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jan 21 21:24:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204                           
   205                           	psect	idataBANK0
   206  0763                     __pidataBANK0:
   207                           
   208                           ;initializer for _valores
   209  0763  3401               	retlw	1
   210  0764  3402               	retlw	2
   211  0765  3404               	retlw	4
   212  0766  3408               	retlw	8
   213  0767  3410               	retlw	16
   214  0768  3420               	retlw	32
   215  0769  3440               	retlw	64
   216  076A  3480               	retlw	128
   217  0008                     _PORTD	set	8
   218  0006                     _PORTBbits	set	6
   219  0006                     _PORTB	set	6
   220  0081                     _OPTION_REGbits	set	129
   221  0088                     _TRISD	set	136
   222  0087                     _TRISC	set	135
   223  0086                     _TRISB	set	134
   224  0085                     _TRISA	set	133
   225  0189                     _ANSELH	set	393
   226  0188                     _ANSEL	set	392
   227                           
   228                           	psect	cinit
   229  07EE                     start_initialization:	
   230                           ; #config settings
   231                           
   232  07EE                     __initialization:
   233                           
   234                           ; Initialize objects allocated to BANK0
   235  07EE  1383               	bcf	3,7	;select IRP bank0
   236  07EF  3028               	movlw	low (__pdataBANK0+8)
   237  07F0  00FD               	movwf	btemp+-1
   238  07F1  3007               	movlw	high __pidataBANK0
   239  07F2  00FE               	movwf	btemp
   240  07F3  3063               	movlw	low __pidataBANK0
   241  07F4  00FF               	movwf	btemp+1
   242  07F5  3020               	movlw	low __pdataBANK0
   243  07F6  0084               	movwf	4
   244  07F7  120A  118A  276F  120A  118A  	fcall	init_ram0
   245  07FC                     end_of_initialization:	
   246                           ;End of C runtime variable initialization code
   247                           
   248  07FC                     __end_of__initialization:
   249  07FC  0183               	clrf	3
   250  07FD  120A  118A  2FA5   	ljmp	_main	;jump to C main() function
   251                           
   252                           	psect	dataBANK0
   253  0020                     __pdataBANK0:
   254  0020                     _valores:
   255  0020                     	ds	8
   256                           
   257                           	psect	inittext
   258  076B                     init_fetch0:	
   259                           ;	Called with low address in FSR and high address in W
   260                           
   261  076B  087E               	movf	btemp,w
   262  076C  008A               	movwf	10
   263  076D  087F               	movf	btemp+1,w
   264  076E  0082               	movwf	2
   265  076F                     init_ram0:	
   266                           ;Called with:
   267                           ;	high address of idata address in btemp 
   268                           ;	low address of idata address in btemp+1 
   269                           ;	low address of data in FSR
   270                           ;	high address + 1 of data in btemp-1
   271                           
   272  076F  120A  118A  276B  120A  118A  	fcall	init_fetch0
   273  0774  0080               	movwf	0
   274  0775  0A84               	incf	4,f
   275  0776  0804               	movf	4,w
   276  0777  067D               	xorwf	btemp+-1,w
   277  0778  1903               	btfsc	3,2
   278  0779  3400               	retlw	0
   279  077A  0AFF               	incf	btemp+1,f
   280  077B  1903               	btfsc	3,2
   281  077C  0AFE               	incf	btemp,f
   282  077D  2F6F               	goto	init_ram0
   283                           
   284                           	psect	cstackCOMMON
   285  0070                     __pcstackCOMMON:
   286  0070                     ?_semaforo:
   287  0070                     ??_semaforo:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_main:	
   291                           ; 1 bytes @ 0x0
   292                           
   293                           
   294                           ; 1 bytes @ 0x0
   295  0070                     	ds	3
   296  0073                     ??_main:
   297                           
   298                           ; 1 bytes @ 0x3
   299  0073                     	ds	2
   300  0075                     main@contadorJ1:
   301                           
   302                           ; 1 bytes @ 0x5
   303  0075                     	ds	1
   304  0076                     main@inicio:
   305                           
   306                           ; 1 bytes @ 0x6
   307  0076                     	ds	1
   308  0077                     main@puertobAnterior:
   309                           
   310                           ; 1 bytes @ 0x7
   311  0077                     	ds	1
   312                           
   313                           	psect	maintext
   314  07A5                     __pmaintext:	
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 42 in file "main.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;  puertobAnter    1    7[COMMON] unsigned char 
   325 ;;  inicio          1    6[COMMON] unsigned char 
   326 ;;  contadorJ1      1    5[COMMON] unsigned char 
   327 ;;  contadorJ2      1    0        unsigned char 
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2, status,0, pclath, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : B00/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         4       0       0       0       0
   339 ;;      Temps:          1       0       0       0       0
   340 ;;      Totals:         5       0       0       0       0
   341 ;;Total ram usage:        5 bytes
   342 ;; Hardware stack levels required when called:    1
   343 ;; This function calls:
   344 ;;		_semaforo
   345 ;; This function is called by:
   346 ;;		Startup code after reset
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           
   351                           ;psect for function _main
   352  07A5                     _main:
   353  07A5                     l642:	
   354                           ;incstack = 0
   355                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   356                           
   357                           
   358                           ;main.c: 44: ANSEL = 0;
   359  07A5  1683               	bsf	3,5	;RP0=1, select bank3
   360  07A6  1703               	bsf	3,6	;RP1=1, select bank3
   361  07A7  0188               	clrf	8	;volatile
   362                           
   363                           ;main.c: 45: ANSELH =0;
   364  07A8  0189               	clrf	9	;volatile
   365                           
   366                           ;main.c: 46: TRISA = 0;
   367  07A9  1683               	bsf	3,5	;RP0=1, select bank1
   368  07AA  1303               	bcf	3,6	;RP1=0, select bank1
   369  07AB  0185               	clrf	5	;volatile
   370  07AC                     l644:
   371                           
   372                           ;main.c: 47: TRISB= 255;
   373  07AC  30FF               	movlw	255
   374  07AD  0086               	movwf	6	;volatile
   375  07AE                     l646:
   376                           
   377                           ;main.c: 48: TRISC = 0;
   378  07AE  0187               	clrf	7	;volatile
   379  07AF                     l648:
   380                           
   381                           ;main.c: 49: TRISD = 0;
   382  07AF  0188               	clrf	8	;volatile
   383  07B0                     l650:
   384                           
   385                           ;main.c: 50: OPTION_REGbits.nRBPU = 0;
   386  07B0  1381               	bcf	1,7	;volatile
   387  07B1                     l652:
   388                           
   389                           ;main.c: 51: char inicio =0;
   390  07B1  01F6               	clrf	main@inicio
   391  07B2                     l654:
   392                           
   393                           ;main.c: 52: char contadorJ1 =0 , contadorJ2= 0;
   394  07B2  01F5               	clrf	main@contadorJ1
   395  07B3                     l656:
   396  07B3                     l31:	
   397                           ;main.c: 53: char puertobAnterior;;main.c: 54: while (1){
   398                           
   399                           
   400                           ;main.c: 55: puertobAnterior = PORTB;
   401  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   402  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   403  07B5  0806               	movf	6,w	;volatile
   404  07B6  00F3               	movwf	??_main
   405  07B7  0873               	movf	??_main,w
   406  07B8  00F7               	movwf	main@puertobAnterior
   407  07B9                     l658:
   408                           
   409                           ;main.c: 56: if( (puertobAnterior && 1 ) == 0 ){
   410  07B9  0877               	movf	main@puertobAnterior,w
   411  07BA  1903               	btfsc	3,2
   412  07BB  2FBD               	goto	u11
   413  07BC  2FBE               	goto	u10
   414  07BD                     u11:
   415  07BD  2FBF               	goto	l662
   416  07BE                     u10:
   417  07BE  2FB3               	goto	l31
   418  07BF                     l662:
   419                           
   420                           ;main.c: 57: _delay((unsigned long)((100)*(4000000/4000000.0)));
   421  07BF  3021               	movlw	33
   422  07C0  00F3               	movwf	??_main
   423  07C1                     u67:
   424  07C1  0BF3               	decfsz	??_main,f
   425  07C2  2FC1               	goto	u67
   426  07C3                     l664:
   427                           
   428                           ;main.c: 58: if (PORTBbits.RB0 == 1) {
   429  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   430  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   431  07C5  1C06               	btfss	6,0	;volatile
   432  07C6  2FC8               	goto	u21
   433  07C7  2FC9               	goto	u20
   434  07C8                     u21:
   435  07C8  2FE5               	goto	l36
   436  07C9                     u20:
   437  07C9                     l666:
   438                           
   439                           ;main.c: 59: inicio =1;
   440  07C9  01F6               	clrf	main@inicio
   441  07CA  0AF6               	incf	main@inicio,f
   442  07CB                     l668:
   443                           
   444                           ;main.c: 60: semaforo();
   445  07CB  120A  118A  277E  120A  118A  	fcall	_semaforo
   446  07D0  2FE5               	goto	l36
   447  07D1                     l670:
   448                           
   449                           ;main.c: 63: if ( (puertobAnterior && 2) == 0){
   450  07D1  0877               	movf	main@puertobAnterior,w
   451  07D2  1903               	btfsc	3,2
   452  07D3  2FD5               	goto	u31
   453  07D4  2FD6               	goto	u30
   454  07D5                     u31:
   455  07D5  2FD7               	goto	l674
   456  07D6                     u30:
   457  07D6  2FE5               	goto	l36
   458  07D7                     l674:
   459                           
   460                           ;main.c: 64: _delay((unsigned long)((100)*(4000000/4000000.0)));
   461  07D7  3021               	movlw	33
   462  07D8  00F3               	movwf	??_main
   463  07D9                     u77:
   464  07D9  0BF3               	decfsz	??_main,f
   465  07DA  2FD9               	goto	u77
   466  07DB                     l676:
   467                           
   468                           ;main.c: 65: if(PORTBbits.RB1 == 1 ) contadorJ1++;
   469  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   470  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   471  07DD  1C86               	btfss	6,1	;volatile
   472  07DE  2FE0               	goto	u41
   473  07DF  2FE1               	goto	u40
   474  07E0                     u41:
   475  07E0  2FE5               	goto	l36
   476  07E1                     u40:
   477  07E1                     l678:
   478  07E1  3001               	movlw	1
   479  07E2  00F3               	movwf	??_main
   480  07E3  0873               	movf	??_main,w
   481  07E4  07F5               	addwf	main@contadorJ1,f
   482  07E5                     l36:
   483  07E5  0876               	movf	main@inicio,w
   484  07E6  1D03               	btfss	3,2
   485  07E7  2FE9               	goto	u51
   486  07E8  2FEA               	goto	u50
   487  07E9                     u51:
   488  07E9  2FD1               	goto	l670
   489  07EA                     u50:
   490  07EA  2FB3               	goto	l31
   491  07EB  120A  118A  2800   	ljmp	start
   492  07EE                     __end_of_main:
   493                           
   494                           	psect	text1
   495  077E                     __ptext1:	
   496 ;; *************** function _semaforo *****************
   497 ;; Defined at:
   498 ;;		line 78 in file "main.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0
   514 ;;      Temps:          3       0       0       0       0
   515 ;;      Totals:         3       0       0       0       0
   516 ;;Total ram usage:        3 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _semaforo
   527  077E                     _semaforo:
   528  077E                     l640:	
   529                           ;incstack = 0
   530                           ; Regs used in _semaforo: [wreg]
   531                           
   532                           
   533                           ;main.c: 79: PORTD = 1;
   534  077E  3001               	movlw	1
   535  077F  1283               	bcf	3,5	;RP0=0, select bank0
   536  0780  1303               	bcf	3,6	;RP1=0, select bank0
   537  0781  0088               	movwf	8	;volatile
   538                           
   539                           ;main.c: 80: _delay((unsigned long)((500)*(4000000/4000.0)));
   540  0782  3003               	movlw	3
   541  0783  00F2               	movwf	??_semaforo+2
   542  0784  308A               	movlw	138
   543  0785  00F1               	movwf	??_semaforo+1
   544  0786  3055               	movlw	85
   545  0787  00F0               	movwf	??_semaforo
   546  0788                     u87:
   547  0788  0BF0               	decfsz	??_semaforo,f
   548  0789  2F88               	goto	u87
   549  078A  0BF1               	decfsz	??_semaforo+1,f
   550  078B  2F88               	goto	u87
   551  078C  0BF2               	decfsz	??_semaforo+2,f
   552  078D  2F88               	goto	u87
   553  078E  2F8F               	nop2
   554                           
   555                           ;main.c: 81: PORTD = 2;
   556  078F  3002               	movlw	2
   557  0790  1283               	bcf	3,5	;RP0=0, select bank0
   558  0791  1303               	bcf	3,6	;RP1=0, select bank0
   559  0792  0088               	movwf	8	;volatile
   560                           
   561                           ;main.c: 82: _delay((unsigned long)((500)*(4000000/4000.0)));
   562  0793  3003               	movlw	3
   563  0794  00F2               	movwf	??_semaforo+2
   564  0795  308A               	movlw	138
   565  0796  00F1               	movwf	??_semaforo+1
   566  0797  3055               	movlw	85
   567  0798  00F0               	movwf	??_semaforo
   568  0799                     u97:
   569  0799  0BF0               	decfsz	??_semaforo,f
   570  079A  2F99               	goto	u97
   571  079B  0BF1               	decfsz	??_semaforo+1,f
   572  079C  2F99               	goto	u97
   573  079D  0BF2               	decfsz	??_semaforo+2,f
   574  079E  2F99               	goto	u97
   575  079F  2FA0               	nop2
   576                           
   577                           ;main.c: 83: PORTD =4;
   578  07A0  3004               	movlw	4
   579  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   580  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   581  07A3  0088               	movwf	8	;volatile
   582  07A4                     l48:
   583  07A4  0008               	return
   584  07A5                     __end_of_semaforo:
   585  007E                     btemp	set	126	;btemp
   586  007E                     wtemp0	set	126
   587                           
   588                           	psect	config
   589                           
   590                           ;Config register CONFIG1 @ 0x2007
   591                           ;	Oscillator Selection bits
   592                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   593                           ;	Watchdog Timer Enable bit
   594                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   595                           ;	Power-up Timer Enable bit
   596                           ;	PWRTE = OFF, PWRT disabled
   597                           ;	RE3/MCLR pin function select bit
   598                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   599                           ;	Code Protection bit
   600                           ;	CP = OFF, Program memory code protection is disabled
   601                           ;	Data Code Protection bit
   602                           ;	CPD = OFF, Data memory code protection is disabled
   603                           ;	Brown Out Reset Selection bits
   604                           ;	BOREN = OFF, BOR disabled
   605                           ;	Internal External Switchover bit
   606                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   607                           ;	Fail-Safe Clock Monitor Enabled bit
   608                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   609                           ;	Low Voltage Programming Enable bit
   610                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   611                           ;	In-Circuit Debugger Mode bit
   612                           ;	DEBUG = 0x1, unprogrammed default
   613  2007                     	org	8199
   614  2007  20D4               	dw	8404
   615                           
   616                           ;Config register CONFIG2 @ 0x2008
   617                           ;	Brown-out Reset Selection bit
   618                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   619                           ;	Flash Program Memory Self Write Enable bits
   620                           ;	WRT = OFF, Write protection off
   621  2008                     	org	8200
   622  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      45
                                              3 COMMON     5     5      0
                           _semaforo
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _semaforo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       8       5       10.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      10      12        0.0%
ABS                  0      0      10       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jan 21 21:24:47 2021

                      pc 0002                       l31 07B3                       l36 07E5  
                     l48 07A4                       u10 07BE                       u11 07BD  
                     u20 07C9                       u21 07C8                       u30 07D6  
                     u31 07D5                       u40 07E1                       u41 07E0  
                     u50 07EA                       u51 07E9                       u67 07C1  
                     u77 07D9                       u87 0788                       u97 0799  
                     fsr 0004                      l640 077E                      l650 07B0  
                    l642 07A5                      l652 07B1                      l644 07AC  
                    l670 07D1                      l662 07BF                      l654 07B2  
                    l646 07AE                      l664 07C3                      l656 07B3  
                    l648 07AF                      l674 07D7                      l666 07C9  
                    l658 07B9                      l676 07DB                      l668 07CB  
                    l678 07E1                      indf 0000                     _main 07A5  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTB 0006                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0073                   _ANSELH 0189         __end_of_semaforo 07A5  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0763  
         _OPTION_REGbits 0081               __pmaintext 07A5           main@contadorJ1 0075  
              ?_semaforo 0070                  __ptext1 077E                  _valores 0020  
   end_of_initialization 07FC               ??_semaforo 0070                _PORTBbits 0006  
             main@inicio 0076      start_initialization 07EE               init_fetch0 076B  
            __pdataBANK0 0020                ___latbits 0002        __size_of_semaforo 0027  
          __size_of_main 0049                 _semaforo 077E                 init_ram0 076F  
    main@puertobAnterior 0077  
